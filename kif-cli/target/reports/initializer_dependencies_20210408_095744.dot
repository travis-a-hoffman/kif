digraph initializer_dependencies {
"org.graalvm.word.WordBase"[fillcolor=green]
"java.lang.Object"[fillcolor=green]
"org.graalvm.word.ComparableWord"[fillcolor=green]
"org.graalvm.word.SignedWord"[fillcolor=green]
"org.graalvm.word.UnsignedWord"[fillcolor=green]
"org.graalvm.word.PointerBase"[fillcolor=green]
"org.graalvm.word.Pointer"[fillcolor=green]
"org.graalvm.compiler.word.Word"[fillcolor=green]
"org.graalvm.word.WordFactory"[fillcolor=green]
"org.graalvm.compiler.word.ObjectAccess"[fillcolor=green]
"org.graalvm.compiler.word.BarrieredAccess"[fillcolor=green]
"java.io.Serializable"[fillcolor=green]
"java.lang.Comparable"[fillcolor=green]
"java.lang.CharSequence"[fillcolor=green]
"java.lang.String"[fillcolor=green]
"java.lang.Cloneable"[fillcolor=green]
"java.lang.Enum"[fillcolor=green]
"org.graalvm.word.LocationIdentity"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Unistd"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Errno"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Pthread"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Signal"[fillcolor=green]
"org.graalvm.nativeimage.c.function.CodePointer"[fillcolor=green]
"org.graalvm.nativeimage.c.function.RelocatedPointer"[fillcolor=green]
"org.graalvm.nativeimage.c.function.CFunctionPointer"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Mman"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Resource"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Dlfcn"[fillcolor=green]
"org.graalvm.nativeimage.c.type.WordPointer"[fillcolor=green]
"com.oracle.svm.core.thread.VMThreads"[fillcolor=green]
"com.oracle.svm.core.posix.thread.PosixVMThreads"[fillcolor=green]
"org.graalvm.nativeimage.c.type.CCharPointer"[fillcolor=green]
"com.oracle.svm.core.posix.headers.darwin.DarwinVirtualMemory"[fillcolor=green]
"com.oracle.svm.core.posix.headers.darwin.Foundation"[fillcolor=green]
"com.oracle.svm.core.posix.headers.darwin.DarwinTime"[fillcolor=green]
"com.oracle.svm.core.posix.headers.darwin.DarwinPthread"[fillcolor=green]
"com.oracle.svm.core.posix.headers.darwin.DarwinTime$MachTimebaseInfo"[fillcolor=green]
"com.oracle.svm.core.posix.headers.darwin.DarwinErrno"[fillcolor=green]
"org.graalvm.nativeimage.c.type.CIntPointer"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Mman$NoTransitions"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Pthread$pthread_mutex_t"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Pthread$pthread_cond_t"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Time$timespec"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Time"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Pthread$pthread_attr_t"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Pthread$pthread_tPointer"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Signal$SignalEnum"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Signal$sigaction"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Pthread$pthread_condattr_t"[fillcolor=green]
"com.oracle.svm.core.posix.headers.LibC"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Unistd$NoTransitions"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Pwd"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Time$timeval"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Sched"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Sysctl"[fillcolor=green]
"com.oracle.svm.core.posix.headers.Resource$rlimit"[fillcolor=green]
"com.oracle.svm.core.amd64.AMD64LibCHelper"[fillcolor=green]
"com.oracle.svm.core.amd64.AMD64LibCHelper$CPUFeatures"[fillcolor=green]
"com.oracle.svm.core.jdk.Jvm"[fillcolor=green]
"com.oracle.svm.core.jdk.PlatformNativeLibrarySupport"[fillcolor=green]
"com.oracle.svm.core.jdk.JNIPlatformNativeLibrarySupport"[fillcolor=green]
"com.oracle.svm.core.LibCHelper"[fillcolor=green]
"com.oracle.svm.jni.nativeapi.JNINativeMethod"[fillcolor=green]
"com.oracle.svm.jni.nativeapi.JNIJavaVMOption"[fillcolor=green]
"com.oracle.svm.core.posix.headers.darwin.Foundation$NSOperatingSystemVersion"[fillcolor=green]
"com.oracle.svm.core.RegisterDumper"[fillcolor=green]
"com.oracle.svm.core.genscavenge.HeapChunk"[fillcolor=green]
"com.oracle.svm.core.genscavenge.AlignedHeapChunk"[fillcolor=green]
"com.oracle.svm.core.thread.NativeVMOperationData"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GCImpl$CollectionVMOperationData"[fillcolor=green]
"com.oracle.svm.core.heap.GC"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GCImpl"[fillcolor=green]
"com.oracle.svm.core.genscavenge.ThreadLocalAllocation"[fillcolor=green]
"com.oracle.svm.core.genscavenge.UnalignedHeapChunk"[fillcolor=green]
"com.oracle.svm.core.thread.JavaThreads$ThreadStartData"[fillcolor=green]
"com.oracle.svm.core.thread.JavaThreads"[fillcolor=green]
"com.oracle.svm.core.stack.JavaStackWalk"[fillcolor=green]
"com.oracle.svm.core.stack.JavaFrameAnchor"[fillcolor=green]
"com.oracle.svm.core.code.UntetheredCodeInfo"[fillcolor=green]
"com.oracle.svm.core.code.CodeInfo"[fillcolor=green]
"com.oracle.svm.core.code.InstalledCodeObserver"[fillcolor=green]
"com.oracle.svm.core.code.SimpleCodeInfoQueryResult"[fillcolor=green]
"com.oracle.svm.core.c.function.CEntryPointNativeFunctions"[fillcolor=green]
"com.oracle.svm.jni.nativeapi.JNIObjectRefType"[fillcolor=green]
"com.oracle.svm.core.jdk.SystemPropertiesSupport"[fillcolor=green]
"com.oracle.svm.core.posix.PosixSystemPropertiesSupport"[fillcolor=green]
"com.oracle.svm.core.posix.darwin.DarwinSystemPropertiesSupport"[fillcolor=green]
"com.oracle.svm.core.code.InstalledCodeObserver$InstalledCodeObserverHandleAccessor"[fillcolor=green]
"com.oracle.svm.core.genscavenge.Space"[fillcolor=green]
"com.oracle.svm.core.thread.VMOperation"[fillcolor=green]
"com.oracle.svm.core.thread.NativeVMOperation"[fillcolor=green]
"java.lang.ref.Reference"[fillcolor=red]
"jdk.vm.ci.meta.JavaKind$FormatWithToString"[fillcolor=green]
"jdk.vm.ci.meta.JavaKind"[fillcolor=green]
"java.lang.reflect.AnnotatedElement"[fillcolor=green]
"java.lang.reflect.Type"[fillcolor=green]
"java.lang.reflect.GenericDeclaration"[fillcolor=green]
"java.lang.Class"[fillcolor=red]
"java.util.concurrent.locks.AbstractOwnableSynchronizer"[fillcolor=green]
"java.util.concurrent.locks.AbstractQueuedSynchronizer"[fillcolor=green]
"java.util.concurrent.locks.ReentrantLock$Sync"[fillcolor=green]
"java.util.concurrent.locks.Lock"[fillcolor=green]
"java.util.concurrent.locks.ReentrantLock"[fillcolor=green]
"java.util.concurrent.locks.ReentrantLock$NonfairSync"[fillcolor=green]
"java.util.concurrent.locks.Condition"[fillcolor=green]
"java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"[fillcolor=green]
"jdk.vm.ci.meta.ModifiersProvider"[fillcolor=green]
"com.oracle.svm.core.classinitialization.ClassInitializationInfo"[fillcolor=green]
"java.lang.ClassLoader"[fillcolor=green]
"com.oracle.svm.core.util.LazyFinalReference"[fillcolor=green]
"com.oracle.svm.core.hub.DynamicHub$ReflectionData"[fillcolor=green]
"org.graalvm.compiler.api.replacements.SnippetTemplateCache"[fillcolor=green]
"org.graalvm.compiler.replacements.SnippetTemplate$AbstractTemplates"[fillcolor=green]
"org.graalvm.compiler.replacements.SnippetTemplate"[fillcolor=green]
"com.oracle.svm.core.graal.snippets.SubstrateTemplates"[fillcolor=green]
"org.graalvm.compiler.replacements.Snippets"[fillcolor=green]
"com.oracle.svm.core.graal.jdk.ArraycopySnippets"[fillcolor=green]
"java.lang.Boolean"[fillcolor=green]
"java.lang.Number"[fillcolor=green]
"java.lang.Byte"[fillcolor=green]
"java.lang.Byte$ByteCache"[fillcolor=green]
"java.lang.Short"[fillcolor=green]
"java.lang.Short$ShortCache"[fillcolor=green]
"java.lang.Character"[fillcolor=green]
"java.lang.Character$CharacterCache"[fillcolor=green]
"java.lang.Integer"[fillcolor=green]
"java.lang.Integer$IntegerCache"[fillcolor=green]
"java.lang.Float"[fillcolor=green]
"java.lang.Long"[fillcolor=green]
"java.lang.Long$LongCache"[fillcolor=green]
"java.lang.Double"[fillcolor=green]
"com.oracle.svm.core.util.Counter"[fillcolor=green]
"com.oracle.svm.core.allocationprofile.AllocationCounter"[fillcolor=green]
"java.lang.invoke.MethodHandle"[fillcolor=green]
"java.lang.invoke.VarHandle"[fillcolor=green]
"org.graalvm.nativeimage.impl.clinit.ClassInitializationTracking"[fillcolor=green]
"java.lang.Throwable"[fillcolor=green]
"java.lang.Error"[fillcolor=green]
"java.lang.AssertionError"[fillcolor=green]
"org.graalvm.compiler.replacements.AllocationSnippets"[fillcolor=green]
"com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets"[fillcolor=green]
"com.oracle.svm.core.snippets.SnippetRuntime"[fillcolor=green]
"java.lang.Math"[fillcolor=green]
"com.oracle.svm.graal.AMD64ArrayIndexOfForeignCalls"[fillcolor=green]
"java.lang.Runnable"[fillcolor=green]
"java.lang.Thread"[fillcolor=green]
"com.oracle.svm.core.graal.jdk.SubstrateObjectCloneSnippets"[fillcolor=green]
"sun.misc.Unsafe"[fillcolor=green]
"com.oracle.svm.core.graal.jdk.SubstrateArraysCopyOfSnippets"[fillcolor=green]
"com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets"[fillcolor=green]
"java.lang.VirtualMachineError"[fillcolor=green]
"java.lang.StackOverflowError"[fillcolor=green]
"com.oracle.svm.core.thread.Safepoint"[fillcolor=green]
"java.lang.Exception"[fillcolor=green]
"java.lang.RuntimeException"[fillcolor=green]
"com.oracle.svm.core.thread.Safepoint$SafepointException"[fillcolor=green]
"com.oracle.svm.core.identityhashcode.IdentityHashCodeSupport"[fillcolor=green]
"com.oracle.svm.core.monitor.MonitorSupport"[fillcolor=green]
"com.oracle.svm.core.monitor.MultiThreadedMonitorSupport"[fillcolor=green]
"java.lang.OutOfMemoryError"[fillcolor=green]
"com.oracle.svm.core.graal.snippets.CEntryPointSnippets"[fillcolor=green]
"com.oracle.svm.core.snippets.FatalAssertions"[fillcolor=green]
"com.oracle.svm.core.snippets.ImplicitExceptions"[fillcolor=green]
"java.lang.NullPointerException"[fillcolor=green]
"java.lang.IndexOutOfBoundsException"[fillcolor=green]
"java.lang.ArrayIndexOutOfBoundsException"[fillcolor=green]
"java.lang.ClassCastException"[fillcolor=green]
"java.lang.ArrayStoreException"[fillcolor=green]
"java.lang.IllegalArgumentException"[fillcolor=green]
"java.lang.ArithmeticException"[fillcolor=green]
"com.oracle.svm.core.snippets.ExceptionUnwind"[fillcolor=green]
"org.graalvm.compiler.replacements.IdentityHashCodeSnippets"[fillcolor=green]
"com.oracle.svm.core.identityhashcode.SubstrateIdentityHashCodeSnippets"[fillcolor=green]
"java.util.Formattable"[fillcolor=green]
"org.graalvm.compiler.graph.NodeInterface"[fillcolor=green]
"org.graalvm.compiler.graph.Node"[fillcolor=green]
"org.graalvm.compiler.nodes.ValueNodeInterface"[fillcolor=green]
"org.graalvm.compiler.nodes.ValueNode"[fillcolor=green]
"org.graalvm.compiler.nodes.spi.Lowerable"[fillcolor=green]
"com.oracle.svm.core.config.ObjectLayout"[fillcolor=green]
"org.graalvm.compiler.nodes.NamedLocationIdentity"[fillcolor=green]
"com.oracle.svm.core.SubstrateUtil"[fillcolor=green]
"com.oracle.svm.core.hub.HubType"[fillcolor=green]
"org.graalvm.compiler.replacements.SnippetCounter"[fillcolor=green]
"org.graalvm.compiler.nodes.FixedNodeInterface"[fillcolor=green]
"org.graalvm.compiler.nodes.FixedNode"[fillcolor=green]
"org.graalvm.compiler.nodes.FixedWithNextNode"[fillcolor=green]
"org.graalvm.compiler.replacements.SnippetCounterNode"[fillcolor=green]
"org.graalvm.compiler.replacements.ConstantStringIndexOfSnippets"[fillcolor=green]
"org.graalvm.compiler.replacements.ReplacementsUtil"[fillcolor=green]
"org.graalvm.compiler.options.OptionValues"[fillcolor=green]
"java.lang.Iterable"[fillcolor=green]
"java.util.Map"[fillcolor=green]
"jdk.vm.ci.meta.DeoptimizationReason"[fillcolor=green]
"jdk.vm.ci.meta.JavaMethod"[fillcolor=green]
"jdk.vm.ci.meta.InvokeTarget"[fillcolor=green]
"jdk.vm.ci.meta.ResolvedJavaMethod"[fillcolor=green]
"com.oracle.svm.core.classinitialization.EnsureClassInitializedSnippets"[fillcolor=green]
"com.oracle.svm.core.classinitialization.ClassInitializationInfo$InitState"[fillcolor=green]
"com.oracle.svm.core.genscavenge.graal.BarrierSnippetCounters"[fillcolor=green]
"com.oracle.svm.core.util.Counter$Group"[fillcolor=green]
"com.oracle.svm.core.heap.ObjectHeader"[fillcolor=green]
"com.oracle.svm.core.genscavenge.ObjectHeaderImpl"[fillcolor=green]
"com.oracle.svm.core.genscavenge.HeapPolicy"[fillcolor=green]
"com.oracle.svm.core.util.PointerUtils"[fillcolor=green]
"com.oracle.svm.core.util.UnsignedUtils"[fillcolor=green]
"com.oracle.svm.core.genscavenge.CardTable"[fillcolor=green]
"org.graalvm.compiler.replacements.AllocationSnippets$AllocationProfilingData"[fillcolor=green]
"com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets"[fillcolor=green]
"com.oracle.svm.core.heap.Heap"[fillcolor=green]
"com.oracle.svm.core.genscavenge.HeapImpl"[fillcolor=green]
"com.oracle.svm.core.SubstrateOptions"[fillcolor=green]
"org.graalvm.compiler.options.OptionKey"[fillcolor=green]
"com.oracle.svm.core.threadlocal.FastThreadLocal"[fillcolor=green]
"com.oracle.svm.core.threadlocal.FastThreadLocalBytes"[fillcolor=green]
"org.graalvm.compiler.replacements.AllocationSnippets$AllocationSnippetCounters"[fillcolor=green]
"com.oracle.svm.core.allocationprofile.AllocationSite$Options"[fillcolor=green]
"com.oracle.svm.core.allocationprofile.AllocationSite"[fillcolor=green]
"com.oracle.svm.core.hub.LayoutEncoding"[fillcolor=green]
"java.lang.Void"[fillcolor=green]
"jdk.vm.ci.meta.DeoptimizationAction"[fillcolor=green]
"com.oracle.svm.core.graal.snippets.CFunctionSnippets"[fillcolor=green]
"java.util.Collection"[fillcolor=green]
"java.util.List"[fillcolor=green]
"com.oracle.svm.core.stack.JavaFrameAnchors"[fillcolor=green]
"com.oracle.svm.core.threadlocal.FastThreadLocalWord"[fillcolor=green]
"com.oracle.svm.core.thread.VMThreads$StatusSupport"[fillcolor=green]
"org.graalvm.nativeimage.impl.ThreadingSupport"[fillcolor=green]
"com.oracle.svm.core.thread.ThreadingSupportImpl"[fillcolor=green]
"com.oracle.svm.core.thread.VMThreads$ActionOnTransitionToJavaSupport"[fillcolor=green]
"com.oracle.svm.core.threadlocal.FastThreadLocalInt"[fillcolor=green]
"com.oracle.svm.core.thread.ThreadingSupportImpl$Options"[fillcolor=green]
"org.graalvm.collections.UnmodifiableEconomicMap"[fillcolor=green]
"org.graalvm.collections.EconomicMap"[fillcolor=green]
"java.util.function.Predicate"[fillcolor=green]
"com.oracle.svm.core.stack.StackOverflowCheck"[fillcolor=green]
"com.oracle.svm.core.graal.snippets.StackOverflowCheckImpl"[fillcolor=green]
"com.oracle.svm.core.monitor.MonitorSnippets"[fillcolor=green]
"com.oracle.svm.core.Isolates"[fillcolor=green]
"com.oracle.svm.core.c.function.CEntryPointBuiltins"[fillcolor=green]
"com.oracle.svm.core.code.IsolateEnterStub"[fillcolor=green]
"org.graalvm.home.impl.VmLocatorSymbol"[fillcolor=green]
"com.oracle.svm.core.JavaMainWrapper"[fillcolor=green]
"java.lang.ReflectiveOperationException"[fillcolor=green]
"java.lang.invoke.DelegatingMethodHandle"[fillcolor=green]
"java.lang.reflect.Member"[fillcolor=green]
"java.lang.ClassNotFoundException"[fillcolor=green]
"com.oracle.svm.jni.access.JNIAccessibleMember"[fillcolor=green]
"com.oracle.svm.jni.access.JNIAccessibleMethod"[fillcolor=green]
"com.oracle.svm.jni.JNIJavaCallWrappers"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIInvocationInterface"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIInvocationInterface$Exports"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIFunctions"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIFunctions$UnimplementedWithJNIEnvArgument"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIFunctions$UnimplementedWithJavaVMArgument"[fillcolor=green]
"java.nio.Buffer"[fillcolor=green]
"com.oracle.svm.jni.access.JNINativeLinkage"[fillcolor=green]
"java.lang.InstantiationException"[fillcolor=green]
"java.nio.ByteBuffer"[fillcolor=green]
"java.nio.MappedByteBuffer"[fillcolor=green]
"sun.nio.ch.DirectBuffer"[fillcolor=green]
"java.nio.DirectByteBuffer"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIFunctions$NewObjectWithObjectArrayArgFunctionPointer"[fillcolor=green]
"java.lang.AutoCloseable"[fillcolor=green]
"com.oracle.svm.core.log.Log"[fillcolor=green]
"java.lang.reflect.AccessibleObject"[fillcolor=green]
"java.lang.reflect.Field"[fillcolor=green]
"java.lang.NoSuchFieldException"[fillcolor=green]
"com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor"[fillcolor=green]
"java.lang.reflect.Executable"[fillcolor=green]
"java.lang.reflect.Constructor"[fillcolor=green]
"java.lang.reflect.Method"[fillcolor=green]
"java.util.AbstractCollection"[fillcolor=green]
"java.util.AbstractList"[fillcolor=green]
"java.util.RandomAccess"[fillcolor=green]
"java.util.ArrayList"[fillcolor=green]
"java.io.File"[fillcolor=green]
"java.lang.NoSuchMethodException"[fillcolor=green]
"java.util.Enumeration"[fillcolor=green]
"java.util.StringTokenizer"[fillcolor=green]
"com.oracle.svm.core.jdk.StringInternSupport"[fillcolor=green]
"java.util.AbstractMap"[fillcolor=green]
"java.util.concurrent.ConcurrentMap"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap"[fillcolor=green]
"com.oracle.svm.core.heap.FillerObject"[fillcolor=green]
"com.oracle.svm.core.SubstrateGCOptions"[fillcolor=green]
"com.oracle.svm.core.option.RuntimeOptionKey"[fillcolor=green]
"java.io.DataInput"[fillcolor=green]
"java.io.Closeable"[fillcolor=green]
"java.util.zip.Inflater"[fillcolor=red]
"java.lang.IllegalAccessException"[fillcolor=green]
"java.security.PrivilegedActionException"[fillcolor=green]
"java.util.concurrent.Executor"[fillcolor=green]
"sun.nio.fs.UnixNativeDispatcher"[fillcolor=red]
"java.util.Dictionary"[fillcolor=green]
"java.util.Hashtable"[fillcolor=green]
"java.util.Properties"[fillcolor=green]
"java.lang.reflect.Proxy"[fillcolor=green]
"java.lang.System"[fillcolor=green]
"java.io.InputStream"[fillcolor=green]
"java.io.Flushable"[fillcolor=green]
"java.io.OutputStream"[fillcolor=green]
"java.io.IOException"[fillcolor=green]
"com.oracle.svm.core.VM"[fillcolor=green]
"com.oracle.svm.core.c.CGlobalData"[fillcolor=green]
"java.util.SplittableRandom"[fillcolor=green]
"com.oracle.svm.core.util.VMError"[fillcolor=green]
"java.lang.NegativeArraySizeException"[fillcolor=green]
"com.oracle.svm.core.heap.ReferenceAccess"[fillcolor=green]
"org.graalvm.compiler.serviceprovider.GraalUnsafeAccess"[fillcolor=green]
"jdk.vm.ci.meta.Constant"[fillcolor=green]
"jdk.vm.ci.meta.JavaValue"[fillcolor=green]
"jdk.vm.ci.meta.JavaConstant"[fillcolor=green]
"com.oracle.svm.core.meta.CompressibleConstant"[fillcolor=green]
"jdk.vm.ci.meta.VMConstant"[fillcolor=green]
"com.oracle.svm.core.meta.SubstrateObjectConstant"[fillcolor=green]
"com.oracle.svm.core.meta.DirectSubstrateObjectConstant"[fillcolor=green]
"com.oracle.svm.core.thread.VMOperationControl"[fillcolor=green]
"com.oracle.svm.core.option.XOptions$XFlag"[fillcolor=green]
"com.oracle.svm.core.option.XOptions"[fillcolor=green]
"com.oracle.svm.core.thread.Safepoint$Statistics"[fillcolor=green]
"java.lang.Appendable"[fillcolor=green]
"java.lang.AbstractStringBuilder"[fillcolor=green]
"java.lang.StringBuilder"[fillcolor=green]
"com.oracle.svm.core.genscavenge.Timer"[fillcolor=green]
"com.oracle.svm.core.thread.Safepoint$Statistics$Options"[fillcolor=green]
"com.oracle.svm.core.threadlocal.FastThreadLocalObject"[fillcolor=green]
"com.oracle.svm.core.graal.snippets.DeoptTester"[fillcolor=green]
"com.oracle.svm.core.jdk.VMErrorSubstitutions"[fillcolor=green]
"com.oracle.svm.core.genscavenge.HeapChunkProvider"[fillcolor=green]
"java.lang.CloneNotSupportedException"[fillcolor=green]
"com.oracle.svm.core.log.RealLog"[fillcolor=green]
"com.oracle.svm.core.stack.ThreadStackPrinter"[fillcolor=green]
"com.oracle.svm.core.thread.VMOperationControl$OpInProgress"[fillcolor=green]
"org.graalvm.nativeimage.LogHandler"[fillcolor=green]
"com.oracle.svm.core.log.LogHandlerExtension"[fillcolor=green]
"com.oracle.svm.core.log.FunctionPointerLogHandler"[fillcolor=green]
"com.oracle.svm.core.thread.Safepoint$Master"[fillcolor=green]
"com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicInteger"[fillcolor=green]
"com.oracle.svm.core.jdk.UninterruptibleUtils"[fillcolor=green]
"com.oracle.svm.core.hub.DynamicHubSupport"[fillcolor=green]
"com.oracle.svm.core.util.NonmovableByteArrayReader"[fillcolor=green]
"com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicWord"[fillcolor=green]
"com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicUnsigned"[fillcolor=green]
"org.graalvm.compiler.core.common.NumUtil"[fillcolor=green]
"com.oracle.svm.core.c.CGlobalDataImpl"[fillcolor=green]
"com.oracle.svm.core.jdk.UnsupportedFeatureError"[fillcolor=green]
"com.oracle.svm.core.jdk.JDKUtils"[fillcolor=green]
"com.oracle.svm.core.SubstrateGCOptions$2"[fillcolor=green]
"org.graalvm.nativeimage.impl.VMRuntimeSupport"[fillcolor=green]
"com.oracle.svm.core.jdk.RuntimeSupport"[fillcolor=green]
"com.oracle.svm.core.locks.VMMutex"[fillcolor=green]
"com.oracle.svm.core.posix.thread.PosixJavaThreads"[fillcolor=green]
"java.lang.Thread$UncaughtExceptionHandler"[fillcolor=green]
"com.oracle.svm.core.posix.pthread.PthreadVMMutex"[fillcolor=green]
"com.oracle.svm.core.heap.PhysicalMemory"[fillcolor=green]
"java.lang.ThreadGroup"[fillcolor=green]
"com.oracle.svm.core.FrameAccess"[fillcolor=green]
"com.oracle.svm.core.amd64.AMD64FrameAccess"[fillcolor=green]
"java.lang.LinkageError"[fillcolor=green]
"java.lang.NoClassDefFoundError"[fillcolor=green]
"com.oracle.svm.core.graal.snippets.CEntryPointSnippets$IsolateCreationWatcher"[fillcolor=green]
"com.oracle.svm.core.os.CommittedMemoryProvider"[fillcolor=green]
"com.oracle.svm.core.os.AbstractCommittedMemoryProvider"[fillcolor=green]
"com.oracle.svm.core.os.OSCommittedMemoryProvider"[fillcolor=green]
"com.oracle.svm.core.option.RuntimeOptionParser"[fillcolor=green]
"com.oracle.svm.core.JavaMainWrapper$JavaMainSupport"[fillcolor=green]
"com.oracle.svm.core.code.CodeInfoTable"[fillcolor=green]
"com.oracle.svm.core.c.NonmovableArrays"[fillcolor=green]
"com.oracle.svm.core.heap.ReferenceAccessImpl"[fillcolor=green]
"org.graalvm.compiler.core.common.CompressEncoding"[fillcolor=green]
"com.oracle.svm.core.heap.GCCause"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GenScavengeGCCause"[fillcolor=green]
"java.lang.ExceptionInInitializerError"[fillcolor=green]
"com.oracle.svm.core.log.Log$NoopLog"[fillcolor=green]
"com.oracle.svm.core.c.function.CEntryPointSetup$EnterPrologue"[fillcolor=green]
"com.oracle.svm.core.c.function.CEntryPointSetup"[fillcolor=green]
"com.oracle.svm.core.c.function.CEntryPointSetup$LeaveEpilogue"[fillcolor=green]
"com.oracle.svm.core.code.RuntimeCodeCache"[fillcolor=green]
"com.oracle.svm.core.stack.JavaStackWalker"[fillcolor=green]
"com.oracle.svm.core.posix.PosixNativeLibrarySupport"[fillcolor=green]
"com.oracle.svm.core.deopt.Deoptimizer"[fillcolor=green]
"com.oracle.svm.core.code.CodeInfoAccess"[fillcolor=green]
"com.oracle.svm.core.SubstrateGCOptions$3"[fillcolor=green]
"com.oracle.svm.core.JavaMainWrapper$EnterCreateIsolateWithCArgumentsPrologue"[fillcolor=green]
"com.oracle.svm.core.code.CodeInfoQueryResult"[fillcolor=green]
"com.oracle.svm.core.option.SubstrateOptionsParser$BooleanOptionFormat"[fillcolor=green]
"com.oracle.svm.core.option.SubstrateOptionsParser"[fillcolor=green]
"java.util.concurrent.atomic.AtomicReference"[fillcolor=green]
"com.oracle.svm.core.genscavenge.HeapPolicyOptions"[fillcolor=green]
"com.oracle.svm.core.code.ImageCodeInfo"[fillcolor=green]
"java.lang.NumberFormatException"[fillcolor=green]
"com.oracle.svm.core.SubstrateUtil$DiagnosticThunkRegister"[fillcolor=green]
"jdk.vm.ci.code.Architecture"[fillcolor=green]
"com.oracle.svm.core.CPUFeatureAccess"[fillcolor=green]
"com.oracle.svm.core.properties.RuntimePropertyParser"[fillcolor=green]
"com.oracle.svm.core.option.RuntimeOptionParser$OptionsParsedListener"[fillcolor=green]
"jdk.vm.ci.code.TargetDescription"[fillcolor=green]
"com.oracle.svm.core.SubstrateTargetDescription"[fillcolor=green]
"jdk.vm.ci.amd64.AMD64"[fillcolor=green]
"com.oracle.svm.core.amd64.AMD64CPUFeatureAccess"[fillcolor=green]
"jdk.vm.ci.amd64.AMD64$CPUFeature"[fillcolor=green]
"java.util.Set"[fillcolor=green]
"java.util.AbstractSet"[fillcolor=green]
"java.util.EnumSet"[fillcolor=green]
"java.util.Arrays"[fillcolor=green]
"com.oracle.svm.core.threadlocal.VMThreadLocalInfos"[fillcolor=green]
"com.oracle.svm.core.threadlocal.VMThreadLocalInfo"[fillcolor=green]
"com.oracle.svm.core.heap.NoAllocationVerifier"[fillcolor=green]
"com.oracle.svm.core.code.CodeInfoTableCounters"[fillcolor=green]
"org.graalvm.nativeimage.c.type.CTypeConversion"[fillcolor=green]
"com.oracle.svm.core.threadlocal.FastThreadLocalLong"[fillcolor=green]
"org.graalvm.nativeimage.impl.CTypeConversionSupport"[fillcolor=green]
"com.oracle.svm.core.c.CTypeConversionSupportImpl"[fillcolor=green]
"com.oracle.svm.core.code.CodeInfoDecoder"[fillcolor=green]
"com.oracle.svm.core.Containers"[fillcolor=green]
"com.oracle.svm.core.heap.PhysicalMemory$PhysicalMemorySupport"[fillcolor=green]
"com.oracle.svm.core.posix.darwin.DarwinPhysicalMemory$PhysicalMemorySupportImpl"[fillcolor=green]
"com.oracle.svm.core.posix.darwin.DarwinPhysicalMemory"[fillcolor=green]
"com.oracle.svm.core.Containers$Options"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIFunctions$Support"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIInvocationInterface$Support"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerReturnNullWord"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerVoid"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerReturnZero"[fillcolor=green]
"com.oracle.svm.core.c.function.CEntryPointSetup$LeaveDetachThreadEpilogue"[fillcolor=green]
"com.oracle.svm.core.c.function.CEntryPointSetup$LeaveTearDownIsolateEpilogue"[fillcolor=green]
"org.graalvm.nativeimage.Platform"[fillcolor=green]
"org.graalvm.nativeimage.impl.InternalPlatform$PLATFORM_JNI"[fillcolor=green]
"org.graalvm.nativeimage.impl.InternalPlatform"[fillcolor=green]
"org.graalvm.nativeimage.Platform$LINUX"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIFunctionTables"[fillcolor=green]
"com.oracle.svm.core.code.CodeInfoDecoderCounters"[fillcolor=green]
"com.oracle.svm.jni.JNIThreadLocalEnvironment"[fillcolor=green]
"io.firkin.kif.App"[fillcolor=green]
"com.oracle.svm.jni.JNIObjectHandles"[fillcolor=green]
"com.oracle.svm.jni.JNIThreadLocalPendingException"[fillcolor=green]
"com.oracle.svm.core.util.Utf8"[fillcolor=green]
"com.oracle.svm.jni.access.JNIReflectionDictionary"[fillcolor=green]
"com.oracle.svm.jni.JNIThreadLocalPinnedObjects"[fillcolor=green]
"com.oracle.svm.jni.access.JNIAccessibleField"[fillcolor=green]
"com.oracle.svm.core.code.CodeInfoDecoder$Options"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerReturnNullHandle"[fillcolor=green]
"java.lang.IncompatibleClassChangeError"[fillcolor=green]
"java.lang.NoSuchFieldError"[fillcolor=green]
"com.oracle.svm.core.handles.ThreadLocalHandles"[fillcolor=green]
"com.oracle.svm.jni.JNIImageHeapHandles"[fillcolor=green]
"com.oracle.svm.jni.JNIGlobalHandles"[fillcolor=green]
"com.oracle.svm.core.util.ExceptionHelpers"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerReturnMinusOne"[fillcolor=green]
"java.util.function.BiConsumer"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIInvocationInterface$Support$$Lambda$bd803f96b0c13e255e3d34d1dd3fb40d56c66928"[fillcolor=green]
"com.oracle.svm.jni.JNIThreadLocalPinnedObjects$$Lambda$8fbefc29ee56fe1117d0c1ad8fb92d7ac5878d54"[fillcolor=green]
"com.oracle.svm.jni.JNIThreadOwnedMonitors"[fillcolor=green]
"com.oracle.svm.jni.JNIThreadLocalPinnedObjects$PinnedObjectListNode"[fillcolor=green]
"com.oracle.svm.core.util.ByteArrayReader"[fillcolor=green]
"java.util.IdentityHashMap"[fillcolor=green]
"org.graalvm.compiler.core.common.util.TypeReader"[fillcolor=green]
"org.graalvm.compiler.core.common.util.AbstractTypeReader"[fillcolor=green]
"org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader"[fillcolor=green]
"org.graalvm.nativeimage.PinnedObject"[fillcolor=green]
"java.lang.StringIndexOutOfBoundsException"[fillcolor=green]
"com.oracle.svm.core.c.enums.EnumRuntimeData"[fillcolor=green]
"com.oracle.svm.core.c.enums.EnumNoLookup"[fillcolor=green]
"java.io.FilterOutputStream"[fillcolor=green]
"org.graalvm.nativeimage.impl.PinnedObjectSupport"[fillcolor=green]
"com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl"[fillcolor=green]
"com.oracle.svm.core.genscavenge.PinnedObjectImpl"[fillcolor=green]
"java.io.PrintStream"[fillcolor=green]
"com.oracle.svm.jni.access.JNIAccessibleClass"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerReturnJniErr"[fillcolor=green]
"java.lang.ThreadDeath"[fillcolor=green]
"java.lang.NoSuchMethodError"[fillcolor=green]
"java.nio.HeapByteBuffer"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerReturnFalse"[fillcolor=green]
"com.oracle.svm.core.stack.ParameterizedStackFrameVisitor"[fillcolor=green]
"com.oracle.svm.core.stack.ThreadStackPrinter$Stage0StackFramePrintVisitor"[fillcolor=green]
"com.oracle.svm.core.stack.ThreadStackPrinter$Stage1StackFramePrintVisitor"[fillcolor=green]
"com.oracle.svm.core.stack.ThreadStackPrinter$StackFramePrintVisitor"[fillcolor=green]
"com.oracle.svm.core.util.CounterSupport"[fillcolor=green]
"jdk.vm.ci.meta.MetaUtil"[fillcolor=green]
"org.graalvm.nativeimage.ObjectHandles"[fillcolor=green]
"com.oracle.svm.core.handles.ObjectHandlesImpl"[fillcolor=green]
"com.oracle.svm.core.code.IsolateLeaveStub"[fillcolor=green]
"java.lang.reflect.Modifier"[fillcolor=green]
"com.oracle.svm.core.code.UntetheredCodeInfoAccess"[fillcolor=green]
"java.lang.IllegalMonitorStateException"[fillcolor=green]
"java.util.Map$Entry"[fillcolor=green]
"java.util.Objects"[fillcolor=green]
"com.oracle.svm.core.c.BoxedRelocatedPointer"[fillcolor=green]
"com.oracle.svm.jni.JNIJavaVMList"[fillcolor=green]
"com.oracle.svm.jni.JNIGeneratedMethodSupport"[fillcolor=green]
"com.oracle.svm.core.StaticFieldsSupport"[fillcolor=green]
"java.util.Iterator"[fillcolor=green]
"java.lang.CharacterData"[fillcolor=green]
"java.lang.CharacterDataLatin1"[fillcolor=green]
"org.graalvm.compiler.serviceprovider.IsolateUtil"[fillcolor=green]
"com.oracle.svm.jni.functions.JNIInvocationInterface$Exports$1"[fillcolor=green]
"com.oracle.svm.core.log.FunctionPointerLogHandler$LogFunctionPointer"[fillcolor=green]
"com.oracle.svm.core.log.FunctionPointerLogHandler$VoidFunctionPointer"[fillcolor=green]
"org.graalvm.nativeimage.UnmanagedMemory"[fillcolor=green]
"com.oracle.svm.core.posix.UContextRegisterDumper"[fillcolor=green]
"com.oracle.svm.core.posix.darwin.DarwinUContextRegisterDumper"[fillcolor=green]
"org.graalvm.nativeimage.impl.UnmanagedMemorySupport"[fillcolor=green]
"com.oracle.svm.core.posix.UnmanagedMemorySupportImpl"[fillcolor=green]
"java.lang.CharacterDataUndefined"[fillcolor=green]
"java.lang.CharacterDataPrivateUse"[fillcolor=green]
"java.lang.CharacterData0E"[fillcolor=green]
"java.lang.CharacterData02"[fillcolor=green]
"java.lang.CharacterData01"[fillcolor=green]
"java.lang.CharacterData00"[fillcolor=green]
"java.lang.annotation.Annotation"[fillcolor=green]
"com.oracle.svm.core.jdk.InternalVMMethod"[fillcolor=green]
"com.oracle.svm.core.jdk.LambdaFormHiddenMethod"[fillcolor=green]
"com.oracle.svm.core.SubstrateOptions$3"[fillcolor=green]
"com.oracle.svm.core.SubstrateGCOptions$1"[fillcolor=green]
"com.oracle.svm.core.SubstrateUtil$DiagnosticThunk"[fillcolor=green]
"org.graalvm.compiler.options.OptionDescriptor"[fillcolor=green]
"com.oracle.svm.core.genscavenge.Generation"[fillcolor=green]
"com.oracle.svm.core.genscavenge.YoungGeneration"[fillcolor=green]
"java.util.SortedMap"[fillcolor=green]
"com.oracle.svm.core.genscavenge.OldGeneration"[fillcolor=green]
"java.lang.StackTraceElement"[fillcolor=green]
"com.oracle.svm.core.heap.RuntimeCodeInfoGCSupport"[fillcolor=green]
"com.oracle.svm.core.genscavenge.RuntimeCodeInfoGCSupportImpl"[fillcolor=green]
"com.oracle.svm.core.genscavenge.ImageHeapInfo"[fillcolor=green]
"java.util.concurrent.atomic.AtomicInteger"[fillcolor=green]
"jdk.vm.ci.meta.PlatformKind"[fillcolor=green]
"com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicLong"[fillcolor=green]
"java.util.concurrent.atomic.AtomicLong"[fillcolor=green]
"com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicReference"[fillcolor=green]
"java.nio.ByteOrder"[fillcolor=green]
"com.oracle.svm.core.heap.ObjectVisitor"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GCImpl$RememberedSetConstructor"[fillcolor=green]
"com.oracle.svm.core.heap.ObjectReferenceVisitor"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor"[fillcolor=green]
"com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicPointer"[fillcolor=green]
"jdk.vm.ci.amd64.AMD64Kind"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GreyToBlackObjectVisitor"[fillcolor=green]
"com.oracle.svm.core.os.OSCommittedMemoryProvider$VirtualMemoryTracker"[fillcolor=green]
"com.oracle.svm.core.thread.VMOperationControl$WorkQueues"[fillcolor=green]
"com.oracle.svm.core.MemoryWalker$ImageHeapRegionVisitor"[fillcolor=green]
"com.oracle.svm.core.MemoryWalker"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GCImpl$BlackenImageHeapRootsVisitor"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GCAccounting"[fillcolor=green]
"com.oracle.svm.core.genscavenge.Timers"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GCImpl$CollectionVMOperation"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GCImpl$ChunkReleaser"[fillcolor=green]
"com.oracle.svm.core.stack.StackFrameVisitor"[fillcolor=green]
"com.oracle.svm.core.genscavenge.CollectionPolicy"[fillcolor=green]
"java.util.Formatter"[fillcolor=green]
"java.io.Writer"[fillcolor=green]
"java.io.BufferedWriter"[fillcolor=green]
"java.io.OutputStreamWriter"[fillcolor=green]
"java.util.function.Supplier"[fillcolor=green]
"java.security.AccessControlContext"[fillcolor=green]
"java.lang.ThreadLocal$ThreadLocalMap"[fillcolor=green]
"java.lang.ThreadLocal"[fillcolor=green]
"java.lang.StringLatin1"[fillcolor=green]
"java.lang.StringUTF16"[fillcolor=green]
"jdk.internal.reflect.ReflectionFactory"[fillcolor=green]
"java.util.ConcurrentModificationException"[fillcolor=green]
"java.lang.Throwable$PrintStreamOrWriter"[fillcolor=green]
"java.lang.Throwable$WrappedPrintStream"[fillcolor=green]
"java.util.Collections"[fillcolor=green]
"java.lang.IllegalStateException"[fillcolor=green]
"jdk.internal.misc.Unsafe"[fillcolor=green]
"java.util.Collections$EmptyList"[fillcolor=green]
"org.graalvm.compiler.options.ModifiableOptionValues"[fillcolor=green]
"com.oracle.svm.core.option.RuntimeOptionValues"[fillcolor=green]
"com.oracle.svm.core.jdk.StackTraceUtils"[fillcolor=green]
"com.oracle.svm.core.stack.JavaStackFrameVisitor"[fillcolor=green]
"com.oracle.svm.core.jdk.BuildStackTraceVisitor"[fillcolor=green]
"org.graalvm.compiler.replacements.amd64.AMD64StringLatin1Substitutions"[fillcolor=green]
"java.lang.ref.WeakReference"[fillcolor=red]
"com.oracle.svm.core.handles.ObjectHandlesImpl$HandleWeakReference"[fillcolor=red]
"org.graalvm.compiler.replacements.amd64.AMD64StringUTF16Substitutions"[fillcolor=green]
"com.oracle.svm.core.stack.StackOverflowCheck$OSSupport"[fillcolor=green]
"com.oracle.svm.core.posix.darwin.DarwinStackOverflowSupport"[fillcolor=green]
"com.oracle.svm.core.posix.pthread.PthreadVMLockSupport"[fillcolor=green]
"com.oracle.svm.core.locks.VMCondition"[fillcolor=green]
"com.oracle.svm.core.posix.pthread.PthreadVMCondition"[fillcolor=green]
"com.oracle.svm.core.stack.StackOverflowCheck$Options"[fillcolor=green]
"com.oracle.svm.core.code.RuntimeCodeInfoMemory"[fillcolor=green]
"java.lang.ref.PhantomReference"[fillcolor=red]
"jdk.internal.ref.Cleaner"[fillcolor=red]
"java.io.FileDescriptor"[fillcolor=green]
"com.oracle.svm.core.posix.pthread.PthreadConditionUtils"[fillcolor=green]
"com.oracle.svm.core.MemoryUtil"[fillcolor=green]
"com.oracle.svm.core.CErrorNumber"[fillcolor=green]
"com.oracle.svm.core.CErrorNumber$CErrorNumberSupport"[fillcolor=green]
"com.oracle.svm.core.posix.darwin.DarwinCErrorNumberSupport"[fillcolor=green]
"com.oracle.svm.core.thread.VMOperationControl$JavaAllocationFreeQueue$Element"[fillcolor=green]
"com.oracle.svm.core.thread.VMOperationControl$AllocationFreeQueue"[fillcolor=green]
"com.oracle.svm.core.thread.VMOperationControl$JavaAllocationFreeQueue"[fillcolor=green]
"com.oracle.svm.core.thread.JavaVMOperation"[fillcolor=green]
"com.oracle.svm.core.thread.JavaThreads$FetchApplicationThreadsOperation"[fillcolor=green]
"java.util.concurrent.atomic.AtomicBoolean"[fillcolor=green]
"com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation"[fillcolor=green]
"com.oracle.svm.core.os.ImageHeapProvider"[fillcolor=green]
"com.oracle.svm.core.os.AbstractCopyingImageHeapProvider"[fillcolor=green]
"com.oracle.svm.core.posix.darwin.DarwinImageHeapProvider"[fillcolor=green]
"org.graalvm.compiler.nodes.graphbuilderconf.GeneratedPluginInjectionProvider"[fillcolor=green]
"org.graalvm.compiler.replacements.NodeIntrinsificationProvider"[fillcolor=green]
"java.nio.BufferOverflowException"[fillcolor=green]
"com.oracle.svm.core.posix.darwin.Util_java_lang_System"[fillcolor=green]
"com.oracle.svm.core.util.TimeUtils"[fillcolor=green]
"java.lang.Class$ReflectionData"[fillcolor=green]
"java.lang.UnsupportedOperationException"[fillcolor=green]
"java.nio.ReadOnlyBufferException"[fillcolor=green]
"java.util.ArrayList$Itr"[fillcolor=green]
"java.util.Collections$SetFromMap"[fillcolor=green]
"java.nio.BufferUnderflowException"[fillcolor=green]
"java.util.RegularEnumSet"[fillcolor=green]
"java.util.JumboEnumSet"[fillcolor=green]
"jdk.internal.misc.SharedSecrets"[fillcolor=green]
"jdk.internal.misc.JavaLangAccess"[fillcolor=green]
"java.lang.InternalError"[fillcolor=green]
"com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult"[fillcolor=green]
"org.graalvm.collections.UnmodifiableMapCursor"[fillcolor=green]
"java.lang.Shutdown"[fillcolor=green]
"java.lang.Runtime"[fillcolor=green]
"jdk.internal.misc.VM"[fillcolor=green]
"java.lang.StringCoding$Result"[fillcolor=green]
"java.io.InterruptedIOException"[fillcolor=green]
"org.graalvm.compiler.options.OptionType"[fillcolor=green]
"java.util.HashSet"[fillcolor=green]
"org.graalvm.compiler.replacements.amd64.AMD64ArrayIndexOf"[fillcolor=green]
"com.oracle.svm.core.option.RuntimeOptionParser$$Lambda$855c641c8252c6db3caf182766b046d84403d212"[fillcolor=green]
"java.lang.StringCoding"[fillcolor=green]
"java.nio.charset.Charset"[fillcolor=green]
"java.lang.StringCoding$StringDecoder"[fillcolor=green]
"com.oracle.svm.core.os.VirtualMemoryProvider"[fillcolor=green]
"com.oracle.svm.core.posix.PosixVirtualMemoryProvider"[fillcolor=green]
"java.util.concurrent.locks.AbstractQueuedSynchronizer$Node"[fillcolor=green]
"com.oracle.svm.core.posix.PosixUtils"[fillcolor=green]
"com.oracle.svm.core.jdk.RandomAccessors"[fillcolor=green]
"com.oracle.svm.core.jdk.SplittableRandomAccessors"[fillcolor=green]
"org.graalvm.compiler.options.OptionsParser"[fillcolor=green]
"com.oracle.svm.core.thread.ParkEvent"[fillcolor=green]
"sun.nio.cs.HistoricallyNamedCharset"[fillcolor=green]
"sun.nio.cs.Unicode"[fillcolor=green]
"sun.nio.cs.UTF_8"[fillcolor=green]
"com.oracle.svm.core.thread.ParkEventConsCell"[fillcolor=green]
"sun.nio.cs.ISO_8859_1"[fillcolor=green]
"sun.nio.cs.US_ASCII"[fillcolor=green]
"java.lang.ref.SoftReference"[fillcolor=red]
"java.lang.UnsatisfiedLinkError"[fillcolor=green]
"org.graalvm.nativeimage.Platform$DARWIN"[fillcolor=green]
"com.oracle.svm.core.genscavenge.FirstObjectTable"[fillcolor=green]
"java.util.StringJoiner"[fillcolor=green]
"com.oracle.svm.core.thread.ParkEventList"[fillcolor=green]
"com.oracle.svm.core.thread.ParkEvent$ParkEventFactory"[fillcolor=green]
"com.oracle.svm.core.posix.thread.PosixParkEventFactory"[fillcolor=green]
"java.nio.charset.CharacterCodingException"[fillcolor=green]
"java.nio.charset.CoderResult"[fillcolor=green]
"java.lang.Readable"[fillcolor=green]
"java.nio.CharBuffer"[fillcolor=green]
"com.oracle.svm.core.heap.ReferenceHandler"[fillcolor=green]
"java.io.FileSystem"[fillcolor=green]
"java.io.UnixFileSystem"[fillcolor=green]
"java.lang.StringCoding$1"[fillcolor=green]
"java.lang.ThreadLocal$ThreadLocalMap$Entry"[fillcolor=red]
"org.graalvm.compiler.serviceprovider.JavaVersionUtil"[fillcolor=green]
"com.oracle.svm.core.thread.DetachedParkEvent"[fillcolor=green]
"java.util.Locale"[fillcolor=green]
"com.oracle.svm.core.jdk.NativeLibrarySupport"[fillcolor=green]
"jdk.internal.reflect.Reflection"[fillcolor=green]
"com.oracle.svm.core.SubstrateUtil$Thunk"[fillcolor=green]
"com.oracle.svm.core.thread.VMThreads$$Lambda$5b2f0aebe411eef1bc5ee5706171c32841925cd1"[fillcolor=green]
"com.oracle.svm.core.thread.JavaVMOperation$ThunkOperation"[fillcolor=green]
"com.oracle.svm.core.jdk.GetCallerClassVisitor"[fillcolor=green]
"com.oracle.svm.core.thread.VMOperation$SystemEffect"[fillcolor=green]
"jdk.internal.misc.TerminatingThreadLocal"[fillcolor=green]
"jdk.internal.misc.TerminatingThreadLocal$1"[fillcolor=green]
"com.oracle.svm.core.code.FrameInfoQueryResult"[fillcolor=green]
"java.io.FileInputStream"[fillcolor=green]
"java.io.FileOutputStream"[fillcolor=green]
"com.oracle.svm.core.code.ReusableTypeReader"[fillcolor=green]
"org.graalvm.nativeimage.c.type.CTypeConversion$CCharPointerHolder"[fillcolor=green]
"com.oracle.svm.core.code.FrameInfoDecoder$FrameInfoQueryResultAllocator"[fillcolor=green]
"com.oracle.svm.core.code.FrameInfoDecoder"[fillcolor=green]
"com.oracle.svm.core.stack.ThreadStackPrinter$StackFramePrintVisitor$SingleShotFrameInfoQueryResultAllocator"[fillcolor=green]
"com.oracle.svm.core.code.FrameInfoDecoder$ValueInfoAllocator"[fillcolor=green]
"com.oracle.svm.core.stack.ThreadStackPrinter$StackFramePrintVisitor$DummyValueInfoAllocator"[fillcolor=green]
"org.graalvm.collections.Equivalence"[fillcolor=green]
"org.graalvm.collections.Equivalence$2"[fillcolor=green]
"com.oracle.svm.core.c.CTypeConversionSupportImpl$1"[fillcolor=green]
"org.graalvm.collections.UnmodifiableEconomicSet"[fillcolor=green]
"org.graalvm.collections.EconomicSet"[fillcolor=green]
"org.graalvm.collections.EconomicMapImpl"[fillcolor=green]
"com.oracle.svm.core.c.CCharPointerHolderImpl"[fillcolor=green]
"java.util.function.Consumer"[fillcolor=green]
"com.oracle.svm.core.option.SubstrateOptionsParser$$Lambda$6fe3781d3d2429cb039c6cd3764035472b2acec8"[fillcolor=green]
"com.oracle.svm.core.code.FrameInfoQueryResult$ValueInfo"[fillcolor=green]
"java.nio.charset.MalformedInputException"[fillcolor=green]
"java.lang.ConditionalSpecialCasing"[fillcolor=green]
"com.oracle.svm.core.meta.SharedMethod"[fillcolor=green]
"com.oracle.svm.core.code.FrameInfoQueryResult$ValueType"[fillcolor=green]
"java.lang.ConditionalSpecialCasing$Entry"[fillcolor=green]
"jdk.internal.math.FloatingDecimal"[fillcolor=green]
"jdk.internal.math.FloatingDecimal$BinaryToASCIIConverter"[fillcolor=green]
"jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer"[fillcolor=green]
"jdk.internal.math.FloatingDecimal$ExceptionalBinaryToASCIIBuffer"[fillcolor=green]
"java.lang.StringBuffer"[fillcolor=green]
"jdk.internal.math.FDBigInteger"[fillcolor=green]
"jdk.internal.math.FloatingDecimal$1"[fillcolor=green]
"java.util.Hashtable$Entry"[fillcolor=green]
"org.graalvm.compiler.options.OptionKey$Lazy"[fillcolor=green]
"java.text.BreakIterator"[fillcolor=green]
"sun.text.Normalizer"[fillcolor=green]
"com.oracle.svm.core.jdk.Util_java_text_BreakIterator"[fillcolor=green]
"java.util.IdentityHashMap$EntrySet"[fillcolor=green]
"sun.text.normalizer.UCharacter"[fillcolor=green]
"sun.text.normalizer.Normalizer2"[fillcolor=green]
"sun.text.normalizer.Norm2AllModes"[fillcolor=green]
"sun.text.normalizer.Norm2AllModes$Normalizer2WithImpl"[fillcolor=green]
"sun.text.normalizer.Norm2AllModes$DecomposeNormalizer2"[fillcolor=green]
"java.util.Arrays$ArrayList"[fillcolor=green]
"sun.text.normalizer.Norm2AllModes$NFCSingleton"[fillcolor=green]
"sun.text.RuleBasedBreakIterator"[fillcolor=green]
"org.graalvm.compiler.core.CompilationWrapper$ExceptionAction"[fillcolor=green]
"org.graalvm.compiler.core.CompilationWrapper"[fillcolor=green]
"org.graalvm.compiler.debug.DebugOptions$PrintGraphTarget"[fillcolor=green]
"org.graalvm.compiler.debug.DebugOptions"[fillcolor=green]
"sun.text.normalizer.Norm2AllModes$Norm2AllModesSingleton"[fillcolor=green]
"java.lang.System$2"[fillcolor=green]
"java.lang.Shutdown$Lock"[fillcolor=green]
"java.security.SecureClassLoader"[fillcolor=green]
"jdk.internal.loader.BuiltinClassLoader"[fillcolor=green]
"jdk.internal.loader.ClassLoaders$AppClassLoader"[fillcolor=green]
"jdk.internal.loader.ClassLoaders"[fillcolor=green]
"java.util.HashMap"[fillcolor=green]
"java.util.NavigableMap"[fillcolor=green]
"java.util.TreeMap"[fillcolor=green]
"java.util.HashMap$Node"[fillcolor=green]
"java.util.Queue"[fillcolor=green]
"java.util.Deque"[fillcolor=green]
"java.io.BufferedOutputStream"[fillcolor=green]
"com.oracle.svm.core.jdk.NativeLibrarySupport$LibraryInitializer"[fillcolor=green]
"java.lang.Module"[fillcolor=green]
"java.util.Vector"[fillcolor=green]
"java.security.ProtectionDomain"[fillcolor=green]
"java.util.Comparator"[fillcolor=green]
"java.util.TreeMap$Entry"[fillcolor=green]
"com.oracle.svm.core.posix.PosixLogHandler"[fillcolor=green]
"sun.text.CompactByteArray"[fillcolor=green]
"java.util.TreeMap$EntrySet"[fillcolor=green]
"sun.text.SupplementaryCharacterData"[fillcolor=green]
"java.util.SortedSet"[fillcolor=green]
"java.util.NavigableSet"[fillcolor=green]
"java.util.TreeMap$KeySet"[fillcolor=green]
"java.text.CharacterIterator"[fillcolor=green]
"java.lang.invoke.VarHandleObjects$FieldInstanceReadOnly"[fillcolor=green]
"java.lang.invoke.VarHandleObjects"[fillcolor=green]
"java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite"[fillcolor=green]
"com.oracle.svm.core.genscavenge.HeapImpl$$Lambda$fcf8f5a50191f6409012463e9e33433b950985dd"[fillcolor=green]
"com.oracle.svm.core.log.Log$LogOutputStream"[fillcolor=green]
"com.oracle.svm.core.WeakIdentityHashMap"[fillcolor=green]
"com.oracle.svm.core.jdk.Target_java_lang_Shutdown$$Lambda$ca699e7c6ff373afff7c07c33da5914748e8e2ba"[fillcolor=green]
"sun.util.locale.BaseLocale"[fillcolor=green]
"sun.util.locale.LocaleExtensions"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GreyObjectsWalker"[fillcolor=green]
"java.lang.invoke.MethodHandleStatics"[fillcolor=green]
"com.oracle.svm.core.genscavenge.HeapOptions"[fillcolor=green]
"sun.nio.cs.StreamEncoder"[fillcolor=green]
"com.oracle.svm.core.posix.IgnoreSIGPIPEFeature$1"[fillcolor=green]
"com.oracle.svm.core.posix.IgnoreSIGPIPEFeature"[fillcolor=green]
"com.oracle.svm.core.SubstrateSegfaultHandlerFeature$$Lambda$67f1d5898d6e6509aae6fe829c31680ece4960bd"[fillcolor=green]
"com.oracle.svm.core.WeakIdentityHashMap$Entry"[fillcolor=red]
"java.lang.ref.ReferenceQueue"[fillcolor=green]
"com.oracle.svm.core.heap.ReferenceInternals"[fillcolor=green]
"java.lang.ref.Cleaner$Cleanable"[fillcolor=green]
"java.lang.ref.Cleaner"[fillcolor=green]
"com.oracle.svm.core.code.CodeInfoTether"[fillcolor=green]
"com.oracle.svm.core.jdk.management.SubstrateRuntimeMXBean$$Lambda$506a485468c3d4c45d05534dfb6725da2413e191"[fillcolor=green]
"java.lang.management.PlatformManagedObject"[fillcolor=green]
"java.lang.management.RuntimeMXBean"[fillcolor=green]
"com.oracle.svm.core.jdk.management.SubstrateRuntimeMXBean"[fillcolor=green]
"sun.text.normalizer.NormalizerImpl"[fillcolor=green]
"sun.text.normalizer.Norm2AllModes$ComposeNormalizer2"[fillcolor=green]
"jdk.internal.ref.CleanerFactory"[fillcolor=green]
"jdk.internal.ref.CleanerImpl"[fillcolor=green]
"com.oracle.svm.core.graal.code.CGlobalDataInfo"[fillcolor=green]
"java.nio.charset.CharsetDecoder"[fillcolor=green]
"java.nio.charset.CodingErrorAction"[fillcolor=green]
"java.lang.IllegalThreadStateException"[fillcolor=green]
"sun.nio.cs.ArrayDecoder"[fillcolor=green]
"com.oracle.svm.core.code.RuntimeCodeInfoAccess"[fillcolor=green]
"com.oracle.svm.core.code.InstalledCodeObserverSupport"[fillcolor=green]
"org.graalvm.util.DirectAnnotationAccess"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap$Node"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap$Traverser"[fillcolor=green]
"java.util.LinkedHashMap$Entry"[fillcolor=green]
"java.util.LinkedHashMap"[fillcolor=green]
"java.util.HashMap$TreeNode"[fillcolor=green]
"com.oracle.svm.core.SubstrateSegfaultHandler"[fillcolor=green]
"java.nio.HeapCharBuffer"[fillcolor=green]
"com.oracle.svm.core.SubstrateSegfaultHandler$Options"[fillcolor=green]
"org.graalvm.nativeimage.ImageInfo"[fillcolor=green]
"com.oracle.svm.core.posix.PosixSubstrateSegfaultHandler"[fillcolor=green]
"com.oracle.svm.core.code.RuntimeCodeInfoAccess$NonmovableArrayAction"[fillcolor=green]
"com.oracle.svm.core.code.RuntimeCodeInfoAccess$1"[fillcolor=green]
"com.oracle.svm.core.code.FrameInfoDecoder$HeapBasedFrameInfoQueryResultAllocator"[fillcolor=green]
"com.oracle.svm.core.code.FrameInfoDecoder$HeapBasedValueInfoAllocator"[fillcolor=green]
"org.graalvm.compiler.core.common.util.TypeConversion"[fillcolor=green]
"java.util.concurrent.locks.LockSupport"[fillcolor=green]
"java.util.RegularEnumSet$EnumSetIterator"[fillcolor=green]
"java.text.StringCharacterIterator"[fillcolor=green]
"java.util.JumboEnumSet$EnumSetIterator"[fillcolor=green]
"java.util.Locale$Category"[fillcolor=green]
"sun.text.RuleBasedBreakIterator$SafeCharIterator"[fillcolor=green]
"java.util.IdentityHashMap$IdentityHashMapIterator"[fillcolor=green]
"java.util.IdentityHashMap$EntryIterator"[fillcolor=green]
"java.util.Arrays$ArrayItr"[fillcolor=green]
"java.util.IdentityHashMap$KeySet"[fillcolor=green]
"java.util.HashMap$KeySet"[fillcolor=green]
"java.util.HashMap$EntrySet"[fillcolor=green]
"java.util.Formatter$FormatString"[fillcolor=green]
"org.graalvm.collections.EconomicMapImpl$CollisionLink"[fillcolor=green]
"com.oracle.svm.core.WeakIdentityHashMap$EntrySet"[fillcolor=green]
"java.util.regex.MatchResult"[fillcolor=green]
"java.util.regex.Matcher"[fillcolor=green]
"java.util.IllegalFormatException"[fillcolor=green]
"java.util.MissingFormatArgumentException"[fillcolor=green]
"org.graalvm.collections.MapCursor"[fillcolor=green]
"org.graalvm.collections.Equivalence$3"[fillcolor=green]
"org.graalvm.collections.Equivalence$1"[fillcolor=green]
"org.graalvm.collections.EconomicMapImpl$2"[fillcolor=green]
"java.util.Locale$1"[fillcolor=green]
"com.oracle.svm.core.jdk.PlatformNativeLibrarySupport$NativeLibrary"[fillcolor=green]
"java.util.NoSuchElementException"[fillcolor=green]
"com.oracle.svm.core.posix.thread.PosixParkEvent"[fillcolor=green]
"java.util.FormatterClosedException"[fillcolor=green]
"java.text.DecimalFormatSymbols"[fillcolor=green]
"java.util.regex.Pattern"[fillcolor=green]
"sun.util.locale.provider.LocaleProviderAdapter"[fillcolor=green]
"java.util.spi.LocaleServiceProvider"[fillcolor=green]
"java.text.spi.DecimalFormatSymbolsProvider"[fillcolor=green]
"java.util.Formatter$FixedString"[fillcolor=green]
"java.util.Formatter$FormatSpecifier"[fillcolor=green]
"java.lang.invoke.VarHandleInts$FieldInstanceReadOnly"[fillcolor=green]
"java.lang.invoke.VarHandleInts"[fillcolor=green]
"java.lang.invoke.VarHandleInts$FieldInstanceReadWrite"[fillcolor=green]
"sun.util.locale.provider.LocaleProviderAdapter$Type"[fillcolor=green]
"java.util.UnknownFormatConversionException"[fillcolor=green]
"java.util.Collections$EmptyIterator"[fillcolor=green]
"com.oracle.svm.core.jdk.LocalizationSupport"[fillcolor=green]
"java.lang.ClassLoaderHelper"[fillcolor=green]
"org.graalvm.compiler.options.OptionValues$1"[fillcolor=green]
"com.oracle.svm.core.jdk.UninterruptibleUtils$Math"[fillcolor=green]
"java.util.Hashtable$EntrySet"[fillcolor=green]
"java.util.Collections$SynchronizedCollection"[fillcolor=green]
"java.util.Collections$SynchronizedSet"[fillcolor=green]
"com.oracle.svm.core.posix.PosixNativeLibrarySupport$PosixNativeLibrary"[fillcolor=green]
"sun.nio.cs.UTF_8$Decoder"[fillcolor=green]
"java.lang.ref.ReferenceQueue$Null"[fillcolor=green]
"jdk.internal.reflect.LangReflectAccess"[fillcolor=green]
"java.lang.invoke.VarForm"[fillcolor=green]
"java.util.ArrayDeque"[fillcolor=green]
"com.oracle.svm.jni.JNILibraryInitializer"[fillcolor=green]
"java.util.regex.Pattern$Node"[fillcolor=green]
"java.lang.ref.ReferenceQueue$Lock"[fillcolor=green]
"jdk.vm.ci.amd64.AMD64$1"[fillcolor=green]
"java.util.TreeMap$Values"[fillcolor=green]
"java.util.regex.Pattern$CharPredicate"[fillcolor=green]
"java.util.regex.Pattern$GroupHead"[fillcolor=green]
"java.nio.BufferMismatch"[fillcolor=green]
"jdk.internal.util.ArraysSupport"[fillcolor=green]
"java.text.spi.NumberFormatProvider"[fillcolor=green]
"java.text.spi.DateFormatSymbolsProvider"[fillcolor=green]
"java.text.spi.BreakIteratorProvider"[fillcolor=green]
"sun.util.locale.provider.ResourceBundleBasedAdapter"[fillcolor=green]
"sun.util.locale.provider.JRELocaleProviderAdapter"[fillcolor=green]
"sun.util.cldr.CLDRLocaleProviderAdapter"[fillcolor=green]
"java.text.spi.CollatorProvider"[fillcolor=green]
"java.util.spi.CurrencyNameProvider"[fillcolor=green]
"java.text.spi.DateFormatProvider"[fillcolor=green]
"jdk.internal.ref.PhantomCleanable"[fillcolor=red]
"jdk.internal.ref.WeakCleanable"[fillcolor=red]
"jdk.internal.ref.SoftCleanable"[fillcolor=red]
"com.oracle.svm.core.thread.VMOperationControl$NativeVMOperationQueue"[fillcolor=green]
"com.oracle.svm.core.thread.VMOperationControl$JavaVMOperationQueue"[fillcolor=green]
"jdk.internal.misc.JavaIOFileDescriptorAccess"[fillcolor=green]
"java.io.FileDescriptor$1"[fillcolor=green]
"com.oracle.svm.core.genscavenge.SpaceAccounting"[fillcolor=green]
"java.nio.charset.CharsetEncoder"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap$CounterCell"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap$CollectionView"[fillcolor=green]
"sun.util.resources.LocaleData"[fillcolor=green]
"java.util.spi.LocaleNameProvider"[fillcolor=green]
"java.util.spi.TimeZoneNameProvider"[fillcolor=green]
"java.util.spi.CalendarDataProvider"[fillcolor=green]
"com.oracle.svm.core.genscavenge.ImageHeapWalker"[fillcolor=green]
"java.util.spi.CalendarNameProvider"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GCImpl$$Lambda$b87a3ce08c4b5817a2e499c1a774f3781b0d5df8"[fillcolor=green]
"sun.text.spi.JavaTimeDateTimePatternProvider"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap$EntrySetView"[fillcolor=green]
"sun.util.locale.provider.LocaleDataMetaInfo"[fillcolor=green]
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$5fb0643c7f8d005f5ee17377e06d57ae38c253e5"[fillcolor=green]
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$c08be315aa20ccffc6d99c8ceeebd4e4a45b68c0"[fillcolor=green]
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$8e7767a00a53b264267399ed784ec3d5778abb7c"[fillcolor=green]
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$d8e5b1030aca235b87d2b1ed8c8962d163acefcd"[fillcolor=green]
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$3f877ad4039231f2ec3182b089dcb7a68a14124a"[fillcolor=green]
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$fd68bedc6e7d0a8c985d5a070f9fbf19c4cf4644"[fillcolor=green]
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$66b5a6e47b3f18d450f30a0d39b0618b51b50280"[fillcolor=green]
"sun.text.normalizer.Trie2"[fillcolor=green]
"sun.text.normalizer.Trie2_16"[fillcolor=green]
"java.util.ListIterator"[fillcolor=green]
"java.util.AbstractList$Itr"[fillcolor=green]
"java.util.AbstractList$ListItr"[fillcolor=green]
"java.util.Formatter$Flags"[fillcolor=green]
"java.io.File$PathStatus"[fillcolor=green]
"jdk.internal.misc.InnocuousThread"[fillcolor=green]
"org.graalvm.nativeimage.c.function.CEntryPointLiteral"[fillcolor=green]
"java.util.TreeMap$PrivateEntryIterator"[fillcolor=green]
"java.util.TreeMap$ValueIterator"[fillcolor=green]
"java.util.Formatter$Conversion"[fillcolor=green]
"java.util.Hashtable$Enumerator"[fillcolor=green]
"java.util.IdentityHashMap$EntryIterator$Entry"[fillcolor=green]
"java.util.HashMap$HashIterator"[fillcolor=green]
"java.util.HashMap$KeyIterator"[fillcolor=green]
"java.util.IllegalFormatPrecisionException"[fillcolor=green]
"java.util.Formatter$DateTime"[fillcolor=green]
"java.util.Calendar"[fillcolor=green]
"java.util.MissingFormatWidthException"[fillcolor=green]
"com.oracle.svm.core.WeakIdentityHashMap$HashIterator"[fillcolor=green]
"com.oracle.svm.core.WeakIdentityHashMap$EntryIterator"[fillcolor=green]
"java.util.Date"[fillcolor=green]
"java.util.Properties$EntrySet"[fillcolor=green]
"java.time.temporal.TemporalAccessor"[fillcolor=green]
"java.util.IllegalFormatWidthException"[fillcolor=green]
"java.util.ArrayList$ListItr"[fillcolor=green]
"java.util.Collections$EmptyListIterator"[fillcolor=green]
"java.util.HashMap$EntryIterator"[fillcolor=green]
"java.math.BigDecimal"[fillcolor=green]
"java.util.IdentityHashMap$KeyIterator"[fillcolor=green]
"java.util.IllegalFormatFlagsException"[fillcolor=green]
"java.util.TreeMap$EntryIterator"[fillcolor=green]
"java.math.BigInteger"[fillcolor=green]
"java.util.IllegalFormatCodePointException"[fillcolor=green]
"java.nio.charset.CoderMalfunctionError"[fillcolor=green]
"java.lang.String$CaseInsensitiveComparator"[fillcolor=green]
"com.oracle.svm.core.code.FrameInfoDecoder$1"[fillcolor=green]
"java.lang.StringCoding$StringEncoder"[fillcolor=green]
"java.util.ArrayDeque$DeqIterator"[fillcolor=green]
"java.util.DuplicateFormatFlagsException"[fillcolor=green]
"java.util.FormatFlagsConversionMismatchException"[fillcolor=green]
"jdk.vm.ci.meta.SerializableConstant"[fillcolor=green]
"jdk.vm.ci.meta.PrimitiveConstant"[fillcolor=green]
"java.util.UnknownFormatFlagsException"[fillcolor=green]
"java.nio.charset.UnmappableCharacterException"[fillcolor=green]
"com.oracle.svm.core.meta.CompressedNullConstant"[fillcolor=green]
"jdk.vm.ci.meta.JavaConstant$1"[fillcolor=green]
"java.nio.charset.CoderResult$Cache"[fillcolor=green]
"java.util.TimeZone"[fillcolor=green]
"java.util.GregorianCalendar"[fillcolor=green]
"sun.util.locale.provider.TimeZoneNameUtility"[fillcolor=green]
"java.util.Optional"[fillcolor=green]
"java.util.function.Function"[fillcolor=green]
"java.nio.charset.CoderResult$$Lambda$3f2ddd7c53fb783fc9c2e882fdd4baf791ae504f"[fillcolor=green]
"jdk.vm.ci.meta.NullConstant"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap$TreeNode"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap$TreeBin"[fillcolor=green]
"java.util.IllegalFormatConversionException"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap$ReservationNode"[fillcolor=green]
"java.time.DateTimeException"[fillcolor=green]
"java.time.temporal.UnsupportedTemporalTypeException"[fillcolor=green]
"java.text.DateFormatSymbols"[fillcolor=green]
"java.time.temporal.Temporal"[fillcolor=green]
"java.time.temporal.TemporalAdjuster"[fillcolor=green]
"java.time.Instant"[fillcolor=green]
"java.time.ZoneId"[fillcolor=green]
"jdk.internal.math.FormattedFloatingDecimal"[fillcolor=green]
"java.text.Format"[fillcolor=green]
"java.text.NumberFormat"[fillcolor=green]
"java.text.DecimalFormat"[fillcolor=green]
"java.util.Calendar$$Lambda$2bcf13c4edfd045f3213435bf07b05f29c6a7847"[fillcolor=green]
"jdk.internal.math.FormattedFloatingDecimal$Form"[fillcolor=green]
"java.math.MathContext"[fillcolor=green]
"java.util.Formatter$FormatSpecifier$BigDecimalLayout"[fillcolor=green]
"sun.util.locale.Extension"[fillcolor=green]
"sun.util.locale.LocaleUtils"[fillcolor=green]
"java.security.PrivilegedAction"[fillcolor=green]
"java.util.Formatter$BigDecimalLayoutForm"[fillcolor=green]
"sun.security.action.GetPropertyAction"[fillcolor=green]
"jdk.internal.util.StaticProperty"[fillcolor=red]
"java.time.temporal.TemporalField"[fillcolor=green]
"java.time.temporal.ChronoField"[fillcolor=green]
"sun.util.calendar.ZoneInfo"[fillcolor=green]
"com.oracle.svm.core.jdk.TimeZoneSupport"[fillcolor=green]
"java.math.RoundingMode"[fillcolor=green]
"sun.util.calendar.ZoneInfoFile"[fillcolor=green]
"java.io.FilterInputStream"[fillcolor=green]
"java.io.DataInputStream"[fillcolor=green]
"sun.util.locale.provider.LocaleResources"[fillcolor=green]
"java.util.ResourceBundle"[fillcolor=green]
"sun.util.locale.provider.LocaleResources$ResourceReference"[fillcolor=red]
"java.util.Random"[fillcolor=green]
"java.util.concurrent.ThreadLocalRandom"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap$ForwardingNode"[fillcolor=green]
"java.util.Collections$UnmodifiableCollection"[fillcolor=green]
"java.util.Collections$UnmodifiableList"[fillcolor=green]
"java.util.Collections$UnmodifiableRandomAccessList"[fillcolor=green]
"com.oracle.svm.core.jdk.ThreadLocalRandomAccessors"[fillcolor=green]
"java.io.ByteArrayInputStream"[fillcolor=green]
"sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule"[fillcolor=green]
"java.time.temporal.ValueRange"[fillcolor=green]
"java.util.regex.PatternSyntaxException"[fillcolor=green]
"java.time.chrono.ChronoLocalDateTime"[fillcolor=green]
"java.time.LocalDateTime"[fillcolor=green]
"java.time.ZoneOffset"[fillcolor=green]
"java.util.regex.Pattern$Start"[fillcolor=green]
"java.util.zip.Checksum"[fillcolor=green]
"java.util.zip.CRC32"[fillcolor=red]
"sun.util.calendar.ZoneInfoFile$Checksum"[fillcolor=red]
"java.util.regex.Pattern$LastNode"[fillcolor=green]
"java.util.regex.Pattern$TreeInfo"[fillcolor=green]
"java.time.temporal.TemporalQueries"[fillcolor=green]
"java.time.temporal.TemporalQuery"[fillcolor=green]
"java.util.regex.Pattern$Branch"[fillcolor=green]
"java.util.regex.Pattern$SliceNode"[fillcolor=green]
"java.util.regex.Pattern$Slice"[fillcolor=green]
"java.util.regex.Pattern$BnM"[fillcolor=green]
"java.util.regex.Pattern$StartS"[fillcolor=green]
"java.util.regex.Pattern$Begin"[fillcolor=green]
"java.util.regex.Pattern$First"[fillcolor=green]
"java.util.regex.Pattern$Loop"[fillcolor=green]
"java.util.regex.Pattern$SliceS"[fillcolor=green]
"java.util.regex.Pattern$BnMS"[fillcolor=green]
"java.util.regex.Pattern$SliceIS"[fillcolor=green]
"java.util.regex.Pattern$SliceUS"[fillcolor=green]
"java.util.regex.Pattern$SliceU"[fillcolor=green]
"java.util.regex.ASCII"[fillcolor=green]
"java.util.regex.Pattern$SliceI"[fillcolor=green]
"java.text.Normalizer$Form"[fillcolor=green]
"java.text.Normalizer"[fillcolor=green]
"java.util.regex.Grapheme"[fillcolor=green]
"java.util.regex.Pattern$BranchConn"[fillcolor=green]
"java.util.LinkedHashSet"[fillcolor=green]
"sun.text.normalizer.NormalizerBase"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$Mode"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$1"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$2e15b21ac41110858062170f31db2d5afa0abbeb"[fillcolor=green]
"java.util.regex.Pattern$CharProperty"[fillcolor=green]
"java.util.regex.Pattern$UnixDollar"[fillcolor=green]
"java.util.regex.Pattern$Dollar"[fillcolor=green]
"java.util.regex.Pattern$UnixCaret"[fillcolor=green]
"java.util.regex.Pattern$Caret"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$NFKDMode"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$NFKCMode"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$NFDMode"[fillcolor=green]
"java.util.regex.Pattern$NFCCharProperty"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$NFCMode"[fillcolor=green]
"java.util.regex.Pattern$BmpCharProperty"[fillcolor=green]
"java.util.regex.Pattern$BitClass"[fillcolor=green]
"java.util.regex.Pattern$BmpCharPredicate"[fillcolor=green]
"java.util.regex.Pattern$Curly"[fillcolor=green]
"java.util.regex.Pattern$Ques"[fillcolor=green]
"java.util.regex.Pattern$GroupTail"[fillcolor=green]
"java.util.regex.Pattern$Prolog"[fillcolor=green]
"java.time.chrono.ChronoLocalDate"[fillcolor=green]
"java.time.LocalDate"[fillcolor=green]
"java.time.LocalTime"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$a1687a1b59ff293516ba1401c9d16ef63396adea"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$613c1c54bbdd637835d1ae64707d3932ce8a0d81"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$8d0814506e864aa815e210b8c50f1b705109ea4b"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$70a13f30a7526b751ce30ffc27f38be585b0a576"[fillcolor=green]
"java.time.temporal.TemporalQueries$5"[fillcolor=green]
"java.util.regex.Pattern$Behind"[fillcolor=green]
"java.util.regex.Pattern$BehindS"[fillcolor=green]
"java.util.regex.Pattern$NotBehind"[fillcolor=green]
"java.util.regex.Pattern$NotBehindS"[fillcolor=green]
"java.util.regex.Pattern$Qtype"[fillcolor=green]
"java.util.regex.Pattern$End"[fillcolor=green]
"java.util.regex.CharPredicates"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$23812c6ab57f7529f3847de2d6c13aecb354db33"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$4c4083c744ede27b4fb88b7e7214a4b35190c1fc"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$f908621a8d71c975792adfb63c86ea8edc6405c9"[fillcolor=green]
"java.util.regex.Pattern$Pos"[fillcolor=green]
"java.util.regex.Pattern$Neg"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$09dd24b4f2bcdb0d473ca83ae08b11d5130ff33f"[fillcolor=green]
"java.util.regex.Pattern$CIBackRef"[fillcolor=green]
"java.util.regex.Pattern$BackRef"[fillcolor=green]
"java.util.regex.Pattern$GroupCurly"[fillcolor=green]
"java.util.regex.Pattern$GraphemeBound"[fillcolor=green]
"java.util.regex.Pattern$Bound"[fillcolor=green]
"java.util.regex.Pattern$LazyLoop"[fillcolor=green]
"java.util.regex.Pattern$XGrapheme"[fillcolor=green]
"java.util.regex.Pattern$LineEnding"[fillcolor=green]
"java.util.regex.Pattern$LastMatch"[fillcolor=green]
"java.util.ArrayList$SubList"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$909d378e2e4ee3b18e151ba53bb7cc41ffb9ff53"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$d515d0234509fe665113f2f3979abe06219311fb"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$6efe014475565de6ec539890044191c7c680b48d"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$261439a5c01109ebf4d9cfc9695a5369bf57d2e4"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$8837b2ee42db55242021cfb1c72cb25f772558e6"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$115d4027896a506199f61e7782a2661a208b90fe"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$d666c01552f3bdaf82b36f735f1e84a07c7f976d"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$227e80132943bded033c599dd14505b235f73e33"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$fcc728db68219ed0f5a053ca9e782d8abb271aa5"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$0554c5f4dccec64c4b68e378194d712c74fd9d6d"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$08bce27fc19e5be46bfb67d9254b91a0158dab6b"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$6e9b150f8847b790f27ea9e3d64e875946531ae4"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$320d6d72ee7646be4a2123901aa5c347f37cf0cc"[fillcolor=green]
"java.util.regex.Pattern$$Lambda$b434775620124fc1c754db966f5de4ab54a1e9e9"[fillcolor=green]
"java.util.regex.Pattern$CharPropertyGreedy"[fillcolor=green]
"java.util.regex.Pattern$BmpCharPropertyGreedy"[fillcolor=green]
"java.lang.CharacterName"[fillcolor=green]
"java.lang.Character$Subset"[fillcolor=green]
"java.lang.Character$UnicodeBlock"[fillcolor=green]
"java.lang.Character$UnicodeScript"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$2f51f87c0d9602375ccb78b686b7c02fbc633197"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$eb7eb9891345332a2ef87b6ec167a640c1a9217b"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$b0c42948e76b539c5d913baa741f8720afbb3a72"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$2ae4c0ddcb18b798b859dd7232f689d876a7e195"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$bd00072b654514651ccec1d03f327ba86e1a6e38"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$bdde6d6f37d4a47d22cdde986877da29fb8ca267"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$11617287a3ed7541978f5271113e9acb61ae0eae"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$5ab54ca5b91033609c67a3c80c53f048d21e850f"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$c5eaf284c9aa4e732ebff669af779151aa1f809c"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$cf065931ac8c1c885c4cc728f3a7beac2f78a0cc"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$293675e10ae937845d642c6a4f6db46b57539892"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$2cab1e83577c1b618a3ce333ff396871f46ea247"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$1d945d8948f7fcdaa41e15c7841ad4808454ae19"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$92bb1687f01b5997d4016c728e0c18293061d2ab"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$9fc4f9ef4ab402779e45b72421d8156e4848de73"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$576e0a2387834b445fa340c33386693fac78be73"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$33d4473ac93222e9835700aaa789e45fbdfe9955"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$05031e7c56ab36ca09e1d375ecbcea35b93a2141"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$8f48748ded4fa9a54d6dc725c4eca73a0daf787e"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$c234f99ea66240bf98bd077411ad239bc50ed730"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$f32676ecbffa3db4c5310f2f87b68c79ce265117"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$3b6cdc2d31aa8368493f1f8bc8cc880d46ea5ccc"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$08b28248fb1726b39e2b3dbd4108cc3edc60ffc1"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$7ef6464195054d67bad8980ea6fbe01f8e809ecf"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$2cab1e83577c1b618a3ce333ff396871f46ea247_1"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$8fc55179403d82155c710f900252f792dbd9546b"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$115d4027896a506199f61e7782a2661a208b90fe_1"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$293675e10ae937845d642c6a4f6db46b57539892_1"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$92bb1687f01b5997d4016c728e0c18293061d2ab_1"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$320d6d72ee7646be4a2123901aa5c347f37cf0cc_1"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$bdde6d6f37d4a47d22cdde986877da29fb8ca267_1"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$bd00072b654514651ccec1d03f327ba86e1a6e38_1"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$d42578d6d2604eb63aa97f938fac2288798e2f76"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$aca12497b7ef4401ebefda021d8a5c509376570e"[fillcolor=green]
"java.util.regex.CharPredicates$$Lambda$588c27561978e0728479bff9d502f76b7d0a2cfb"[fillcolor=green]
"java.lang.reflect.ReflectAccess"[fillcolor=green]
"java.util.regex.Pattern$1"[fillcolor=green]
"java.time.temporal.TemporalUnit"[fillcolor=green]
"java.io.ExpiringCache"[fillcolor=green]
"jdk.internal.ref.CleanerImpl$PhantomCleanableRef"[fillcolor=red]
"jdk.internal.ref.CleanerImpl$WeakCleanableRef"[fillcolor=red]
"jdk.internal.ref.CleanerImpl$SoftCleanableRef"[fillcolor=red]
"com.oracle.svm.jni.JNIOnLoadFunctionPointer"[fillcolor=green]
"com.oracle.svm.core.c.CGlobalDataNonConstantRegistry"[fillcolor=green]
"java.lang.ref.FinalReference"[fillcolor=red]
"sun.nio.cs.UTF_8$Encoder"[fillcolor=green]
"sun.nio.cs.Surrogate$Parser"[fillcolor=green]
"sun.nio.cs.Surrogate"[fillcolor=green]
"java.util.SimpleTimeZone"[fillcolor=green]
"sun.util.locale.provider.JRELocaleProviderAdapter$$Lambda$124fa7ad5601f4b988da4e3d6de5454928fdd9c4"[fillcolor=green]
"java.security.AccessController"[fillcolor=green]
"com.oracle.svm.core.jdk.AccessControllerUtil"[fillcolor=green]
"sun.util.locale.provider.AvailableLanguageTags"[fillcolor=green]
"sun.util.locale.provider.NumberFormatProviderImpl"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GCImpl$$Lambda$cc1fd8147a4c339217528732ebf5aa811b7bd0b6"[fillcolor=green]
"sun.util.locale.provider.JRELocaleProviderAdapter$$Lambda$1a2b5ad43006c2e215258d09947d25c7d041d460"[fillcolor=green]
"sun.util.cldr.CLDRBaseLocaleDataMetaInfo"[fillcolor=green]
"sun.util.locale.provider.JRELocaleProviderAdapter$$Lambda$2c9b11ef161d5964a0ecbe1089b569b2e0ce9ca5"[fillcolor=green]
"com.oracle.svm.core.genscavenge.ReferenceObjectProcessing"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GCImpl$CollectionInProgressError"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor$Counters"[fillcolor=green]
"com.oracle.svm.core.thread.Safepoint$Options"[fillcolor=green]
"com.oracle.svm.core.genscavenge.ThreadLocalMTWalker"[fillcolor=green]
"com.oracle.svm.core.threadlocal.VMThreadLocalMTSupport"[fillcolor=green]
"com.oracle.svm.core.MemoryWalker$NativeImageHeapRegionAccess"[fillcolor=green]
"com.oracle.svm.core.genscavenge.MemoryWalkerAccessBase"[fillcolor=green]
"com.oracle.svm.core.genscavenge.ReadOnlyPrimitiveMemoryWalkerAccess"[fillcolor=green]
"com.oracle.svm.core.genscavenge.ReadOnlyReferenceMemoryWalkerAccess"[fillcolor=green]
"com.oracle.svm.core.genscavenge.ReadOnlyRelocatableMemoryWalkerAccess"[fillcolor=green]
"com.oracle.svm.core.genscavenge.WritablePrimitiveMemoryWalkerAccess"[fillcolor=green]
"com.oracle.svm.core.genscavenge.WritableReferenceMemoryWalkerAccess"[fillcolor=green]
"com.oracle.svm.core.genscavenge.WritableHugeMemoryWalkerAccess"[fillcolor=green]
"com.oracle.svm.core.genscavenge.ReadOnlyHugeMemoryWalkerAccess"[fillcolor=green]
"com.oracle.svm.core.heap.InstanceReferenceMapDecoder"[fillcolor=green]
"com.oracle.svm.core.util.TypedMemoryReader"[fillcolor=green]
"com.oracle.svm.core.heap.CodeReferenceMapDecoder"[fillcolor=green]
"java.util.regex.Pattern$CharPredicate$$Lambda$0755d277453d9407d07cc3efeb1b54ff16e87ae7"[fillcolor=green]
"sun.util.calendar.CalendarDate"[fillcolor=green]
"sun.util.calendar.BaseCalendar$Date"[fillcolor=green]
"java.util.regex.Pattern$CharPredicate$$Lambda$3525e8329aefb03382d5561646daede4507c539b"[fillcolor=green]
"java.util.regex.Pattern$CharPredicate$$Lambda$6b21b04d62fd39c0fa8d74e8ac1e90b0f5e17f87"[fillcolor=green]
"sun.util.calendar.CalendarSystem"[fillcolor=green]
"sun.util.calendar.AbstractCalendar"[fillcolor=green]
"sun.util.calendar.BaseCalendar"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap$BaseIterator"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap$EntryIterator"[fillcolor=green]
"java.util.ArrayList$SubList$1"[fillcolor=green]
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$7cc5d00d773045569d89d232810bc2664b684401"[fillcolor=green]
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$395f6aa2d06dcff7971b978bbe33fa0b5cb76f7b"[fillcolor=green]
"sun.util.calendar.Gregorian"[fillcolor=green]
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$3c9c41b9741b688521061c74526d10a611b7cc47"[fillcolor=green]
"sun.util.calendar.Gregorian$Date"[fillcolor=green]
"java.util.Collections$UnmodifiableList$1"[fillcolor=green]
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$4ed567be4b1898b428b8904d853443f4fa688db0"[fillcolor=green]
"java.time.Instant$1"[fillcolor=green]
"java.util.Collections$UnmodifiableCollection$1"[fillcolor=green]
"java.time.chrono.Chronology"[fillcolor=green]
"sun.util.calendar.Era"[fillcolor=green]
"java.math.MutableBigInteger"[fillcolor=green]
"java.time.chrono.AbstractChronology"[fillcolor=green]
"java.time.chrono.IsoChronology"[fillcolor=green]
"sun.util.calendar.JulianCalendar"[fillcolor=green]
"sun.util.calendar.JulianCalendar$Date"[fillcolor=green]
"java.time.LocalTime$1"[fillcolor=green]
"sun.nio.cs.ArrayEncoder"[fillcolor=green]
"sun.util.calendar.CalendarUtils"[fillcolor=green]
"sun.util.locale.provider.CalendarDataUtility"[fillcolor=green]
"sun.util.locale.provider.LocaleServiceProviderPool"[fillcolor=red]
"java.util.concurrent.Helpers"[fillcolor=green]
"sun.util.locale.provider.LocaleServiceProviderPool$LocalizedObjectGetter"[fillcolor=green]
"sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap$TableStack"[fillcolor=green]
"jdk.internal.math.FormattedFloatingDecimal$2"[fillcolor=green]
"sun.nio.cs.ISO_8859_1$Encoder"[fillcolor=green]
"java.util.Locale$Builder"[fillcolor=green]
"sun.util.locale.LocaleSyntaxException"[fillcolor=green]
"java.math.BigDecimal$StringBuilderHelper"[fillcolor=green]
"java.text.DigitList"[fillcolor=green]
"java.text.FieldPosition"[fillcolor=green]
"java.text.DecimalFormat$FastPathData"[fillcolor=green]
"java.time.ZoneRegion"[fillcolor=green]
"jdk.internal.math.FormattedFloatingDecimal$1"[fillcolor=green]
"java.time.LocalDate$1"[fillcolor=green]
"java.util.regex.IntHashSet"[fillcolor=green]
"com.oracle.svm.core.jdk.Util_sun_util_calendar_CalendarSystem"[fillcolor=green]
"java.time.format.DateTimeFormatter"[fillcolor=green]
"java.lang.InterruptedException"[fillcolor=green]
"java.time.DayOfWeek"[fillcolor=green]
"java.time.Month"[fillcolor=green]
"java.util.concurrent.TimeUnit"[fillcolor=green]
"sun.util.locale.provider.DateFormatSymbolsProviderImpl"[fillcolor=green]
"jdk.vm.ci.meta.PrimitiveConstant$1"[fillcolor=green]
"java.math.BigDecimal$1"[fillcolor=green]
"java.util.Collections$EmptySet"[fillcolor=green]
"java.time.temporal.ChronoUnit"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$NFD32ModeImpl"[fillcolor=green]
"java.io.ExpiringCache$Entry"[fillcolor=green]
"java.io.EOFException"[fillcolor=green]
"com.oracle.svm.core.jdk.UserDirAccessors"[fillcolor=green]
"java.time.temporal.TemporalQueries$3"[fillcolor=green]
"java.time.temporal.TemporalQueries$4"[fillcolor=green]
"java.time.temporal.TemporalQueries$1"[fillcolor=green]
"java.time.temporal.TemporalQueries$6"[fillcolor=green]
"java.time.temporal.TemporalQueries$2"[fillcolor=green]
"java.time.temporal.TemporalQueries$7"[fillcolor=green]
"jdk.internal.util.Preconditions"[fillcolor=green]
"java.util.function.BiFunction"[fillcolor=green]
"java.util.ImmutableCollections$AbstractImmutableCollection"[fillcolor=green]
"java.util.ImmutableCollections"[fillcolor=green]
"java.util.ImmutableCollections$AbstractImmutableList"[fillcolor=green]
"java.util.ImmutableCollections$ListN"[fillcolor=green]
"java.util.ImmutableCollections$List12"[fillcolor=green]
"org.graalvm.nativeimage.Platform$WINDOWS"[fillcolor=green]
"com.oracle.svm.core.hub.AnnotationsEncoding"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$NFKC32ModeImpl"[fillcolor=green]
"java.util.zip.InflaterInputStream"[fillcolor=green]
"java.lang.CharacterName$1"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$NFKD32ModeImpl"[fillcolor=green]
"java.util.regex.Pattern$CharPredicate$$Lambda$1394a2da0b47528e5131bed29f7603328c3f5c4f"[fillcolor=green]
"sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$ModeImpl"[fillcolor=green]
"sun.text.normalizer.FilteredNormalizer2"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$NFKCModeImpl"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$NFKDModeImpl"[fillcolor=green]
"sun.util.locale.provider.DecimalFormatSymbolsProviderImpl"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$NFDModeImpl"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$NFC32ModeImpl"[fillcolor=green]
"sun.text.normalizer.NormalizerBase$NFCModeImpl"[fillcolor=green]
"jdk.vm.ci.services.Services"[fillcolor=green]
"java.util.regex.Pattern$BitClass$$Lambda$7b3866043ac969412952eb8c551d8f6baa47a850"[fillcolor=green]
"sun.util.cldr.CLDRBaseLocaleDataMetaInfo$TZCanonicalIDMapHolder"[fillcolor=green]
"java.util.Currency"[fillcolor=green]
"sun.text.normalizer.NormalizerImpl$ReorderingBuffer"[fillcolor=green]
"sun.text.normalizer.UTF16"[fillcolor=green]
"sun.text.normalizer.NormalizerImpl$UTF16Plus"[fillcolor=green]
"java.util.Currency$OtherCurrencyEntry"[fillcolor=green]
"java.util.Currency$SpecialCaseEntry"[fillcolor=green]
"sun.text.normalizer.NormalizerImpl$Hangul"[fillcolor=green]
"java.util.regex.Pattern$2"[fillcolor=green]
"com.oracle.svm.core.meta.ObjectConstantEquality"[fillcolor=green]
"com.oracle.svm.graal.isolated.IsolateAwareObjectConstantEquality"[fillcolor=green]
"sun.text.normalizer.UnicodeSet"[fillcolor=green]
"com.oracle.svm.core.genscavenge.CollectionPolicy$BySpaceAndTime"[fillcolor=green]
"java.time.format.DateTimeFormatterBuilder$DateTimePrinterParser"[fillcolor=green]
"java.time.format.DateTimeFormatterBuilder"[fillcolor=green]
"java.time.format.DateTimeFormatterBuilder$CompositePrinterParser"[fillcolor=green]
"jdk.internal.loader.ClassLoaders$PlatformClassLoader"[fillcolor=green]
"java.lang.Thread$State"[fillcolor=green]
"sun.util.resources.cldr.provider.CLDRLocaleDataMetaInfo"[fillcolor=green]
"org.graalvm.nativeimage.Platform$IOS"[fillcolor=green]
"sun.text.normalizer.UnicodeSet$SpanCondition"[fillcolor=green]
"java.util.LinkedHashMap$LinkedEntrySet"[fillcolor=green]
"java.util.ImmutableCollections$ListItr"[fillcolor=green]
"java.util.LinkedHashMap$LinkedKeySet"[fillcolor=green]
"sun.text.normalizer.UnicodeSetStringSpan"[fillcolor=green]
"sun.util.locale.InternalLocaleBuilder"[fillcolor=green]
"sun.util.locale.UnicodeLocaleExtension"[fillcolor=green]
"java.util.IllformedLocaleException"[fillcolor=green]
"sun.nio.cs.ISO_8859_1$Decoder"[fillcolor=green]
"com.oracle.svm.core.jdk.Resources"[fillcolor=green]
"com.oracle.svm.core.jdk.Resources$ResourcesSupport"[fillcolor=green]
"sun.util.locale.StringTokenIterator"[fillcolor=green]
"com.oracle.svm.graal.isolated.IsolatedObjectConstant"[fillcolor=green]
"java.util.Locale$LocaleKey"[fillcolor=green]
"java.time.Month$1"[fillcolor=green]
"java.time.format.DateTimePrintContext"[fillcolor=green]
"com.oracle.svm.graal.isolated.IsolatedCompileContext"[fillcolor=green]
"com.oracle.svm.graal.isolated.ImageHeapObjects"[fillcolor=green]
"java.nio.charset.CoderResult$$Lambda$6eec77ec4c9a6c730a7a3ea4bf49b2a3a58c9076"[fillcolor=green]
"java.util.SimpleTimeZone$Cache"[fillcolor=green]
"java.util.concurrent.ConcurrentHashMap$MapEntry"[fillcolor=green]
"sun.util.resources.LocaleData$1"[fillcolor=green]
"java.util.zip.DataFormatException"[fillcolor=green]
"java.util.zip.ZipException"[fillcolor=green]
"com.oracle.svm.graal.isolated.IsolatedCompileClient"[fillcolor=green]
"sun.util.locale.LocaleObjectCache"[fillcolor=green]
"java.util.Locale$Cache"[fillcolor=green]
"sun.util.locale.LocaleObjectCache$CacheEntry"[fillcolor=red]
"com.oracle.svm.core.genscavenge.CollectionPolicy$Options"[fillcolor=green]
"java.io.ExpiringCache$1"[fillcolor=green]
"java.util.TreeSet"[fillcolor=green]
"sun.text.normalizer.BMPSet"[fillcolor=green]
"com.oracle.svm.core.hub.InteriorObjRefWalker"[fillcolor=green]
"com.oracle.svm.core.jdk.LambdaFormHiddenMethod$$ProxyImpl"[fillcolor=green]
"com.oracle.svm.core.jdk.InternalVMMethod$$ProxyImpl"[fillcolor=green]
"sun.util.locale.provider.CurrencyNameProviderImpl"[fillcolor=green]
"sun.util.locale.provider.CollatorProviderImpl"[fillcolor=green]
"sun.util.locale.provider.BreakIteratorProviderImpl"[fillcolor=green]
"sun.util.locale.provider.DateFormatProviderImpl"[fillcolor=green]
"sun.util.locale.provider.LocaleNameProviderImpl"[fillcolor=green]
"sun.util.locale.provider.CalendarNameProviderImpl"[fillcolor=green]
"sun.util.locale.provider.TimeZoneNameProviderImpl"[fillcolor=green]
"sun.util.cldr.CLDRCalendarNameProviderImpl"[fillcolor=green]
"sun.util.cldr.CLDRTimeZoneNameProviderImpl"[fillcolor=green]
"sun.util.locale.provider.JavaTimeDateTimePatternImpl"[fillcolor=green]
"sun.util.locale.provider.CalendarDataProviderImpl"[fillcolor=green]
"sun.util.cldr.CLDRCalendarDataProviderImpl"[fillcolor=green]
"java.util.Collections$UnmodifiableMap"[fillcolor=green]
"java.util.Collections$UnmodifiableSet"[fillcolor=green]
"java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet"[fillcolor=green]
"java.util.LinkedHashMap$LinkedHashIterator"[fillcolor=green]
"java.util.LinkedHashMap$LinkedEntryIterator"[fillcolor=green]
"java.util.LinkedHashMap$LinkedKeyIterator"[fillcolor=green]
"java.util.zip.ZipUtils"[fillcolor=green]
"java.util.zip.Inflater$InflaterZStreamRef"[fillcolor=green]
"sun.util.resources.Bundles$Strategy"[fillcolor=green]
"sun.util.resources.Bundles"[fillcolor=green]
"sun.util.resources.LocaleData$LocaleDataStrategy"[fillcolor=green]
"java.time.chrono.ChronoZonedDateTime"[fillcolor=green]
"sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar"[fillcolor=green]
"java.time.format.DateTimePrintContext$1"[fillcolor=green]
"java.util.zip.Inflater$InflaterZStreamRef$FinalizableZStreamRef"[fillcolor=green]
"sun.util.locale.BaseLocale$Key"[fillcolor=green]
"sun.util.locale.BaseLocale$Cache"[fillcolor=green]
"sun.util.locale.LanguageTag"[fillcolor=green]
"sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString"[fillcolor=green]
"java.time.ZonedDateTime"[fillcolor=green]
"java.util.Currency$CurrencyNameGetter"[fillcolor=green]
"sun.util.resources.OpenListResourceBundle"[fillcolor=green]
"sun.util.resources.TimeZoneNamesBundle"[fillcolor=green]
"java.util.AbstractSequentialList"[fillcolor=green]
"java.util.LinkedList"[fillcolor=green]
"java.util.LinkedList$Node"[fillcolor=green]
"java.util.Collections$EmptyMap"[fillcolor=green]
"sun.util.locale.provider.JRELocaleProviderAdapter$$Lambda$e93e2fd0d965318a654c5466309de857d3bd07ee"[fillcolor=green]
"sun.util.cldr.CLDRLocaleProviderAdapter$$Lambda$61d0b69a5d173d21af283b2cedeaaef0a65bdf9c"[fillcolor=green]
"java.util.Collections$SingletonMap"[fillcolor=green]
"com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor$NoopCounters"[fillcolor=green]
"sun.text.normalizer.OutputInt"[fillcolor=green]
"sun.text.normalizer.Utility"[fillcolor=green]
"sun.util.calendar.ImmutableGregorianDate"[fillcolor=green]
"java.time.format.DateTimeFormatterBuilder$SettingsParser"[fillcolor=green]
"java.time.format.DateTimeFormatterBuilder$InstantPrinterParser"[fillcolor=green]
"java.util.stream.BaseStream"[fillcolor=green]
"java.util.stream.Stream"[fillcolor=green]
"sun.util.locale.provider.LocaleResources$$Lambda$526b83ffdb2860039841c0e237d094228fbb42fa"[fillcolor=green]
"sun.util.locale.provider.LocaleResources$$Lambda$5d8c9734068bf987e3508c754130d36c972a034a"[fillcolor=green]
"java.util.ImmutableCollections$AbstractImmutableSet"[fillcolor=green]
"java.util.ImmutableCollections$SetN"[fillcolor=green]
"java.util.ImmutableCollections$Set12"[fillcolor=green]
"java.util.Spliterator"[fillcolor=green]
"java.util.stream.StreamSupport"[fillcolor=green]
"java.util.HashMap$HashMapSpliterator"[fillcolor=green]
"java.util.HashMap$KeySpliterator"[fillcolor=green]
"java.util.stream.PipelineHelper"[fillcolor=green]
"java.util.stream.AbstractPipeline"[fillcolor=green]
"java.util.stream.ReferencePipeline"[fillcolor=green]
"java.util.stream.ReferencePipeline$Head"[fillcolor=green]
"java.util.stream.StreamOpFlag"[fillcolor=green]
"sun.util.cldr.CLDRTimeZoneNameProviderImpl$AVAILABLE_IDS"[fillcolor=green]
"java.util.ResourceBundle$Control"[fillcolor=green]
"java.text.MessageFormat"[fillcolor=green]
"sun.util.locale.ParseStatus"[fillcolor=green]
"java.util.ResourceBundle$SingleFormatControl"[fillcolor=green]
"java.util.ResourceBundle$NoFallbackControl"[fillcolor=green]
"sun.util.resources.ParallelListResourceBundle"[fillcolor=green]
"sun.util.resources.LocaleData$2"[fillcolor=green]
"java.util.AbstractMap$SimpleImmutableEntry"[fillcolor=green]
"java.util.TreeMap$NavigableSubMap"[fillcolor=green]
"java.util.LinkedList$ListItr"[fillcolor=green]
"java.time.ZonedDateTime$1"[fillcolor=green]
"java.util.Collections$SingletonSet"[fillcolor=green]
"java.util.MissingResourceException"[fillcolor=green]
"java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1"[fillcolor=green]
"java.util.ImmutableCollections$SetN$SetNIterator"[fillcolor=green]
"java.util.ImmutableCollections$Set12$1"[fillcolor=green]
"java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry"[fillcolor=green]
"java.util.ResourceBundle$Control$CandidateListCache"[fillcolor=green]
"sun.util.resources.LocaleData$SupplementaryStrategy"[fillcolor=green]
"java.time.chrono.ChronoZonedDateTime$1"[fillcolor=green]
"java.util.TreeMap$KeyIterator"[fillcolor=green]
"sun.text.normalizer.UnicodeSetStringSpan$OffsetList"[fillcolor=green]
"java.text.AttributedCharacterIterator"[fillcolor=green]
"java.util.stream.ReferencePipeline$StatelessOp"[fillcolor=green]
"java.util.stream.ReferencePipeline$2"[fillcolor=green]
"java.util.stream.StreamShape"[fillcolor=green]
"java.text.ChoiceFormat"[fillcolor=green]
"java.text.DateFormat"[fillcolor=green]
"sun.text.normalizer.UCharacterProperty"[fillcolor=green]
"java.text.AttributedString"[fillcolor=green]
"java.text.AttributedCharacterIterator$Attribute"[fillcolor=green]
"java.text.Format$Field"[fillcolor=green]
"java.text.MessageFormat$Field"[fillcolor=green]
"java.text.SimpleDateFormat"[fillcolor=green]
"java.text.Format$FieldDelegate"[fillcolor=green]
"java.text.CharacterIteratorFieldDelegate"[fillcolor=green]
"sun.util.locale.provider.JRELocaleProviderAdapter$$Lambda$99e20031274f3647473717703ce9ba8e80a8c5ff"[fillcolor=green]
"java.text.DontCareFieldPosition"[fillcolor=green]
"jdk.internal.math.FloatingDecimal$ASCIIToBinaryConverter"[fillcolor=green]
"java.text.NumberFormat$Field"[fillcolor=green]
"jdk.internal.math.FloatingDecimal$PreparedASCIIToBinaryBuffer"[fillcolor=green]
"java.text.DigitList$1"[fillcolor=green]
"jdk.internal.math.FloatingDecimal$ASCIIToBinaryBuffer"[fillcolor=green]
"jdk.internal.math.FloatingDecimal$HexFloatPattern"[fillcolor=green]
"java.text.DecimalFormat$DigitArrays"[fillcolor=green]
"java.lang.ref.Cleaner$1"[fillcolor=green]
"sun.util.resources.cldr.CurrencyNames_en"[fillcolor=green]
"java.util.ListResourceBundle"[fillcolor=green]
"sun.util.resources.BreakIteratorResourceBundle"[fillcolor=green]
"sun.text.resources.CollationData"[fillcolor=green]
"sun.util.resources.cldr.CalendarData"[fillcolor=green]
"sun.text.resources.BreakIteratorInfo"[fillcolor=green]
"sun.util.resources.cldr.LocaleNames_en"[fillcolor=green]
"sun.text.resources.BreakIteratorResources"[fillcolor=green]
"sun.util.logging.resources.logging"[fillcolor=green]
"sun.util.resources.cldr.TimeZoneNames_en"[fillcolor=green]
"sun.text.resources.cldr.FormatData_en"[fillcolor=green]
"sun.util.resources.TimeZoneNames_en"[fillcolor=green]
"sun.util.locale.provider.DateFormatProviderImpl$$Lambda$2bcf13c4edfd045f3213435bf07b05f29c6a7847"[fillcolor=green]
"sun.util.locale.provider.DateFormatProviderImpl$$Lambda$e3119750bb1abf49272813372d3b19923bd2d9c7"[fillcolor=green]
"java.util.Collections$1"[fillcolor=green]
"java.text.AttributedString$AttributedStringIterator"[fillcolor=green]
"java.text.DateFormat$Field"[fillcolor=green]
"java.text.Annotation"[fillcolor=green]
"java.text.CalendarBuilder"[fillcolor=green]
"java.text.FieldPosition$Delegate"[fillcolor=green]
"java.util.stream.ForEachOps"[fillcolor=green]
"java.util.stream.TerminalOp"[fillcolor=green]
"java.util.stream.Sink"[fillcolor=green]
"java.util.stream.TerminalSink"[fillcolor=green]
"java.util.stream.ForEachOps$ForEachOp"[fillcolor=green]
"java.util.stream.ForEachOps$ForEachOp$OfRef"[fillcolor=green]
"java.util.AbstractMap$SimpleEntry"[fillcolor=green]
"java.util.function.IntFunction"[fillcolor=green]
"java.util.stream.AbstractPipeline$$Lambda$0848cc7fae25ca52d114897d5d8625b227675611"[fillcolor=green]
"java.util.stream.Node"[fillcolor=green]
"sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter"[fillcolor=green]
"java.text.DontCareFieldPosition$1"[fillcolor=green]
"sun.util.resources.cldr.TimeZoneNames"[fillcolor=green]
"sun.util.resources.cldr.CurrencyNames"[fillcolor=green]
"sun.util.resources.cldr.LocaleNames"[fillcolor=green]
"java.security.PrivilegedExceptionAction"[fillcolor=green]
"sun.util.resources.BreakIteratorResourceBundle$$Lambda$29241f59fef59232ee7e585e58a145204ccb905f"[fillcolor=green]
"sun.util.resources.TimeZoneNames"[fillcolor=green]
"sun.text.resources.cldr.FormatData"[fillcolor=green]
"java.util.Vector$Itr"[fillcolor=green]
"java.util.Vector$ListItr"[fillcolor=green]
"java.text.AttributedString$AttributeMap"[fillcolor=green]
"java.util.concurrent.Future"[fillcolor=green]
"java.util.concurrent.ForkJoinTask"[fillcolor=green]
"java.util.concurrent.CountedCompleter"[fillcolor=green]
"java.util.stream.ForEachOps$ForEachOrderedTask"[fillcolor=green]
"java.util.stream.ForEachOps$ForEachTask"[fillcolor=green]
"java.util.stream.Sink$ChainedReference"[fillcolor=green]
"java.util.stream.ReferencePipeline$2$1"[fillcolor=green]
"java.util.concurrent.ForkJoinWorkerThread"[fillcolor=green]
"java.text.AttributeEntry"[fillcolor=green]
"java.util.stream.AbstractTask"[fillcolor=green]
"java.util.concurrent.ExecutorService"[fillcolor=green]
"java.util.concurrent.AbstractExecutorService"[fillcolor=green]
"java.util.concurrent.ForkJoinPool"[fillcolor=green]
"java.util.concurrent.ForkJoinPool$WorkQueue"[fillcolor=green]
"java.util.concurrent.ForkJoinTask$ExceptionNode"[fillcolor=red]
"java.util.concurrent.CancellationException"[fillcolor=green]
"java.util.stream.Node$Builder"[fillcolor=green]
"java.util.stream.ForEachOps$ForEachOrderedTask$$Lambda$242d4f41746b10ebce6280a5b40c1f2227637a1a"[fillcolor=green]
"java.util.stream.Nodes"[fillcolor=green]
"java.util.stream.Nodes$ArrayNode"[fillcolor=green]
"com.oracle.svm.core.jdk.ForkJoinPoolCommonAccessor"[fillcolor=green]
"java.util.stream.Nodes$FixedNodeBuilder"[fillcolor=green]
"java.util.stream.AbstractSpinedBuffer"[fillcolor=green]
"java.util.stream.SpinedBuffer"[fillcolor=green]
"java.util.stream.Nodes$SpinedNodeBuilder"[fillcolor=green]
"java.util.concurrent.ForkJoinPool$ForkJoinWorkerThreadFactory"[fillcolor=green]
"com.oracle.svm.core.hub.DynamicHub$$Lambda$efebe82833294cf4e1aada08981530e42d833a0d"[fillcolor=green]
"java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory"[fillcolor=green]
"com.oracle.svm.core.hub.ClassForNameSupport"[fillcolor=green]
"java.util.concurrent.RejectedExecutionException"[fillcolor=green]
"java.lang.invoke.VarHandleLongs$FieldInstanceReadOnly"[fillcolor=green]
"java.lang.invoke.VarHandleLongs"[fillcolor=green]
"java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite"[fillcolor=green]
"java.util.stream.SpinedBuffer$$Lambda$ba797fca8bd399214c854bec13715409e73fbab3"[fillcolor=green]
"java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1"[fillcolor=green]
"java.lang.invoke.VarHandleObjects$Array"[fillcolor=green]
"jdk.internal.util.Preconditions$1"[fillcolor=green]
"java.lang.invoke.VarHandle$1"[fillcolor=green]
"org.graalvm.nativeimage.impl.ObjectHandlesSupport"[fillcolor=green]
"com.oracle.svm.core.handles.ObjectHandlesFeature$ObjectHandlesSupportImpl"[fillcolor=green]
"com.oracle.svm.core.handles.ObjectHandlesFeature"[fillcolor=green]
"com.oracle.svm.core.posix.thread.PosixJavaThreads$PthreadStartRoutinePrologue"[fillcolor=green]
"com.oracle.svm.core.jdk.management.ManagementSupport"[fillcolor=green]
"java.lang.management.ThreadMXBean"[fillcolor=green]
"com.sun.management.ThreadMXBean"[fillcolor=green]
"com.oracle.svm.core.jdk.management.SubstrateThreadMXBean"[fillcolor=green]
"java.util.function.IntUnaryOperator"[fillcolor=green]
"com.oracle.svm.core.jdk.management.SubstrateThreadMXBean$$Lambda$9deec51467ed924190ddbf105c4602d407ed2e18"[fillcolor=green]
"java.net.SocketException"[fillcolor=green]
"sun.net.ConnectionResetException"[fillcolor=green]
"java.net.SocketTimeoutException"[fillcolor=green]
"java.net.ProtocolException"[fillcolor=green]
"sun.nio.fs.UnixException"[fillcolor=green]
"java.io.FileNotFoundException"[fillcolor=green]
"java.lang.IllegalAccessError"[fillcolor=green]
"java.net.ConnectException"[fillcolor=green]
"java.io.SyncFailedException"[fillcolor=green]
"java.net.NoRouteToHostException"[fillcolor=green]
"java.net.BindException"[fillcolor=green]
"java.net.UnknownHostException"[fillcolor=green]
"java.net.PortUnreachableException"[fillcolor=green]
"java.nio.charset.IllegalCharsetNameException"[fillcolor=green]
"java.nio.charset.UnsupportedCharsetException"[fillcolor=green]
"java.io.UnsupportedEncodingException"[fillcolor=green]
"sun.nio.cs.US_ASCII$Encoder"[fillcolor=green]
"sun.nio.cs.US_ASCII$Decoder"[fillcolor=green]
"sun.nio.cs.UTF_16BE"[fillcolor=green]
"sun.nio.cs.UTF_16"[fillcolor=green]
"sun.nio.cs.UTF_16LE"[fillcolor=green]
"com.oracle.svm.core.classinitialization.ClassInitializationInfo$ClassInitializerFunctionPointerHolder"[fillcolor=green]
"sun.nio.cs.UnicodeDecoder"[fillcolor=green]
"sun.nio.cs.UTF_16BE$Decoder"[fillcolor=green]
"sun.nio.cs.UTF_16$Decoder"[fillcolor=green]
"java.io.FileInputStream$1"[fillcolor=green]
"sun.nio.cs.UTF_16LE$Decoder"[fillcolor=green]
"sun.nio.cs.UnicodeEncoder"[fillcolor=green]
"sun.nio.cs.UTF_16BE$Encoder"[fillcolor=green]
"sun.nio.fs.Util"[fillcolor=green]
"sun.nio.cs.UTF_16$Encoder"[fillcolor=green]
"sun.nio.cs.UTF_16LE$Encoder"[fillcolor=green]
"sun.nio.fs.UnixNativeDispatcher$1"[fillcolor=green]
"jdk.internal.reflect.MethodAccessor"[fillcolor=green]
"com.oracle.svm.reflect.helpers.ReflectionProxy"[fillcolor=green]
"com.oracle.svm.reflect.DelegatingMethodHandle_getTarget_09ff06e76d1532eb2430b2fc860c31e389e92b28"[fillcolor=green]
"sun.nio.fs.UnixMountEntry"[fillcolor=green]
"java.nio.file.attribute.BasicFileAttributes"[fillcolor=green]
"java.nio.file.attribute.PosixFileAttributes"[fillcolor=green]
"sun.nio.fs.UnixFileAttributes"[fillcolor=green]
"sun.nio.fs.UnixFileStoreAttributes"[fillcolor=green]
"org.graalvm.compiler.word.Word" -> "java.lang.Object"
"org.graalvm.compiler.word.Word" -> "org.graalvm.word.Pointer"
"org.graalvm.word.WordFactory" -> "java.lang.Object"
"org.graalvm.compiler.word.ObjectAccess" -> "java.lang.Object"
"org.graalvm.compiler.word.BarrieredAccess" -> "java.lang.Object"
"java.lang.String" -> "java.lang.Object"
"java.lang.String" -> "java.lang.CharSequence"
"java.lang.Enum" -> "java.lang.Object"
"org.graalvm.word.LocationIdentity" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Unistd" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Errno" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Pthread" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Signal" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Mman" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Resource" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Dlfcn" -> "java.lang.Object"
"com.oracle.svm.core.thread.VMThreads" -> "java.lang.Object"
"com.oracle.svm.core.posix.thread.PosixVMThreads" -> "com.oracle.svm.core.thread.VMThreads"
"com.oracle.svm.core.posix.headers.darwin.DarwinVirtualMemory" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.darwin.Foundation" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.darwin.DarwinTime" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.darwin.DarwinPthread" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.darwin.DarwinErrno" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Mman$NoTransitions" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Time" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Signal$SignalEnum" -> "java.lang.Enum"
"com.oracle.svm.core.posix.headers.LibC" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Unistd$NoTransitions" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Pwd" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Sched" -> "java.lang.Object"
"com.oracle.svm.core.posix.headers.Sysctl" -> "java.lang.Object"
"com.oracle.svm.core.amd64.AMD64LibCHelper" -> "java.lang.Object"
"com.oracle.svm.core.jdk.Jvm" -> "java.lang.Object"
"com.oracle.svm.core.jdk.PlatformNativeLibrarySupport" -> "java.lang.Object"
"com.oracle.svm.core.jdk.JNIPlatformNativeLibrarySupport" -> "com.oracle.svm.core.jdk.PlatformNativeLibrarySupport"
"com.oracle.svm.core.LibCHelper" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.HeapChunk" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.AlignedHeapChunk" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.GCImpl" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.ThreadLocalAllocation" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.UnalignedHeapChunk" -> "java.lang.Object"
"com.oracle.svm.core.thread.JavaThreads" -> "java.lang.Object"
"com.oracle.svm.core.c.function.CEntryPointNativeFunctions" -> "java.lang.Object"
"com.oracle.svm.jni.nativeapi.JNIObjectRefType" -> "java.lang.Enum"
"com.oracle.svm.core.jdk.SystemPropertiesSupport" -> "java.lang.Object"
"com.oracle.svm.core.posix.PosixSystemPropertiesSupport" -> "com.oracle.svm.core.jdk.SystemPropertiesSupport"
"com.oracle.svm.core.posix.darwin.DarwinSystemPropertiesSupport" -> "com.oracle.svm.core.posix.PosixSystemPropertiesSupport"
"com.oracle.svm.core.genscavenge.Space" -> "java.lang.Object"
"com.oracle.svm.core.thread.VMOperation" -> "java.lang.Object"
"com.oracle.svm.core.thread.NativeVMOperation" -> "com.oracle.svm.core.thread.VMOperation"
"java.lang.ref.Reference" -> "java.lang.Object"
"jdk.vm.ci.meta.JavaKind" -> "java.lang.Enum"
"java.lang.reflect.GenericDeclaration" -> "java.lang.reflect.AnnotatedElement"
"java.lang.Class" -> "java.lang.Object"
"java.lang.Class" -> "java.lang.reflect.AnnotatedElement"
"java.lang.Class" -> "java.lang.reflect.Type"
"java.util.concurrent.locks.AbstractOwnableSynchronizer" -> "java.lang.Object"
"java.util.concurrent.locks.AbstractQueuedSynchronizer" -> "java.util.concurrent.locks.AbstractOwnableSynchronizer"
"java.util.concurrent.locks.ReentrantLock$Sync" -> "java.util.concurrent.locks.AbstractQueuedSynchronizer"
"java.util.concurrent.locks.ReentrantLock" -> "java.lang.Object"
"java.util.concurrent.locks.ReentrantLock$NonfairSync" -> "java.util.concurrent.locks.ReentrantLock$Sync"
"java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject" -> "java.lang.Object"
"com.oracle.svm.core.classinitialization.ClassInitializationInfo" -> "java.lang.Object"
"java.lang.ClassLoader" -> "java.lang.Object"
"com.oracle.svm.core.util.LazyFinalReference" -> "java.lang.Object"
"com.oracle.svm.core.hub.DynamicHub$ReflectionData" -> "java.lang.Object"
"org.graalvm.compiler.replacements.SnippetTemplate$AbstractTemplates" -> "java.lang.Object"
"org.graalvm.compiler.replacements.SnippetTemplate" -> "java.lang.Object"
"com.oracle.svm.core.graal.snippets.SubstrateTemplates" -> "org.graalvm.compiler.replacements.SnippetTemplate$AbstractTemplates"
"com.oracle.svm.core.graal.jdk.ArraycopySnippets" -> "com.oracle.svm.core.graal.snippets.SubstrateTemplates"
"java.lang.Boolean" -> "java.lang.Object"
"java.lang.Number" -> "java.lang.Object"
"java.lang.Byte" -> "java.lang.Number"
"java.lang.Byte$ByteCache" -> "java.lang.Object"
"java.lang.Short" -> "java.lang.Number"
"java.lang.Short$ShortCache" -> "java.lang.Object"
"java.lang.Character" -> "java.lang.Object"
"java.lang.Character$CharacterCache" -> "java.lang.Object"
"java.lang.Integer" -> "java.lang.Number"
"java.lang.Integer$IntegerCache" -> "java.lang.Object"
"java.lang.Float" -> "java.lang.Number"
"java.lang.Long" -> "java.lang.Number"
"java.lang.Long$LongCache" -> "java.lang.Object"
"java.lang.Double" -> "java.lang.Number"
"com.oracle.svm.core.util.Counter" -> "java.lang.Object"
"com.oracle.svm.core.allocationprofile.AllocationCounter" -> "java.lang.Object"
"java.lang.invoke.MethodHandle" -> "java.lang.Object"
"java.lang.invoke.VarHandle" -> "java.lang.Object"
"org.graalvm.nativeimage.impl.clinit.ClassInitializationTracking" -> "java.lang.Object"
"java.lang.Throwable" -> "java.lang.Object"
"java.lang.Error" -> "java.lang.Throwable"
"java.lang.AssertionError" -> "java.lang.Error"
"org.graalvm.compiler.replacements.AllocationSnippets" -> "java.lang.Object"
"com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets" -> "org.graalvm.compiler.replacements.AllocationSnippets"
"com.oracle.svm.core.snippets.SnippetRuntime" -> "java.lang.Object"
"java.lang.Math" -> "java.lang.Object"
"com.oracle.svm.graal.AMD64ArrayIndexOfForeignCalls" -> "java.lang.Object"
"java.lang.Thread" -> "java.lang.Object"
"com.oracle.svm.core.graal.jdk.SubstrateObjectCloneSnippets" -> "com.oracle.svm.core.graal.snippets.SubstrateTemplates"
"sun.misc.Unsafe" -> "java.lang.Object"
"com.oracle.svm.core.graal.jdk.SubstrateArraysCopyOfSnippets" -> "com.oracle.svm.core.graal.snippets.SubstrateTemplates"
"com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets" -> "com.oracle.svm.core.graal.snippets.SubstrateTemplates"
"java.lang.VirtualMachineError" -> "java.lang.Error"
"java.lang.StackOverflowError" -> "java.lang.VirtualMachineError"
"com.oracle.svm.core.thread.Safepoint" -> "java.lang.Object"
"java.lang.Exception" -> "java.lang.Throwable"
"java.lang.RuntimeException" -> "java.lang.Exception"
"com.oracle.svm.core.thread.Safepoint$SafepointException" -> "java.lang.RuntimeException"
"com.oracle.svm.core.identityhashcode.IdentityHashCodeSupport" -> "java.lang.Object"
"com.oracle.svm.core.monitor.MonitorSupport" -> "java.lang.Object"
"com.oracle.svm.core.monitor.MultiThreadedMonitorSupport" -> "com.oracle.svm.core.monitor.MonitorSupport"
"java.lang.OutOfMemoryError" -> "java.lang.VirtualMachineError"
"com.oracle.svm.core.graal.snippets.CEntryPointSnippets" -> "com.oracle.svm.core.graal.snippets.SubstrateTemplates"
"com.oracle.svm.core.snippets.FatalAssertions" -> "java.lang.Object"
"com.oracle.svm.core.snippets.ImplicitExceptions" -> "java.lang.Object"
"java.lang.NullPointerException" -> "java.lang.RuntimeException"
"java.lang.IndexOutOfBoundsException" -> "java.lang.RuntimeException"
"java.lang.ArrayIndexOutOfBoundsException" -> "java.lang.IndexOutOfBoundsException"
"java.lang.ClassCastException" -> "java.lang.RuntimeException"
"java.lang.ArrayStoreException" -> "java.lang.RuntimeException"
"java.lang.IllegalArgumentException" -> "java.lang.RuntimeException"
"java.lang.ArithmeticException" -> "java.lang.RuntimeException"
"com.oracle.svm.core.snippets.ExceptionUnwind" -> "java.lang.Object"
"org.graalvm.compiler.replacements.IdentityHashCodeSnippets" -> "java.lang.Object"
"com.oracle.svm.core.identityhashcode.SubstrateIdentityHashCodeSnippets" -> "org.graalvm.compiler.replacements.IdentityHashCodeSnippets"
"org.graalvm.compiler.graph.Node" -> "java.lang.Object"
"org.graalvm.compiler.nodes.ValueNode" -> "org.graalvm.compiler.graph.Node"
"org.graalvm.compiler.nodes.ValueNode" -> "org.graalvm.compiler.nodes.ValueNodeInterface"
"org.graalvm.compiler.nodes.spi.Lowerable" -> "org.graalvm.compiler.nodes.ValueNodeInterface"
"com.oracle.svm.core.config.ObjectLayout" -> "java.lang.Object"
"org.graalvm.compiler.nodes.NamedLocationIdentity" -> "org.graalvm.word.LocationIdentity"
"com.oracle.svm.core.SubstrateUtil" -> "java.lang.Object"
"com.oracle.svm.core.hub.HubType" -> "java.lang.Enum"
"org.graalvm.compiler.replacements.SnippetCounter" -> "java.lang.Object"
"org.graalvm.compiler.nodes.FixedNodeInterface" -> "org.graalvm.compiler.nodes.ValueNodeInterface"
"org.graalvm.compiler.nodes.FixedNode" -> "org.graalvm.compiler.nodes.ValueNodeInterface"
"org.graalvm.compiler.nodes.FixedNode" -> "org.graalvm.compiler.nodes.ValueNode"
"org.graalvm.compiler.nodes.FixedNode" -> "org.graalvm.compiler.nodes.FixedNodeInterface"
"org.graalvm.compiler.nodes.FixedWithNextNode" -> "org.graalvm.compiler.nodes.FixedNode"
"org.graalvm.compiler.replacements.SnippetCounterNode" -> "org.graalvm.compiler.nodes.ValueNodeInterface"
"org.graalvm.compiler.replacements.SnippetCounterNode" -> "org.graalvm.compiler.nodes.spi.Lowerable"
"org.graalvm.compiler.replacements.SnippetCounterNode" -> "org.graalvm.compiler.nodes.FixedWithNextNode"
"org.graalvm.compiler.replacements.ConstantStringIndexOfSnippets" -> "java.lang.Object"
"org.graalvm.compiler.replacements.ReplacementsUtil" -> "java.lang.Object"
"org.graalvm.compiler.options.OptionValues" -> "java.lang.Object"
"jdk.vm.ci.meta.DeoptimizationReason" -> "java.lang.Enum"
"jdk.vm.ci.meta.ResolvedJavaMethod" -> "java.lang.reflect.AnnotatedElement"
"jdk.vm.ci.meta.ResolvedJavaMethod" -> "jdk.vm.ci.meta.JavaMethod"
"jdk.vm.ci.meta.ResolvedJavaMethod" -> "jdk.vm.ci.meta.ModifiersProvider"
"com.oracle.svm.core.classinitialization.EnsureClassInitializedSnippets" -> "com.oracle.svm.core.graal.snippets.SubstrateTemplates"
"com.oracle.svm.core.classinitialization.ClassInitializationInfo$InitState" -> "java.lang.Enum"
"com.oracle.svm.core.genscavenge.graal.BarrierSnippetCounters" -> "java.lang.Object"
"com.oracle.svm.core.util.Counter$Group" -> "java.lang.Object"
"com.oracle.svm.core.heap.ObjectHeader" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.ObjectHeaderImpl" -> "com.oracle.svm.core.heap.ObjectHeader"
"com.oracle.svm.core.genscavenge.HeapPolicy" -> "java.lang.Object"
"com.oracle.svm.core.util.PointerUtils" -> "java.lang.Object"
"com.oracle.svm.core.util.UnsignedUtils" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.CardTable" -> "java.lang.Object"
"org.graalvm.compiler.replacements.AllocationSnippets$AllocationProfilingData" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets" -> "com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets"
"com.oracle.svm.core.heap.Heap" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.HeapImpl" -> "com.oracle.svm.core.heap.Heap"
"com.oracle.svm.core.SubstrateOptions" -> "java.lang.Object"
"org.graalvm.compiler.options.OptionKey" -> "java.lang.Object"
"com.oracle.svm.core.threadlocal.FastThreadLocal" -> "java.lang.Object"
"com.oracle.svm.core.threadlocal.FastThreadLocalBytes" -> "com.oracle.svm.core.threadlocal.FastThreadLocal"
"org.graalvm.compiler.replacements.AllocationSnippets$AllocationSnippetCounters" -> "java.lang.Object"
"com.oracle.svm.core.allocationprofile.AllocationSite$Options" -> "java.lang.Object"
"com.oracle.svm.core.allocationprofile.AllocationSite" -> "java.lang.Object"
"com.oracle.svm.core.hub.LayoutEncoding" -> "java.lang.Object"
"java.lang.Void" -> "java.lang.Object"
"jdk.vm.ci.meta.DeoptimizationAction" -> "java.lang.Enum"
"com.oracle.svm.core.graal.snippets.CFunctionSnippets" -> "com.oracle.svm.core.graal.snippets.SubstrateTemplates"
"java.util.Collection" -> "java.lang.Iterable"
"java.util.List" -> "java.util.Collection"
"java.util.List" -> "java.lang.Iterable"
"com.oracle.svm.core.stack.JavaFrameAnchors" -> "java.lang.Object"
"com.oracle.svm.core.threadlocal.FastThreadLocalWord" -> "com.oracle.svm.core.threadlocal.FastThreadLocal"
"com.oracle.svm.core.thread.VMThreads$StatusSupport" -> "java.lang.Object"
"com.oracle.svm.core.thread.ThreadingSupportImpl" -> "java.lang.Object"
"com.oracle.svm.core.thread.VMThreads$ActionOnTransitionToJavaSupport" -> "java.lang.Object"
"com.oracle.svm.core.threadlocal.FastThreadLocalInt" -> "com.oracle.svm.core.threadlocal.FastThreadLocal"
"com.oracle.svm.core.thread.ThreadingSupportImpl$Options" -> "java.lang.Object"
"org.graalvm.collections.EconomicMap" -> "org.graalvm.collections.UnmodifiableEconomicMap"
"com.oracle.svm.core.graal.snippets.StackOverflowCheckImpl" -> "java.lang.Object"
"com.oracle.svm.core.monitor.MonitorSnippets" -> "com.oracle.svm.core.graal.snippets.SubstrateTemplates"
"com.oracle.svm.core.Isolates" -> "java.lang.Object"
"com.oracle.svm.core.c.function.CEntryPointBuiltins" -> "java.lang.Object"
"com.oracle.svm.core.code.IsolateEnterStub" -> "java.lang.Object"
"org.graalvm.home.impl.VmLocatorSymbol" -> "java.lang.Object"
"com.oracle.svm.core.JavaMainWrapper" -> "java.lang.Object"
"java.lang.ReflectiveOperationException" -> "java.lang.Exception"
"java.lang.invoke.DelegatingMethodHandle" -> "java.lang.invoke.MethodHandle"
"java.lang.ClassNotFoundException" -> "java.lang.ReflectiveOperationException"
"com.oracle.svm.jni.access.JNIAccessibleMember" -> "java.lang.Object"
"com.oracle.svm.jni.access.JNIAccessibleMethod" -> "com.oracle.svm.jni.access.JNIAccessibleMember"
"com.oracle.svm.jni.JNIJavaCallWrappers" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIInvocationInterface" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIInvocationInterface$Exports" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIFunctions" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIFunctions$UnimplementedWithJNIEnvArgument" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIFunctions$UnimplementedWithJavaVMArgument" -> "java.lang.Object"
"java.nio.Buffer" -> "java.lang.Object"
"com.oracle.svm.jni.access.JNINativeLinkage" -> "java.lang.Object"
"java.lang.InstantiationException" -> "java.lang.ReflectiveOperationException"
"java.nio.ByteBuffer" -> "java.nio.Buffer"
"java.nio.MappedByteBuffer" -> "java.nio.ByteBuffer"
"java.nio.DirectByteBuffer" -> "java.nio.MappedByteBuffer"
"com.oracle.svm.core.log.Log" -> "java.lang.Object"
"java.lang.reflect.AccessibleObject" -> "java.lang.Object"
"java.lang.reflect.AccessibleObject" -> "java.lang.reflect.AnnotatedElement"
"java.lang.reflect.Field" -> "java.lang.reflect.AccessibleObject"
"java.lang.NoSuchFieldException" -> "java.lang.ReflectiveOperationException"
"com.oracle.svm.jni.access.JNIAccessibleMethodDescriptor" -> "java.lang.Object"
"java.lang.reflect.Executable" -> "java.lang.reflect.AnnotatedElement"
"java.lang.reflect.Executable" -> "java.lang.reflect.AccessibleObject"
"java.lang.reflect.Constructor" -> "java.lang.reflect.Executable"
"java.lang.reflect.Method" -> "java.lang.reflect.Executable"
"java.util.AbstractCollection" -> "java.lang.Object"
"java.util.AbstractCollection" -> "java.util.Collection"
"java.util.AbstractCollection" -> "java.lang.Iterable"
"java.util.AbstractList" -> "java.util.Collection"
"java.util.AbstractList" -> "java.util.List"
"java.util.AbstractList" -> "java.lang.Iterable"
"java.util.AbstractList" -> "java.util.AbstractCollection"
"java.util.ArrayList" -> "java.util.Collection"
"java.util.ArrayList" -> "java.util.List"
"java.util.ArrayList" -> "java.lang.Iterable"
"java.util.ArrayList" -> "java.util.AbstractList"
"java.io.File" -> "java.lang.Object"
"java.lang.NoSuchMethodException" -> "java.lang.ReflectiveOperationException"
"java.util.StringTokenizer" -> "java.lang.Object"
"java.util.StringTokenizer" -> "java.util.Enumeration"
"com.oracle.svm.core.jdk.StringInternSupport" -> "java.lang.Object"
"java.util.AbstractMap" -> "java.lang.Object"
"java.util.AbstractMap" -> "java.util.Map"
"java.util.concurrent.ConcurrentMap" -> "java.util.Map"
"java.util.concurrent.ConcurrentHashMap" -> "java.util.concurrent.ConcurrentMap"
"java.util.concurrent.ConcurrentHashMap" -> "java.util.Map"
"java.util.concurrent.ConcurrentHashMap" -> "java.util.AbstractMap"
"com.oracle.svm.core.heap.FillerObject" -> "java.lang.Object"
"com.oracle.svm.core.SubstrateGCOptions" -> "java.lang.Object"
"com.oracle.svm.core.option.RuntimeOptionKey" -> "org.graalvm.compiler.options.OptionKey"
"java.util.zip.Inflater" -> "java.lang.Object"
"java.lang.IllegalAccessException" -> "java.lang.ReflectiveOperationException"
"java.security.PrivilegedActionException" -> "java.lang.Exception"
"sun.nio.fs.UnixNativeDispatcher" -> "java.lang.Object"
"java.util.Dictionary" -> "java.lang.Object"
"java.util.Hashtable" -> "java.util.Dictionary"
"java.util.Hashtable" -> "java.util.Map"
"java.util.Properties" -> "java.util.Hashtable"
"java.lang.reflect.Proxy" -> "java.lang.Object"
"java.lang.System" -> "java.lang.Object"
"java.io.InputStream" -> "java.lang.Object"
"java.io.OutputStream" -> "java.lang.Object"
"java.io.IOException" -> "java.lang.Exception"
"com.oracle.svm.core.VM" -> "java.lang.Object"
"com.oracle.svm.core.c.CGlobalData" -> "java.lang.Object"
"java.util.SplittableRandom" -> "java.lang.Object"
"com.oracle.svm.core.util.VMError" -> "java.lang.Object"
"java.lang.NegativeArraySizeException" -> "java.lang.RuntimeException"
"org.graalvm.compiler.serviceprovider.GraalUnsafeAccess" -> "java.lang.Object"
"com.oracle.svm.core.meta.SubstrateObjectConstant" -> "java.lang.Object"
"com.oracle.svm.core.meta.SubstrateObjectConstant" -> "jdk.vm.ci.meta.JavaConstant"
"com.oracle.svm.core.meta.DirectSubstrateObjectConstant" -> "com.oracle.svm.core.meta.SubstrateObjectConstant"
"com.oracle.svm.core.thread.VMOperationControl" -> "java.lang.Object"
"com.oracle.svm.core.option.XOptions$XFlag" -> "java.lang.Object"
"com.oracle.svm.core.option.XOptions" -> "java.lang.Object"
"com.oracle.svm.core.thread.Safepoint$Statistics" -> "java.lang.Object"
"java.lang.AbstractStringBuilder" -> "java.lang.Object"
"java.lang.AbstractStringBuilder" -> "java.lang.CharSequence"
"java.lang.StringBuilder" -> "java.lang.CharSequence"
"java.lang.StringBuilder" -> "java.lang.AbstractStringBuilder"
"com.oracle.svm.core.genscavenge.Timer" -> "java.lang.Object"
"com.oracle.svm.core.thread.Safepoint$Statistics$Options" -> "java.lang.Object"
"com.oracle.svm.core.threadlocal.FastThreadLocalObject" -> "com.oracle.svm.core.threadlocal.FastThreadLocal"
"com.oracle.svm.core.graal.snippets.DeoptTester" -> "java.lang.Object"
"com.oracle.svm.core.jdk.VMErrorSubstitutions" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.HeapChunkProvider" -> "java.lang.Object"
"java.lang.CloneNotSupportedException" -> "java.lang.Exception"
"com.oracle.svm.core.log.RealLog" -> "com.oracle.svm.core.log.Log"
"com.oracle.svm.core.stack.ThreadStackPrinter" -> "java.lang.Object"
"com.oracle.svm.core.thread.VMOperationControl$OpInProgress" -> "java.lang.Object"
"com.oracle.svm.core.log.FunctionPointerLogHandler" -> "java.lang.Object"
"com.oracle.svm.core.log.FunctionPointerLogHandler" -> "com.oracle.svm.core.log.LogHandlerExtension"
"com.oracle.svm.core.thread.Safepoint$Master" -> "java.lang.Object"
"com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicInteger" -> "java.lang.Object"
"com.oracle.svm.core.jdk.UninterruptibleUtils" -> "java.lang.Object"
"com.oracle.svm.core.hub.DynamicHubSupport" -> "java.lang.Object"
"com.oracle.svm.core.util.NonmovableByteArrayReader" -> "java.lang.Object"
"com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicWord" -> "java.lang.Object"
"com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicUnsigned" -> "com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicWord"
"org.graalvm.compiler.core.common.NumUtil" -> "java.lang.Object"
"com.oracle.svm.core.c.CGlobalDataImpl" -> "com.oracle.svm.core.c.CGlobalData"
"com.oracle.svm.core.jdk.UnsupportedFeatureError" -> "java.lang.Error"
"com.oracle.svm.core.jdk.JDKUtils" -> "java.lang.Object"
"com.oracle.svm.core.SubstrateGCOptions$2" -> "com.oracle.svm.core.option.RuntimeOptionKey"
"com.oracle.svm.core.jdk.RuntimeSupport" -> "java.lang.Object"
"com.oracle.svm.core.locks.VMMutex" -> "java.lang.Object"
"com.oracle.svm.core.posix.thread.PosixJavaThreads" -> "com.oracle.svm.core.thread.JavaThreads"
"com.oracle.svm.core.posix.pthread.PthreadVMMutex" -> "com.oracle.svm.core.locks.VMMutex"
"com.oracle.svm.core.heap.PhysicalMemory" -> "java.lang.Object"
"java.lang.ThreadGroup" -> "java.lang.Object"
"com.oracle.svm.core.FrameAccess" -> "java.lang.Object"
"com.oracle.svm.core.amd64.AMD64FrameAccess" -> "com.oracle.svm.core.FrameAccess"
"java.lang.LinkageError" -> "java.lang.Error"
"java.lang.NoClassDefFoundError" -> "java.lang.LinkageError"
"com.oracle.svm.core.os.AbstractCommittedMemoryProvider" -> "java.lang.Object"
"com.oracle.svm.core.os.AbstractCommittedMemoryProvider" -> "com.oracle.svm.core.os.CommittedMemoryProvider"
"com.oracle.svm.core.os.OSCommittedMemoryProvider" -> "com.oracle.svm.core.os.AbstractCommittedMemoryProvider"
"com.oracle.svm.core.option.RuntimeOptionParser" -> "java.lang.Object"
"com.oracle.svm.core.JavaMainWrapper$JavaMainSupport" -> "java.lang.Object"
"com.oracle.svm.core.code.CodeInfoTable" -> "java.lang.Object"
"com.oracle.svm.core.c.NonmovableArrays" -> "java.lang.Object"
"com.oracle.svm.core.heap.ReferenceAccessImpl" -> "java.lang.Object"
"org.graalvm.compiler.core.common.CompressEncoding" -> "java.lang.Object"
"com.oracle.svm.core.heap.GCCause" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.GenScavengeGCCause" -> "com.oracle.svm.core.heap.GCCause"
"java.lang.ExceptionInInitializerError" -> "java.lang.LinkageError"
"com.oracle.svm.core.log.Log$NoopLog" -> "com.oracle.svm.core.log.Log"
"com.oracle.svm.core.c.function.CEntryPointSetup$EnterPrologue" -> "java.lang.Object"
"com.oracle.svm.core.c.function.CEntryPointSetup" -> "java.lang.Object"
"com.oracle.svm.core.c.function.CEntryPointSetup$LeaveEpilogue" -> "java.lang.Object"
"com.oracle.svm.core.code.RuntimeCodeCache" -> "java.lang.Object"
"com.oracle.svm.core.stack.JavaStackWalker" -> "java.lang.Object"
"com.oracle.svm.core.posix.PosixNativeLibrarySupport" -> "com.oracle.svm.core.jdk.JNIPlatformNativeLibrarySupport"
"com.oracle.svm.core.deopt.Deoptimizer" -> "java.lang.Object"
"com.oracle.svm.core.code.CodeInfoAccess" -> "java.lang.Object"
"com.oracle.svm.core.SubstrateGCOptions$3" -> "com.oracle.svm.core.option.RuntimeOptionKey"
"com.oracle.svm.core.JavaMainWrapper$EnterCreateIsolateWithCArgumentsPrologue" -> "java.lang.Object"
"com.oracle.svm.core.code.CodeInfoQueryResult" -> "java.lang.Object"
"com.oracle.svm.core.option.SubstrateOptionsParser$BooleanOptionFormat" -> "java.lang.Enum"
"com.oracle.svm.core.option.SubstrateOptionsParser" -> "java.lang.Object"
"java.util.concurrent.atomic.AtomicReference" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.HeapPolicyOptions" -> "java.lang.Object"
"com.oracle.svm.core.code.ImageCodeInfo" -> "java.lang.Object"
"java.lang.NumberFormatException" -> "java.lang.IllegalArgumentException"
"com.oracle.svm.core.SubstrateUtil$DiagnosticThunkRegister" -> "java.lang.Object"
"jdk.vm.ci.code.Architecture" -> "java.lang.Object"
"com.oracle.svm.core.properties.RuntimePropertyParser" -> "java.lang.Object"
"jdk.vm.ci.code.TargetDescription" -> "java.lang.Object"
"com.oracle.svm.core.SubstrateTargetDescription" -> "jdk.vm.ci.code.TargetDescription"
"jdk.vm.ci.amd64.AMD64" -> "jdk.vm.ci.code.Architecture"
"com.oracle.svm.core.amd64.AMD64CPUFeatureAccess" -> "java.lang.Object"
"jdk.vm.ci.amd64.AMD64$CPUFeature" -> "java.lang.Enum"
"java.util.Set" -> "java.util.Collection"
"java.util.Set" -> "java.lang.Iterable"
"java.util.AbstractSet" -> "java.util.Collection"
"java.util.AbstractSet" -> "java.util.Set"
"java.util.AbstractSet" -> "java.lang.Iterable"
"java.util.AbstractSet" -> "java.util.AbstractCollection"
"java.util.EnumSet" -> "java.util.AbstractSet"
"java.util.Arrays" -> "java.lang.Object"
"com.oracle.svm.core.threadlocal.VMThreadLocalInfos" -> "java.lang.Object"
"com.oracle.svm.core.threadlocal.VMThreadLocalInfo" -> "java.lang.Object"
"com.oracle.svm.core.heap.NoAllocationVerifier" -> "java.lang.Object"
"com.oracle.svm.core.code.CodeInfoTableCounters" -> "java.lang.Object"
"org.graalvm.nativeimage.c.type.CTypeConversion" -> "java.lang.Object"
"com.oracle.svm.core.threadlocal.FastThreadLocalLong" -> "com.oracle.svm.core.threadlocal.FastThreadLocal"
"com.oracle.svm.core.c.CTypeConversionSupportImpl" -> "java.lang.Object"
"com.oracle.svm.core.code.CodeInfoDecoder" -> "java.lang.Object"
"com.oracle.svm.core.Containers" -> "java.lang.Object"
"com.oracle.svm.core.posix.darwin.DarwinPhysicalMemory$PhysicalMemorySupportImpl" -> "java.lang.Object"
"com.oracle.svm.core.posix.darwin.DarwinPhysicalMemory$PhysicalMemorySupportImpl" -> "com.oracle.svm.core.heap.PhysicalMemory$PhysicalMemorySupport"
"com.oracle.svm.core.posix.darwin.DarwinPhysicalMemory" -> "com.oracle.svm.core.heap.PhysicalMemory"
"com.oracle.svm.core.Containers$Options" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIFunctions$Support" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIInvocationInterface$Support" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerReturnNullWord" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerVoid" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerReturnZero" -> "java.lang.Object"
"com.oracle.svm.core.c.function.CEntryPointSetup$LeaveDetachThreadEpilogue" -> "java.lang.Object"
"com.oracle.svm.core.c.function.CEntryPointSetup$LeaveTearDownIsolateEpilogue" -> "java.lang.Object"
"org.graalvm.nativeimage.impl.InternalPlatform$PLATFORM_JNI" -> "org.graalvm.nativeimage.Platform"
"org.graalvm.nativeimage.Platform$LINUX" -> "org.graalvm.nativeimage.Platform"
"com.oracle.svm.jni.functions.JNIFunctionTables" -> "java.lang.Object"
"com.oracle.svm.core.code.CodeInfoDecoderCounters" -> "java.lang.Object"
"com.oracle.svm.jni.JNIThreadLocalEnvironment" -> "java.lang.Object"
"io.firkin.kif.App" -> "java.lang.Object"
"com.oracle.svm.jni.JNIObjectHandles" -> "java.lang.Object"
"com.oracle.svm.jni.JNIThreadLocalPendingException" -> "java.lang.Object"
"com.oracle.svm.core.util.Utf8" -> "java.lang.Object"
"com.oracle.svm.jni.access.JNIReflectionDictionary" -> "java.lang.Object"
"com.oracle.svm.jni.JNIThreadLocalPinnedObjects" -> "java.lang.Object"
"com.oracle.svm.jni.access.JNIAccessibleField" -> "com.oracle.svm.jni.access.JNIAccessibleMember"
"com.oracle.svm.core.code.CodeInfoDecoder$Options" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerReturnNullHandle" -> "java.lang.Object"
"java.lang.IncompatibleClassChangeError" -> "java.lang.LinkageError"
"java.lang.NoSuchFieldError" -> "java.lang.IncompatibleClassChangeError"
"com.oracle.svm.core.handles.ThreadLocalHandles" -> "java.lang.Object"
"com.oracle.svm.jni.JNIImageHeapHandles" -> "java.lang.Object"
"com.oracle.svm.jni.JNIGlobalHandles" -> "java.lang.Object"
"com.oracle.svm.core.util.ExceptionHelpers" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerReturnMinusOne" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIInvocationInterface$Support$$Lambda$bd803f96b0c13e255e3d34d1dd3fb40d56c66928" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIInvocationInterface$Support$$Lambda$bd803f96b0c13e255e3d34d1dd3fb40d56c66928" -> "java.util.function.BiConsumer"
"com.oracle.svm.jni.JNIThreadLocalPinnedObjects$$Lambda$8fbefc29ee56fe1117d0c1ad8fb92d7ac5878d54" -> "java.lang.Object"
"com.oracle.svm.jni.JNIThreadLocalPinnedObjects$$Lambda$8fbefc29ee56fe1117d0c1ad8fb92d7ac5878d54" -> "java.util.function.Predicate"
"com.oracle.svm.jni.JNIThreadOwnedMonitors" -> "java.lang.Object"
"com.oracle.svm.jni.JNIThreadLocalPinnedObjects$PinnedObjectListNode" -> "java.lang.Object"
"com.oracle.svm.core.util.ByteArrayReader" -> "java.lang.Object"
"java.util.IdentityHashMap" -> "java.util.Map"
"java.util.IdentityHashMap" -> "java.util.AbstractMap"
"org.graalvm.compiler.core.common.util.AbstractTypeReader" -> "org.graalvm.compiler.core.common.util.TypeReader"
"org.graalvm.compiler.core.common.util.AbstractTypeReader" -> "java.lang.Object"
"org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader" -> "org.graalvm.compiler.core.common.util.AbstractTypeReader"
"java.lang.StringIndexOutOfBoundsException" -> "java.lang.IndexOutOfBoundsException"
"com.oracle.svm.core.c.enums.EnumRuntimeData" -> "java.lang.Object"
"com.oracle.svm.core.c.enums.EnumNoLookup" -> "com.oracle.svm.core.c.enums.EnumRuntimeData"
"java.io.FilterOutputStream" -> "java.io.OutputStream"
"com.oracle.svm.core.genscavenge.PinnedObjectImpl$PinnedObjectSupportImpl" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.PinnedObjectImpl" -> "java.lang.Object"
"java.io.PrintStream" -> "java.io.FilterOutputStream"
"com.oracle.svm.jni.access.JNIAccessibleClass" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerReturnJniErr" -> "java.lang.Object"
"java.lang.ThreadDeath" -> "java.lang.Error"
"java.lang.NoSuchMethodError" -> "java.lang.IncompatibleClassChangeError"
"java.nio.HeapByteBuffer" -> "java.nio.ByteBuffer"
"com.oracle.svm.jni.functions.JNIFunctions$Support$JNIExceptionHandlerReturnFalse" -> "java.lang.Object"
"com.oracle.svm.core.stack.ParameterizedStackFrameVisitor" -> "java.lang.Object"
"com.oracle.svm.core.stack.ThreadStackPrinter$Stage0StackFramePrintVisitor" -> "com.oracle.svm.core.stack.ParameterizedStackFrameVisitor"
"com.oracle.svm.core.stack.ThreadStackPrinter$Stage1StackFramePrintVisitor" -> "com.oracle.svm.core.stack.ThreadStackPrinter$Stage0StackFramePrintVisitor"
"com.oracle.svm.core.stack.ThreadStackPrinter$StackFramePrintVisitor" -> "com.oracle.svm.core.stack.ThreadStackPrinter$Stage1StackFramePrintVisitor"
"com.oracle.svm.core.util.CounterSupport" -> "java.lang.Object"
"jdk.vm.ci.meta.MetaUtil" -> "java.lang.Object"
"com.oracle.svm.core.handles.ObjectHandlesImpl" -> "java.lang.Object"
"com.oracle.svm.core.code.IsolateLeaveStub" -> "java.lang.Object"
"java.lang.reflect.Modifier" -> "java.lang.Object"
"com.oracle.svm.core.code.UntetheredCodeInfoAccess" -> "java.lang.Object"
"java.lang.IllegalMonitorStateException" -> "java.lang.RuntimeException"
"java.util.Objects" -> "java.lang.Object"
"com.oracle.svm.core.c.BoxedRelocatedPointer" -> "java.lang.Object"
"com.oracle.svm.jni.JNIJavaVMList" -> "java.lang.Object"
"com.oracle.svm.jni.JNIGeneratedMethodSupport" -> "java.lang.Object"
"com.oracle.svm.core.StaticFieldsSupport" -> "java.lang.Object"
"java.lang.CharacterData" -> "java.lang.Object"
"java.lang.CharacterDataLatin1" -> "java.lang.CharacterData"
"org.graalvm.compiler.serviceprovider.IsolateUtil" -> "java.lang.Object"
"com.oracle.svm.jni.functions.JNIInvocationInterface$Exports$1" -> "java.lang.Object"
"org.graalvm.nativeimage.UnmanagedMemory" -> "java.lang.Object"
"com.oracle.svm.core.posix.darwin.DarwinUContextRegisterDumper" -> "java.lang.Object"
"com.oracle.svm.core.posix.darwin.DarwinUContextRegisterDumper" -> "com.oracle.svm.core.posix.UContextRegisterDumper"
"com.oracle.svm.core.posix.UnmanagedMemorySupportImpl" -> "java.lang.Object"
"java.lang.CharacterDataUndefined" -> "java.lang.CharacterData"
"java.lang.CharacterDataPrivateUse" -> "java.lang.CharacterData"
"java.lang.CharacterData0E" -> "java.lang.CharacterData"
"java.lang.CharacterData02" -> "java.lang.CharacterData"
"java.lang.CharacterData01" -> "java.lang.CharacterData"
"java.lang.CharacterData00" -> "java.lang.CharacterData"
"com.oracle.svm.core.SubstrateOptions$3" -> "com.oracle.svm.core.option.RuntimeOptionKey"
"com.oracle.svm.core.SubstrateGCOptions$1" -> "com.oracle.svm.core.option.RuntimeOptionKey"
"org.graalvm.compiler.options.OptionDescriptor" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.Generation" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.YoungGeneration" -> "com.oracle.svm.core.genscavenge.Generation"
"java.util.SortedMap" -> "java.util.Map"
"com.oracle.svm.core.genscavenge.OldGeneration" -> "com.oracle.svm.core.genscavenge.Generation"
"java.lang.StackTraceElement" -> "java.lang.Object"
"com.oracle.svm.core.heap.RuntimeCodeInfoGCSupport" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.RuntimeCodeInfoGCSupportImpl" -> "com.oracle.svm.core.heap.RuntimeCodeInfoGCSupport"
"com.oracle.svm.core.genscavenge.ImageHeapInfo" -> "java.lang.Object"
"java.util.concurrent.atomic.AtomicInteger" -> "java.lang.Number"
"com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicLong" -> "java.lang.Object"
"java.util.concurrent.atomic.AtomicLong" -> "java.lang.Number"
"com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicReference" -> "java.lang.Object"
"java.nio.ByteOrder" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.GCImpl$RememberedSetConstructor" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.GCImpl$RememberedSetConstructor" -> "com.oracle.svm.core.heap.ObjectVisitor"
"com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor" -> "com.oracle.svm.core.heap.ObjectReferenceVisitor"
"com.oracle.svm.core.jdk.UninterruptibleUtils$AtomicPointer" -> "java.lang.Object"
"jdk.vm.ci.amd64.AMD64Kind" -> "java.lang.Enum"
"com.oracle.svm.core.genscavenge.GreyToBlackObjectVisitor" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.GreyToBlackObjectVisitor" -> "com.oracle.svm.core.heap.ObjectVisitor"
"com.oracle.svm.core.os.OSCommittedMemoryProvider$VirtualMemoryTracker" -> "java.lang.Object"
"com.oracle.svm.core.thread.VMOperationControl$WorkQueues" -> "java.lang.Object"
"com.oracle.svm.core.MemoryWalker" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.GCImpl$BlackenImageHeapRootsVisitor" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.GCAccounting" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.Timers" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.GCImpl$CollectionVMOperation" -> "com.oracle.svm.core.thread.NativeVMOperation"
"com.oracle.svm.core.genscavenge.GCImpl$ChunkReleaser" -> "java.lang.Object"
"com.oracle.svm.core.stack.StackFrameVisitor" -> "com.oracle.svm.core.stack.ParameterizedStackFrameVisitor"
"com.oracle.svm.core.genscavenge.CollectionPolicy" -> "java.lang.Object"
"java.util.Formatter" -> "java.lang.Object"
"java.io.Writer" -> "java.lang.Object"
"java.io.BufferedWriter" -> "java.io.Writer"
"java.io.OutputStreamWriter" -> "java.io.Writer"
"java.security.AccessControlContext" -> "java.lang.Object"
"java.lang.ThreadLocal$ThreadLocalMap" -> "java.lang.Object"
"java.lang.ThreadLocal" -> "java.lang.Object"
"java.lang.StringLatin1" -> "java.lang.Object"
"java.lang.StringUTF16" -> "java.lang.Object"
"jdk.internal.reflect.ReflectionFactory" -> "java.lang.Object"
"java.util.ConcurrentModificationException" -> "java.lang.RuntimeException"
"java.lang.Throwable$PrintStreamOrWriter" -> "java.lang.Object"
"java.lang.Throwable$WrappedPrintStream" -> "java.lang.Throwable$PrintStreamOrWriter"
"java.util.Collections" -> "java.lang.Object"
"java.lang.IllegalStateException" -> "java.lang.RuntimeException"
"jdk.internal.misc.Unsafe" -> "java.lang.Object"
"java.util.Collections$EmptyList" -> "java.util.AbstractList"
"org.graalvm.compiler.options.ModifiableOptionValues" -> "org.graalvm.compiler.options.OptionValues"
"com.oracle.svm.core.option.RuntimeOptionValues" -> "org.graalvm.compiler.options.ModifiableOptionValues"
"com.oracle.svm.core.jdk.StackTraceUtils" -> "java.lang.Object"
"com.oracle.svm.core.stack.JavaStackFrameVisitor" -> "com.oracle.svm.core.stack.StackFrameVisitor"
"com.oracle.svm.core.jdk.BuildStackTraceVisitor" -> "com.oracle.svm.core.stack.JavaStackFrameVisitor"
"org.graalvm.compiler.replacements.amd64.AMD64StringLatin1Substitutions" -> "java.lang.Object"
"java.lang.ref.WeakReference" -> "java.lang.ref.Reference"
"com.oracle.svm.core.handles.ObjectHandlesImpl$HandleWeakReference" -> "java.lang.ref.WeakReference"
"org.graalvm.compiler.replacements.amd64.AMD64StringUTF16Substitutions" -> "java.lang.Object"
"com.oracle.svm.core.posix.darwin.DarwinStackOverflowSupport" -> "java.lang.Object"
"com.oracle.svm.core.posix.pthread.PthreadVMLockSupport" -> "java.lang.Object"
"com.oracle.svm.core.locks.VMCondition" -> "java.lang.Object"
"com.oracle.svm.core.posix.pthread.PthreadVMCondition" -> "com.oracle.svm.core.locks.VMCondition"
"com.oracle.svm.core.stack.StackOverflowCheck$Options" -> "java.lang.Object"
"com.oracle.svm.core.code.RuntimeCodeInfoMemory" -> "java.lang.Object"
"java.lang.ref.PhantomReference" -> "java.lang.ref.Reference"
"jdk.internal.ref.Cleaner" -> "java.lang.ref.PhantomReference"
"java.io.FileDescriptor" -> "java.lang.Object"
"com.oracle.svm.core.posix.pthread.PthreadConditionUtils" -> "java.lang.Object"
"com.oracle.svm.core.MemoryUtil" -> "java.lang.Object"
"com.oracle.svm.core.CErrorNumber" -> "java.lang.Object"
"com.oracle.svm.core.posix.darwin.DarwinCErrorNumberSupport" -> "java.lang.Object"
"com.oracle.svm.core.thread.VMOperationControl$AllocationFreeQueue" -> "java.lang.Object"
"com.oracle.svm.core.thread.VMOperationControl$JavaAllocationFreeQueue" -> "com.oracle.svm.core.thread.VMOperationControl$AllocationFreeQueue"
"com.oracle.svm.core.thread.JavaVMOperation" -> "com.oracle.svm.core.thread.VMOperation"
"com.oracle.svm.core.thread.JavaThreads$FetchApplicationThreadsOperation" -> "com.oracle.svm.core.thread.JavaVMOperation"
"java.util.concurrent.atomic.AtomicBoolean" -> "java.lang.Object"
"com.oracle.svm.core.thread.JavaThreads$CheckReadyForTearDownOperation" -> "com.oracle.svm.core.thread.JavaVMOperation"
"com.oracle.svm.core.os.AbstractCopyingImageHeapProvider" -> "java.lang.Object"
"com.oracle.svm.core.posix.darwin.DarwinImageHeapProvider" -> "com.oracle.svm.core.os.AbstractCopyingImageHeapProvider"
"org.graalvm.compiler.replacements.NodeIntrinsificationProvider" -> "java.lang.Object"
"java.nio.BufferOverflowException" -> "java.lang.RuntimeException"
"com.oracle.svm.core.posix.darwin.Util_java_lang_System" -> "java.lang.Object"
"com.oracle.svm.core.util.TimeUtils" -> "java.lang.Object"
"java.lang.Class$ReflectionData" -> "java.lang.Object"
"java.lang.UnsupportedOperationException" -> "java.lang.RuntimeException"
"java.nio.ReadOnlyBufferException" -> "java.lang.UnsupportedOperationException"
"java.util.ArrayList$Itr" -> "java.lang.Object"
"java.util.ArrayList$Itr" -> "java.util.Iterator"
"java.util.Collections$SetFromMap" -> "java.util.Collection"
"java.util.Collections$SetFromMap" -> "java.util.Set"
"java.util.Collections$SetFromMap" -> "java.lang.Iterable"
"java.util.Collections$SetFromMap" -> "java.util.AbstractSet"
"java.nio.BufferUnderflowException" -> "java.lang.RuntimeException"
"java.util.RegularEnumSet" -> "java.util.EnumSet"
"java.util.JumboEnumSet" -> "java.util.EnumSet"
"jdk.internal.misc.SharedSecrets" -> "java.lang.Object"
"java.lang.InternalError" -> "java.lang.VirtualMachineError"
"com.oracle.svm.core.option.SubstrateOptionsParser$OptionParseResult" -> "java.lang.Object"
"java.lang.Shutdown" -> "java.lang.Object"
"java.lang.Runtime" -> "java.lang.Object"
"jdk.internal.misc.VM" -> "java.lang.Object"
"java.lang.StringCoding$Result" -> "java.lang.Object"
"java.io.InterruptedIOException" -> "java.io.IOException"
"org.graalvm.compiler.options.OptionType" -> "java.lang.Enum"
"java.util.HashSet" -> "java.util.Collection"
"java.util.HashSet" -> "java.util.Set"
"java.util.HashSet" -> "java.lang.Iterable"
"java.util.HashSet" -> "java.util.AbstractSet"
"org.graalvm.compiler.replacements.amd64.AMD64ArrayIndexOf" -> "java.lang.Object"
"com.oracle.svm.core.option.RuntimeOptionParser$$Lambda$855c641c8252c6db3caf182766b046d84403d212" -> "java.lang.Object"
"com.oracle.svm.core.option.RuntimeOptionParser$$Lambda$855c641c8252c6db3caf182766b046d84403d212" -> "java.util.function.Predicate"
"java.lang.StringCoding" -> "java.lang.Object"
"java.nio.charset.Charset" -> "java.lang.Object"
"java.lang.StringCoding$StringDecoder" -> "java.lang.Object"
"com.oracle.svm.core.posix.PosixVirtualMemoryProvider" -> "java.lang.Object"
"com.oracle.svm.core.posix.PosixVirtualMemoryProvider" -> "com.oracle.svm.core.os.VirtualMemoryProvider"
"java.util.concurrent.locks.AbstractQueuedSynchronizer$Node" -> "java.lang.Object"
"com.oracle.svm.core.posix.PosixUtils" -> "java.lang.Object"
"com.oracle.svm.core.jdk.RandomAccessors" -> "java.lang.Object"
"com.oracle.svm.core.jdk.SplittableRandomAccessors" -> "com.oracle.svm.core.jdk.RandomAccessors"
"org.graalvm.compiler.options.OptionsParser" -> "java.lang.Object"
"com.oracle.svm.core.thread.ParkEvent" -> "java.lang.Object"
"sun.nio.cs.Unicode" -> "java.nio.charset.Charset"
"sun.nio.cs.UTF_8" -> "sun.nio.cs.Unicode"
"com.oracle.svm.core.thread.ParkEventConsCell" -> "java.lang.Object"
"sun.nio.cs.ISO_8859_1" -> "java.nio.charset.Charset"
"sun.nio.cs.US_ASCII" -> "java.nio.charset.Charset"
"java.lang.ref.SoftReference" -> "java.lang.ref.Reference"
"java.lang.UnsatisfiedLinkError" -> "java.lang.LinkageError"
"org.graalvm.nativeimage.Platform$DARWIN" -> "org.graalvm.nativeimage.Platform"
"com.oracle.svm.core.genscavenge.FirstObjectTable" -> "java.lang.Object"
"java.util.StringJoiner" -> "java.lang.Object"
"com.oracle.svm.core.thread.ParkEventList" -> "java.lang.Object"
"com.oracle.svm.core.posix.thread.PosixParkEventFactory" -> "java.lang.Object"
"java.nio.charset.CharacterCodingException" -> "java.io.IOException"
"java.nio.charset.CoderResult" -> "java.lang.Object"
"java.nio.CharBuffer" -> "java.nio.Buffer"
"java.nio.CharBuffer" -> "java.lang.CharSequence"
"com.oracle.svm.core.heap.ReferenceHandler" -> "java.lang.Object"
"java.io.FileSystem" -> "java.lang.Object"
"java.io.UnixFileSystem" -> "java.io.FileSystem"
"java.lang.StringCoding$1" -> "java.lang.ThreadLocal"
"java.lang.ThreadLocal$ThreadLocalMap$Entry" -> "java.lang.ref.WeakReference"
"org.graalvm.compiler.serviceprovider.JavaVersionUtil" -> "java.lang.Object"
"com.oracle.svm.core.thread.DetachedParkEvent" -> "com.oracle.svm.core.thread.ParkEvent"
"java.util.Locale" -> "java.lang.Object"
"com.oracle.svm.core.jdk.NativeLibrarySupport" -> "java.lang.Object"
"jdk.internal.reflect.Reflection" -> "java.lang.Object"
"com.oracle.svm.core.thread.VMThreads$$Lambda$5b2f0aebe411eef1bc5ee5706171c32841925cd1" -> "java.lang.Object"
"com.oracle.svm.core.thread.JavaVMOperation$ThunkOperation" -> "com.oracle.svm.core.thread.JavaVMOperation"
"com.oracle.svm.core.jdk.GetCallerClassVisitor" -> "com.oracle.svm.core.stack.JavaStackFrameVisitor"
"com.oracle.svm.core.thread.VMOperation$SystemEffect" -> "java.lang.Enum"
"jdk.internal.misc.TerminatingThreadLocal" -> "java.lang.ThreadLocal"
"jdk.internal.misc.TerminatingThreadLocal$1" -> "java.lang.ThreadLocal"
"com.oracle.svm.core.code.FrameInfoQueryResult" -> "java.lang.Object"
"java.io.FileInputStream" -> "java.io.InputStream"
"java.io.FileOutputStream" -> "java.io.OutputStream"
"com.oracle.svm.core.code.ReusableTypeReader" -> "org.graalvm.compiler.core.common.util.AbstractTypeReader"
"com.oracle.svm.core.code.FrameInfoDecoder" -> "java.lang.Object"
"com.oracle.svm.core.stack.ThreadStackPrinter$StackFramePrintVisitor$SingleShotFrameInfoQueryResultAllocator" -> "java.lang.Object"
"com.oracle.svm.core.stack.ThreadStackPrinter$StackFramePrintVisitor$DummyValueInfoAllocator" -> "java.lang.Object"
"org.graalvm.collections.Equivalence" -> "java.lang.Object"
"org.graalvm.collections.Equivalence$2" -> "org.graalvm.collections.Equivalence"
"com.oracle.svm.core.c.CTypeConversionSupportImpl$1" -> "java.lang.Object"
"org.graalvm.collections.UnmodifiableEconomicSet" -> "java.lang.Iterable"
"org.graalvm.collections.EconomicSet" -> "java.lang.Iterable"
"org.graalvm.collections.EconomicSet" -> "org.graalvm.collections.UnmodifiableEconomicSet"
"org.graalvm.collections.EconomicMapImpl" -> "java.lang.Object"
"org.graalvm.collections.EconomicMapImpl" -> "org.graalvm.collections.UnmodifiableEconomicMap"
"org.graalvm.collections.EconomicMapImpl" -> "org.graalvm.collections.EconomicMap"
"org.graalvm.collections.EconomicMapImpl" -> "java.lang.Iterable"
"org.graalvm.collections.EconomicMapImpl" -> "org.graalvm.collections.UnmodifiableEconomicSet"
"org.graalvm.collections.EconomicMapImpl" -> "org.graalvm.collections.EconomicSet"
"com.oracle.svm.core.c.CCharPointerHolderImpl" -> "java.lang.Object"
"com.oracle.svm.core.option.SubstrateOptionsParser$$Lambda$6fe3781d3d2429cb039c6cd3764035472b2acec8" -> "java.lang.Object"
"com.oracle.svm.core.option.SubstrateOptionsParser$$Lambda$6fe3781d3d2429cb039c6cd3764035472b2acec8" -> "java.util.function.Consumer"
"com.oracle.svm.core.code.FrameInfoQueryResult$ValueInfo" -> "java.lang.Object"
"java.nio.charset.MalformedInputException" -> "java.nio.charset.CharacterCodingException"
"java.lang.ConditionalSpecialCasing" -> "java.lang.Object"
"com.oracle.svm.core.meta.SharedMethod" -> "java.lang.reflect.AnnotatedElement"
"com.oracle.svm.core.meta.SharedMethod" -> "jdk.vm.ci.meta.JavaMethod"
"com.oracle.svm.core.meta.SharedMethod" -> "jdk.vm.ci.meta.ResolvedJavaMethod"
"com.oracle.svm.core.meta.SharedMethod" -> "jdk.vm.ci.meta.ModifiersProvider"
"com.oracle.svm.core.code.FrameInfoQueryResult$ValueType" -> "java.lang.Enum"
"java.lang.ConditionalSpecialCasing$Entry" -> "java.lang.Object"
"jdk.internal.math.FloatingDecimal" -> "java.lang.Object"
"jdk.internal.math.FloatingDecimal$BinaryToASCIIBuffer" -> "java.lang.Object"
"jdk.internal.math.FloatingDecimal$ExceptionalBinaryToASCIIBuffer" -> "java.lang.Object"
"java.lang.StringBuffer" -> "java.lang.CharSequence"
"java.lang.StringBuffer" -> "java.lang.AbstractStringBuilder"
"jdk.internal.math.FDBigInteger" -> "java.lang.Object"
"jdk.internal.math.FloatingDecimal$1" -> "java.lang.ThreadLocal"
"java.util.Hashtable$Entry" -> "java.lang.Object"
"org.graalvm.compiler.options.OptionKey$Lazy" -> "java.lang.Object"
"java.text.BreakIterator" -> "java.lang.Object"
"sun.text.Normalizer" -> "java.lang.Object"
"com.oracle.svm.core.jdk.Util_java_text_BreakIterator" -> "java.lang.Object"
"java.util.IdentityHashMap$EntrySet" -> "java.util.AbstractSet"
"sun.text.normalizer.UCharacter" -> "java.lang.Object"
"sun.text.normalizer.Normalizer2" -> "java.lang.Object"
"sun.text.normalizer.Norm2AllModes" -> "java.lang.Object"
"sun.text.normalizer.Norm2AllModes$Normalizer2WithImpl" -> "sun.text.normalizer.Normalizer2"
"sun.text.normalizer.Norm2AllModes$DecomposeNormalizer2" -> "sun.text.normalizer.Norm2AllModes$Normalizer2WithImpl"
"java.util.Arrays$ArrayList" -> "java.util.AbstractList"
"sun.text.normalizer.Norm2AllModes$NFCSingleton" -> "java.lang.Object"
"sun.text.RuleBasedBreakIterator" -> "java.text.BreakIterator"
"org.graalvm.compiler.core.CompilationWrapper$ExceptionAction" -> "java.lang.Enum"
"org.graalvm.compiler.core.CompilationWrapper" -> "java.lang.Object"
"org.graalvm.compiler.debug.DebugOptions$PrintGraphTarget" -> "java.lang.Enum"
"org.graalvm.compiler.debug.DebugOptions" -> "java.lang.Object"
"sun.text.normalizer.Norm2AllModes$Norm2AllModesSingleton" -> "java.lang.Object"
"java.lang.System$2" -> "java.lang.Object"
"java.lang.Shutdown$Lock" -> "java.lang.Object"
"java.security.SecureClassLoader" -> "java.lang.ClassLoader"
"jdk.internal.loader.BuiltinClassLoader" -> "java.security.SecureClassLoader"
"jdk.internal.loader.ClassLoaders$AppClassLoader" -> "jdk.internal.loader.BuiltinClassLoader"
"jdk.internal.loader.ClassLoaders" -> "java.lang.Object"
"java.util.HashMap" -> "java.util.Map"
"java.util.HashMap" -> "java.util.AbstractMap"
"java.util.NavigableMap" -> "java.util.Map"
"java.util.TreeMap" -> "java.util.Map"
"java.util.TreeMap" -> "java.util.AbstractMap"
"java.util.HashMap$Node" -> "java.lang.Object"
"java.util.Queue" -> "java.util.Collection"
"java.util.Queue" -> "java.lang.Iterable"
"java.util.Deque" -> "java.util.Collection"
"java.util.Deque" -> "java.lang.Iterable"
"java.io.BufferedOutputStream" -> "java.io.FilterOutputStream"
"java.lang.Module" -> "java.lang.Object"
"java.lang.Module" -> "java.lang.reflect.AnnotatedElement"
"java.util.Vector" -> "java.util.Collection"
"java.util.Vector" -> "java.util.List"
"java.util.Vector" -> "java.lang.Iterable"
"java.util.Vector" -> "java.util.AbstractList"
"java.security.ProtectionDomain" -> "java.lang.Object"
"java.util.TreeMap$Entry" -> "java.lang.Object"
"com.oracle.svm.core.posix.PosixLogHandler" -> "java.lang.Object"
"sun.text.CompactByteArray" -> "java.lang.Object"
"java.util.TreeMap$EntrySet" -> "java.util.AbstractSet"
"sun.text.SupplementaryCharacterData" -> "java.lang.Object"
"java.util.SortedSet" -> "java.util.Collection"
"java.util.SortedSet" -> "java.util.Set"
"java.util.SortedSet" -> "java.lang.Iterable"
"java.util.NavigableSet" -> "java.util.Collection"
"java.util.NavigableSet" -> "java.util.SortedSet"
"java.util.NavigableSet" -> "java.util.Set"
"java.util.NavigableSet" -> "java.lang.Iterable"
"java.util.TreeMap$KeySet" -> "java.util.Collection"
"java.util.TreeMap$KeySet" -> "java.util.SortedSet"
"java.util.TreeMap$KeySet" -> "java.util.Set"
"java.util.TreeMap$KeySet" -> "java.lang.Iterable"
"java.util.TreeMap$KeySet" -> "java.util.AbstractSet"
"java.lang.invoke.VarHandleObjects$FieldInstanceReadOnly" -> "java.lang.invoke.VarHandle"
"java.lang.invoke.VarHandleObjects" -> "java.lang.Object"
"java.lang.invoke.VarHandleObjects$FieldInstanceReadWrite" -> "java.lang.invoke.VarHandleObjects$FieldInstanceReadOnly"
"com.oracle.svm.core.genscavenge.HeapImpl$$Lambda$fcf8f5a50191f6409012463e9e33433b950985dd" -> "java.lang.Object"
"com.oracle.svm.core.log.Log$LogOutputStream" -> "java.io.OutputStream"
"com.oracle.svm.core.WeakIdentityHashMap" -> "java.util.Map"
"com.oracle.svm.core.WeakIdentityHashMap" -> "java.util.AbstractMap"
"com.oracle.svm.core.jdk.Target_java_lang_Shutdown$$Lambda$ca699e7c6ff373afff7c07c33da5914748e8e2ba" -> "java.lang.Object"
"sun.util.locale.BaseLocale" -> "java.lang.Object"
"sun.util.locale.LocaleExtensions" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.GreyObjectsWalker" -> "java.lang.Object"
"java.lang.invoke.MethodHandleStatics" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.HeapOptions" -> "java.lang.Object"
"sun.nio.cs.StreamEncoder" -> "java.io.Writer"
"com.oracle.svm.core.posix.IgnoreSIGPIPEFeature$1" -> "java.lang.Object"
"com.oracle.svm.core.posix.IgnoreSIGPIPEFeature" -> "java.lang.Object"
"com.oracle.svm.core.SubstrateSegfaultHandlerFeature$$Lambda$67f1d5898d6e6509aae6fe829c31680ece4960bd" -> "java.lang.Object"
"com.oracle.svm.core.WeakIdentityHashMap$Entry" -> "java.lang.ref.WeakReference"
"java.lang.ref.ReferenceQueue" -> "java.lang.Object"
"com.oracle.svm.core.heap.ReferenceInternals" -> "java.lang.Object"
"java.lang.ref.Cleaner" -> "java.lang.Object"
"com.oracle.svm.core.code.CodeInfoTether" -> "java.lang.Object"
"com.oracle.svm.core.jdk.management.SubstrateRuntimeMXBean$$Lambda$506a485468c3d4c45d05534dfb6725da2413e191" -> "java.lang.Object"
"com.oracle.svm.core.jdk.management.SubstrateRuntimeMXBean" -> "java.lang.Object"
"com.oracle.svm.core.jdk.management.SubstrateRuntimeMXBean" -> "java.lang.management.RuntimeMXBean"
"sun.text.normalizer.NormalizerImpl" -> "java.lang.Object"
"sun.text.normalizer.Norm2AllModes$ComposeNormalizer2" -> "sun.text.normalizer.Norm2AllModes$Normalizer2WithImpl"
"jdk.internal.ref.CleanerFactory" -> "java.lang.Object"
"jdk.internal.ref.CleanerImpl" -> "java.lang.Object"
"com.oracle.svm.core.graal.code.CGlobalDataInfo" -> "java.lang.Object"
"java.nio.charset.CharsetDecoder" -> "java.lang.Object"
"java.nio.charset.CodingErrorAction" -> "java.lang.Object"
"java.lang.IllegalThreadStateException" -> "java.lang.IllegalArgumentException"
"com.oracle.svm.core.code.RuntimeCodeInfoAccess" -> "java.lang.Object"
"com.oracle.svm.core.code.InstalledCodeObserverSupport" -> "java.lang.Object"
"org.graalvm.util.DirectAnnotationAccess" -> "java.lang.Object"
"java.util.concurrent.ConcurrentHashMap$Node" -> "java.lang.Object"
"java.util.concurrent.ConcurrentHashMap$Traverser" -> "java.lang.Object"
"java.util.LinkedHashMap$Entry" -> "java.util.HashMap$Node"
"java.util.LinkedHashMap" -> "java.util.HashMap"
"java.util.LinkedHashMap" -> "java.util.Map"
"java.util.HashMap$TreeNode" -> "java.util.LinkedHashMap$Entry"
"com.oracle.svm.core.SubstrateSegfaultHandler" -> "java.lang.Object"
"java.nio.HeapCharBuffer" -> "java.nio.CharBuffer"
"com.oracle.svm.core.SubstrateSegfaultHandler$Options" -> "java.lang.Object"
"org.graalvm.nativeimage.ImageInfo" -> "java.lang.Object"
"com.oracle.svm.core.posix.PosixSubstrateSegfaultHandler" -> "com.oracle.svm.core.SubstrateSegfaultHandler"
"com.oracle.svm.core.code.RuntimeCodeInfoAccess$1" -> "java.lang.Object"
"com.oracle.svm.core.code.FrameInfoDecoder$HeapBasedFrameInfoQueryResultAllocator" -> "java.lang.Object"
"com.oracle.svm.core.code.FrameInfoDecoder$HeapBasedValueInfoAllocator" -> "java.lang.Object"
"org.graalvm.compiler.core.common.util.TypeConversion" -> "java.lang.Object"
"java.util.concurrent.locks.LockSupport" -> "java.lang.Object"
"java.util.RegularEnumSet$EnumSetIterator" -> "java.lang.Object"
"java.util.RegularEnumSet$EnumSetIterator" -> "java.util.Iterator"
"java.text.StringCharacterIterator" -> "java.lang.Object"
"java.util.JumboEnumSet$EnumSetIterator" -> "java.lang.Object"
"java.util.JumboEnumSet$EnumSetIterator" -> "java.util.Iterator"
"java.util.Locale$Category" -> "java.lang.Enum"
"sun.text.RuleBasedBreakIterator$SafeCharIterator" -> "java.lang.Object"
"java.util.IdentityHashMap$IdentityHashMapIterator" -> "java.lang.Object"
"java.util.IdentityHashMap$IdentityHashMapIterator" -> "java.util.Iterator"
"java.util.IdentityHashMap$EntryIterator" -> "java.util.IdentityHashMap$IdentityHashMapIterator"
"java.util.Arrays$ArrayItr" -> "java.lang.Object"
"java.util.Arrays$ArrayItr" -> "java.util.Iterator"
"java.util.IdentityHashMap$KeySet" -> "java.util.AbstractSet"
"java.util.HashMap$KeySet" -> "java.util.AbstractSet"
"java.util.HashMap$EntrySet" -> "java.util.AbstractSet"
"org.graalvm.collections.EconomicMapImpl$CollisionLink" -> "java.lang.Object"
"com.oracle.svm.core.WeakIdentityHashMap$EntrySet" -> "java.util.AbstractSet"
"java.util.regex.Matcher" -> "java.lang.Object"
"java.util.IllegalFormatException" -> "java.lang.IllegalArgumentException"
"java.util.MissingFormatArgumentException" -> "java.util.IllegalFormatException"
"org.graalvm.collections.Equivalence$3" -> "org.graalvm.collections.Equivalence"
"org.graalvm.collections.Equivalence$1" -> "org.graalvm.collections.Equivalence"
"org.graalvm.collections.EconomicMapImpl$2" -> "java.lang.Object"
"java.util.Locale$1" -> "java.lang.Object"
"java.util.NoSuchElementException" -> "java.lang.RuntimeException"
"com.oracle.svm.core.posix.thread.PosixParkEvent" -> "com.oracle.svm.core.thread.ParkEvent"
"java.util.FormatterClosedException" -> "java.lang.IllegalStateException"
"java.text.DecimalFormatSymbols" -> "java.lang.Object"
"java.util.regex.Pattern" -> "java.lang.Object"
"sun.util.locale.provider.LocaleProviderAdapter" -> "java.lang.Object"
"java.util.spi.LocaleServiceProvider" -> "java.lang.Object"
"java.text.spi.DecimalFormatSymbolsProvider" -> "java.util.spi.LocaleServiceProvider"
"java.util.Formatter$FixedString" -> "java.lang.Object"
"java.util.Formatter$FormatSpecifier" -> "java.lang.Object"
"java.lang.invoke.VarHandleInts$FieldInstanceReadOnly" -> "java.lang.invoke.VarHandle"
"java.lang.invoke.VarHandleInts" -> "java.lang.Object"
"java.lang.invoke.VarHandleInts$FieldInstanceReadWrite" -> "java.lang.invoke.VarHandleInts$FieldInstanceReadOnly"
"sun.util.locale.provider.LocaleProviderAdapter$Type" -> "java.lang.Enum"
"java.util.UnknownFormatConversionException" -> "java.util.IllegalFormatException"
"java.util.Collections$EmptyIterator" -> "java.lang.Object"
"java.util.Collections$EmptyIterator" -> "java.util.Iterator"
"com.oracle.svm.core.jdk.LocalizationSupport" -> "java.lang.Object"
"java.lang.ClassLoaderHelper" -> "java.lang.Object"
"org.graalvm.compiler.options.OptionValues$1" -> "java.util.Comparator"
"org.graalvm.compiler.options.OptionValues$1" -> "java.lang.Object"
"com.oracle.svm.core.jdk.UninterruptibleUtils$Math" -> "java.lang.Object"
"java.util.Hashtable$EntrySet" -> "java.util.AbstractSet"
"java.util.Collections$SynchronizedCollection" -> "java.lang.Object"
"java.util.Collections$SynchronizedCollection" -> "java.util.Collection"
"java.util.Collections$SynchronizedCollection" -> "java.lang.Iterable"
"java.util.Collections$SynchronizedSet" -> "java.util.Collection"
"java.util.Collections$SynchronizedSet" -> "java.util.Set"
"java.util.Collections$SynchronizedSet" -> "java.lang.Iterable"
"java.util.Collections$SynchronizedSet" -> "java.util.Collections$SynchronizedCollection"
"com.oracle.svm.core.posix.PosixNativeLibrarySupport$PosixNativeLibrary" -> "java.lang.Object"
"sun.nio.cs.UTF_8$Decoder" -> "java.nio.charset.CharsetDecoder"
"java.lang.ref.ReferenceQueue$Null" -> "java.lang.ref.ReferenceQueue"
"java.lang.invoke.VarForm" -> "java.lang.Object"
"java.util.ArrayDeque" -> "java.util.Collection"
"java.util.ArrayDeque" -> "java.lang.Iterable"
"java.util.ArrayDeque" -> "java.util.AbstractCollection"
"com.oracle.svm.jni.JNILibraryInitializer" -> "java.lang.Object"
"java.util.regex.Pattern$Node" -> "java.lang.Object"
"java.lang.ref.ReferenceQueue$Lock" -> "java.lang.Object"
"jdk.vm.ci.amd64.AMD64$1" -> "java.lang.Object"
"java.util.TreeMap$Values" -> "java.util.AbstractCollection"
"java.util.regex.Pattern$GroupHead" -> "java.util.regex.Pattern$Node"
"java.nio.BufferMismatch" -> "java.lang.Object"
"jdk.internal.util.ArraysSupport" -> "java.lang.Object"
"java.text.spi.NumberFormatProvider" -> "java.util.spi.LocaleServiceProvider"
"java.text.spi.DateFormatSymbolsProvider" -> "java.util.spi.LocaleServiceProvider"
"java.text.spi.BreakIteratorProvider" -> "java.util.spi.LocaleServiceProvider"
"sun.util.locale.provider.JRELocaleProviderAdapter" -> "sun.util.locale.provider.LocaleProviderAdapter"
"sun.util.cldr.CLDRLocaleProviderAdapter" -> "sun.util.locale.provider.JRELocaleProviderAdapter"
"java.text.spi.CollatorProvider" -> "java.util.spi.LocaleServiceProvider"
"java.util.spi.CurrencyNameProvider" -> "java.util.spi.LocaleServiceProvider"
"java.text.spi.DateFormatProvider" -> "java.util.spi.LocaleServiceProvider"
"jdk.internal.ref.PhantomCleanable" -> "java.lang.ref.PhantomReference"
"jdk.internal.ref.WeakCleanable" -> "java.lang.ref.WeakReference"
"jdk.internal.ref.SoftCleanable" -> "java.lang.ref.SoftReference"
"com.oracle.svm.core.thread.VMOperationControl$NativeVMOperationQueue" -> "com.oracle.svm.core.thread.VMOperationControl$AllocationFreeQueue"
"com.oracle.svm.core.thread.VMOperationControl$JavaVMOperationQueue" -> "com.oracle.svm.core.thread.VMOperationControl$JavaAllocationFreeQueue"
"java.io.FileDescriptor$1" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.SpaceAccounting" -> "java.lang.Object"
"java.nio.charset.CharsetEncoder" -> "java.lang.Object"
"java.util.concurrent.ConcurrentHashMap$CounterCell" -> "java.lang.Object"
"java.util.concurrent.ConcurrentHashMap$CollectionView" -> "java.lang.Object"
"java.util.concurrent.ConcurrentHashMap$CollectionView" -> "java.util.Collection"
"java.util.concurrent.ConcurrentHashMap$CollectionView" -> "java.lang.Iterable"
"sun.util.resources.LocaleData" -> "java.lang.Object"
"java.util.spi.LocaleNameProvider" -> "java.util.spi.LocaleServiceProvider"
"java.util.spi.TimeZoneNameProvider" -> "java.util.spi.LocaleServiceProvider"
"java.util.spi.CalendarDataProvider" -> "java.util.spi.LocaleServiceProvider"
"com.oracle.svm.core.genscavenge.ImageHeapWalker" -> "java.lang.Object"
"java.util.spi.CalendarNameProvider" -> "java.util.spi.LocaleServiceProvider"
"com.oracle.svm.core.genscavenge.GCImpl$$Lambda$b87a3ce08c4b5817a2e499c1a774f3781b0d5df8" -> "java.lang.Object"
"sun.text.spi.JavaTimeDateTimePatternProvider" -> "java.util.spi.LocaleServiceProvider"
"java.util.concurrent.ConcurrentHashMap$EntrySetView" -> "java.util.Collection"
"java.util.concurrent.ConcurrentHashMap$EntrySetView" -> "java.util.Set"
"java.util.concurrent.ConcurrentHashMap$EntrySetView" -> "java.lang.Iterable"
"java.util.concurrent.ConcurrentHashMap$EntrySetView" -> "java.util.concurrent.ConcurrentHashMap$CollectionView"
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$5fb0643c7f8d005f5ee17377e06d57ae38c253e5" -> "java.lang.Object"
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$c08be315aa20ccffc6d99c8ceeebd4e4a45b68c0" -> "java.lang.Object"
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$8e7767a00a53b264267399ed784ec3d5778abb7c" -> "java.lang.Object"
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$d8e5b1030aca235b87d2b1ed8c8962d163acefcd" -> "java.lang.Object"
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$3f877ad4039231f2ec3182b089dcb7a68a14124a" -> "java.lang.Object"
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$fd68bedc6e7d0a8c985d5a070f9fbf19c4cf4644" -> "java.lang.Object"
"com.oracle.svm.core.jdk.SystemPropertiesSupport$$Lambda$66b5a6e47b3f18d450f30a0d39b0618b51b50280" -> "java.lang.Object"
"sun.text.normalizer.Trie2" -> "java.lang.Object"
"sun.text.normalizer.Trie2" -> "java.lang.Iterable"
"sun.text.normalizer.Trie2_16" -> "sun.text.normalizer.Trie2"
"java.util.ListIterator" -> "java.util.Iterator"
"java.util.AbstractList$Itr" -> "java.lang.Object"
"java.util.AbstractList$Itr" -> "java.util.Iterator"
"java.util.AbstractList$ListItr" -> "java.util.AbstractList$Itr"
"java.util.AbstractList$ListItr" -> "java.util.Iterator"
"java.util.Formatter$Flags" -> "java.lang.Object"
"java.io.File$PathStatus" -> "java.lang.Enum"
"jdk.internal.misc.InnocuousThread" -> "java.lang.Thread"
"org.graalvm.nativeimage.c.function.CEntryPointLiteral" -> "java.lang.Object"
"java.util.TreeMap$PrivateEntryIterator" -> "java.lang.Object"
"java.util.TreeMap$PrivateEntryIterator" -> "java.util.Iterator"
"java.util.TreeMap$ValueIterator" -> "java.util.TreeMap$PrivateEntryIterator"
"java.util.Formatter$Conversion" -> "java.lang.Object"
"java.util.Hashtable$Enumerator" -> "java.lang.Object"
"java.util.Hashtable$Enumerator" -> "java.util.Enumeration"
"java.util.Hashtable$Enumerator" -> "java.util.Iterator"
"java.util.IdentityHashMap$EntryIterator$Entry" -> "java.lang.Object"
"java.util.HashMap$HashIterator" -> "java.lang.Object"
"java.util.HashMap$KeyIterator" -> "java.util.HashMap$HashIterator"
"java.util.HashMap$KeyIterator" -> "java.util.Iterator"
"java.util.IllegalFormatPrecisionException" -> "java.util.IllegalFormatException"
"java.util.Formatter$DateTime" -> "java.lang.Object"
"java.util.Calendar" -> "java.lang.Object"
"java.util.MissingFormatWidthException" -> "java.util.IllegalFormatException"
"com.oracle.svm.core.WeakIdentityHashMap$HashIterator" -> "java.lang.Object"
"com.oracle.svm.core.WeakIdentityHashMap$HashIterator" -> "java.util.Iterator"
"com.oracle.svm.core.WeakIdentityHashMap$EntryIterator" -> "com.oracle.svm.core.WeakIdentityHashMap$HashIterator"
"java.util.Date" -> "java.lang.Object"
"java.util.Properties$EntrySet" -> "java.lang.Object"
"java.util.Properties$EntrySet" -> "java.util.Collection"
"java.util.Properties$EntrySet" -> "java.util.Set"
"java.util.Properties$EntrySet" -> "java.lang.Iterable"
"java.util.IllegalFormatWidthException" -> "java.util.IllegalFormatException"
"java.util.ArrayList$ListItr" -> "java.util.ArrayList$Itr"
"java.util.ArrayList$ListItr" -> "java.util.Iterator"
"java.util.Collections$EmptyListIterator" -> "java.util.Collections$EmptyIterator"
"java.util.Collections$EmptyListIterator" -> "java.util.Iterator"
"java.util.HashMap$EntryIterator" -> "java.util.HashMap$HashIterator"
"java.util.HashMap$EntryIterator" -> "java.util.Iterator"
"java.math.BigDecimal" -> "java.lang.Number"
"java.util.IdentityHashMap$KeyIterator" -> "java.util.IdentityHashMap$IdentityHashMapIterator"
"java.util.IllegalFormatFlagsException" -> "java.util.IllegalFormatException"
"java.util.TreeMap$EntryIterator" -> "java.util.TreeMap$PrivateEntryIterator"
"java.math.BigInteger" -> "java.lang.Number"
"java.util.IllegalFormatCodePointException" -> "java.util.IllegalFormatException"
"java.nio.charset.CoderMalfunctionError" -> "java.lang.Error"
"java.lang.String$CaseInsensitiveComparator" -> "java.util.Comparator"
"java.lang.String$CaseInsensitiveComparator" -> "java.lang.Object"
"com.oracle.svm.core.code.FrameInfoDecoder$1" -> "java.lang.Object"
"java.lang.StringCoding$StringEncoder" -> "java.lang.Object"
"java.util.ArrayDeque$DeqIterator" -> "java.lang.Object"
"java.util.ArrayDeque$DeqIterator" -> "java.util.Iterator"
"java.util.DuplicateFormatFlagsException" -> "java.util.IllegalFormatException"
"java.util.FormatFlagsConversionMismatchException" -> "java.util.IllegalFormatException"
"jdk.vm.ci.meta.PrimitiveConstant" -> "java.lang.Object"
"jdk.vm.ci.meta.PrimitiveConstant" -> "jdk.vm.ci.meta.JavaConstant"
"java.util.UnknownFormatFlagsException" -> "java.util.IllegalFormatException"
"java.nio.charset.UnmappableCharacterException" -> "java.nio.charset.CharacterCodingException"
"com.oracle.svm.core.meta.CompressedNullConstant" -> "java.lang.Object"
"com.oracle.svm.core.meta.CompressedNullConstant" -> "jdk.vm.ci.meta.JavaConstant"
"jdk.vm.ci.meta.JavaConstant$1" -> "java.lang.Object"
"java.nio.charset.CoderResult$Cache" -> "java.lang.Object"
"java.util.TimeZone" -> "java.lang.Object"
"java.util.GregorianCalendar" -> "java.util.Calendar"
"sun.util.locale.provider.TimeZoneNameUtility" -> "java.lang.Object"
"java.util.Optional" -> "java.lang.Object"
"java.nio.charset.CoderResult$$Lambda$3f2ddd7c53fb783fc9c2e882fdd4baf791ae504f" -> "java.lang.Object"
"java.nio.charset.CoderResult$$Lambda$3f2ddd7c53fb783fc9c2e882fdd4baf791ae504f" -> "java.util.function.Function"
"jdk.vm.ci.meta.NullConstant" -> "java.lang.Object"
"jdk.vm.ci.meta.NullConstant" -> "jdk.vm.ci.meta.JavaConstant"
"java.util.concurrent.ConcurrentHashMap$TreeNode" -> "java.util.concurrent.ConcurrentHashMap$Node"
"java.util.concurrent.ConcurrentHashMap$TreeBin" -> "java.util.concurrent.ConcurrentHashMap$Node"
"java.util.IllegalFormatConversionException" -> "java.util.IllegalFormatException"
"java.util.concurrent.ConcurrentHashMap$ReservationNode" -> "java.util.concurrent.ConcurrentHashMap$Node"
"java.time.DateTimeException" -> "java.lang.RuntimeException"
"java.time.temporal.UnsupportedTemporalTypeException" -> "java.time.DateTimeException"
"java.text.DateFormatSymbols" -> "java.lang.Object"
"java.time.temporal.Temporal" -> "java.time.temporal.TemporalAccessor"
"java.time.Instant" -> "java.lang.Object"
"java.time.Instant" -> "java.time.temporal.Temporal"
"java.time.Instant" -> "java.time.temporal.TemporalAccessor"
"java.time.ZoneId" -> "java.lang.Object"
"jdk.internal.math.FormattedFloatingDecimal" -> "java.lang.Object"
"java.text.Format" -> "java.lang.Object"
"java.text.NumberFormat" -> "java.text.Format"
"java.text.DecimalFormat" -> "java.text.NumberFormat"
"java.util.Calendar$$Lambda$2bcf13c4edfd045f3213435bf07b05f29c6a7847" -> "java.lang.Object"
"java.util.Calendar$$Lambda$2bcf13c4edfd045f3213435bf07b05f29c6a7847" -> "java.util.function.Function"
"jdk.internal.math.FormattedFloatingDecimal$Form" -> "java.lang.Enum"
"java.math.MathContext" -> "java.lang.Object"
"java.util.Formatter$FormatSpecifier$BigDecimalLayout" -> "java.lang.Object"
"sun.util.locale.Extension" -> "java.lang.Object"
"sun.util.locale.LocaleUtils" -> "java.lang.Object"
"java.util.Formatter$BigDecimalLayoutForm" -> "java.lang.Enum"
"sun.security.action.GetPropertyAction" -> "java.lang.Object"
"jdk.internal.util.StaticProperty" -> "java.lang.Object"
"java.time.temporal.ChronoField" -> "java.lang.Enum"
"java.time.temporal.ChronoField" -> "java.time.temporal.TemporalField"
"sun.util.calendar.ZoneInfo" -> "java.util.TimeZone"
"com.oracle.svm.core.jdk.TimeZoneSupport" -> "java.lang.Object"
"java.math.RoundingMode" -> "java.lang.Enum"
"sun.util.calendar.ZoneInfoFile" -> "java.lang.Object"
"java.io.FilterInputStream" -> "java.io.InputStream"
"java.io.DataInputStream" -> "java.io.FilterInputStream"
"sun.util.locale.provider.LocaleResources" -> "java.lang.Object"
"java.util.ResourceBundle" -> "java.lang.Object"
"sun.util.locale.provider.LocaleResources$ResourceReference" -> "java.lang.ref.SoftReference"
"java.util.Random" -> "java.lang.Object"
"java.util.concurrent.ThreadLocalRandom" -> "java.util.Random"
"java.util.concurrent.ConcurrentHashMap$ForwardingNode" -> "java.util.concurrent.ConcurrentHashMap$Node"
"java.util.Collections$UnmodifiableCollection" -> "java.lang.Object"
"java.util.Collections$UnmodifiableCollection" -> "java.util.Collection"
"java.util.Collections$UnmodifiableCollection" -> "java.lang.Iterable"
"java.util.Collections$UnmodifiableList" -> "java.util.Collection"
"java.util.Collections$UnmodifiableList" -> "java.util.List"
"java.util.Collections$UnmodifiableList" -> "java.util.Collections$UnmodifiableCollection"
"java.util.Collections$UnmodifiableList" -> "java.lang.Iterable"
"java.util.Collections$UnmodifiableRandomAccessList" -> "java.util.Collections$UnmodifiableList"
"com.oracle.svm.core.jdk.ThreadLocalRandomAccessors" -> "com.oracle.svm.core.jdk.RandomAccessors"
"java.io.ByteArrayInputStream" -> "java.io.InputStream"
"sun.util.calendar.ZoneInfoFile$ZoneOffsetTransitionRule" -> "java.lang.Object"
"java.time.temporal.ValueRange" -> "java.lang.Object"
"java.util.regex.PatternSyntaxException" -> "java.lang.IllegalArgumentException"
"java.time.chrono.ChronoLocalDateTime" -> "java.time.temporal.Temporal"
"java.time.chrono.ChronoLocalDateTime" -> "java.time.temporal.TemporalAccessor"
"java.time.LocalDateTime" -> "java.lang.Object"
"java.time.LocalDateTime" -> "java.time.temporal.Temporal"
"java.time.LocalDateTime" -> "java.time.temporal.TemporalAccessor"
"java.time.LocalDateTime" -> "java.time.chrono.ChronoLocalDateTime"
"java.time.ZoneOffset" -> "java.time.ZoneId"
"java.time.ZoneOffset" -> "java.time.temporal.TemporalAccessor"
"java.util.regex.Pattern$Start" -> "java.util.regex.Pattern$Node"
"java.util.zip.CRC32" -> "java.lang.Object"
"java.util.zip.CRC32" -> "java.util.zip.Checksum"
"sun.util.calendar.ZoneInfoFile$Checksum" -> "java.util.zip.CRC32"
"java.util.regex.Pattern$LastNode" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$TreeInfo" -> "java.lang.Object"
"java.time.temporal.TemporalQueries" -> "java.lang.Object"
"java.util.regex.Pattern$Branch" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$SliceNode" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$Slice" -> "java.util.regex.Pattern$SliceNode"
"java.util.regex.Pattern$BnM" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$StartS" -> "java.util.regex.Pattern$Start"
"java.util.regex.Pattern$Begin" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$First" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$Loop" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$SliceS" -> "java.util.regex.Pattern$Slice"
"java.util.regex.Pattern$BnMS" -> "java.util.regex.Pattern$BnM"
"java.util.regex.Pattern$SliceIS" -> "java.util.regex.Pattern$SliceNode"
"java.util.regex.Pattern$SliceUS" -> "java.util.regex.Pattern$SliceIS"
"java.util.regex.Pattern$SliceU" -> "java.util.regex.Pattern$SliceNode"
"java.util.regex.ASCII" -> "java.lang.Object"
"java.util.regex.Pattern$SliceI" -> "java.util.regex.Pattern$SliceNode"
"java.text.Normalizer$Form" -> "java.lang.Enum"
"java.text.Normalizer" -> "java.lang.Object"
"java.util.regex.Grapheme" -> "java.lang.Object"
"java.util.regex.Pattern$BranchConn" -> "java.util.regex.Pattern$Node"
"java.util.LinkedHashSet" -> "java.util.Collection"
"java.util.LinkedHashSet" -> "java.util.HashSet"
"java.util.LinkedHashSet" -> "java.util.Set"
"java.util.LinkedHashSet" -> "java.lang.Iterable"
"sun.text.normalizer.NormalizerBase" -> "java.lang.Object"
"sun.text.normalizer.NormalizerBase$Mode" -> "java.lang.Object"
"sun.text.normalizer.NormalizerBase$1" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$2e15b21ac41110858062170f31db2d5afa0abbeb" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$2e15b21ac41110858062170f31db2d5afa0abbeb" -> "java.util.function.Consumer"
"java.util.regex.Pattern$CharProperty" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$UnixDollar" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$Dollar" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$UnixCaret" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$Caret" -> "java.util.regex.Pattern$Node"
"sun.text.normalizer.NormalizerBase$NFKDMode" -> "sun.text.normalizer.NormalizerBase$Mode"
"sun.text.normalizer.NormalizerBase$NFKCMode" -> "sun.text.normalizer.NormalizerBase$Mode"
"sun.text.normalizer.NormalizerBase$NFDMode" -> "sun.text.normalizer.NormalizerBase$Mode"
"java.util.regex.Pattern$NFCCharProperty" -> "java.util.regex.Pattern$Node"
"sun.text.normalizer.NormalizerBase$NFCMode" -> "sun.text.normalizer.NormalizerBase$Mode"
"java.util.regex.Pattern$BmpCharProperty" -> "java.util.regex.Pattern$CharProperty"
"java.util.regex.Pattern$BitClass" -> "java.util.regex.Pattern$BmpCharProperty"
"java.util.regex.Pattern$BmpCharPredicate" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$Curly" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$Ques" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$GroupTail" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$Prolog" -> "java.util.regex.Pattern$Node"
"java.time.chrono.ChronoLocalDate" -> "java.time.temporal.Temporal"
"java.time.chrono.ChronoLocalDate" -> "java.time.temporal.TemporalAccessor"
"java.time.LocalDate" -> "java.lang.Object"
"java.time.LocalDate" -> "java.time.chrono.ChronoLocalDate"
"java.time.LocalDate" -> "java.time.temporal.Temporal"
"java.time.LocalDate" -> "java.time.temporal.TemporalAccessor"
"java.time.LocalTime" -> "java.lang.Object"
"java.time.LocalTime" -> "java.time.temporal.Temporal"
"java.time.LocalTime" -> "java.time.temporal.TemporalAccessor"
"java.util.regex.Pattern$$Lambda$a1687a1b59ff293516ba1401c9d16ef63396adea" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$a1687a1b59ff293516ba1401c9d16ef63396adea" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$613c1c54bbdd637835d1ae64707d3932ce8a0d81" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$613c1c54bbdd637835d1ae64707d3932ce8a0d81" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$8d0814506e864aa815e210b8c50f1b705109ea4b" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$8d0814506e864aa815e210b8c50f1b705109ea4b" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$70a13f30a7526b751ce30ffc27f38be585b0a576" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$70a13f30a7526b751ce30ffc27f38be585b0a576" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$70a13f30a7526b751ce30ffc27f38be585b0a576" -> "java.util.regex.Pattern$BmpCharPredicate"
"java.time.temporal.TemporalQueries$5" -> "java.lang.Object"
"java.util.regex.Pattern$Behind" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$BehindS" -> "java.util.regex.Pattern$Behind"
"java.util.regex.Pattern$NotBehind" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$NotBehindS" -> "java.util.regex.Pattern$NotBehind"
"java.util.regex.Pattern$Qtype" -> "java.lang.Enum"
"java.util.regex.Pattern$End" -> "java.util.regex.Pattern$Node"
"java.util.regex.CharPredicates" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$23812c6ab57f7529f3847de2d6c13aecb354db33" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$23812c6ab57f7529f3847de2d6c13aecb354db33" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$4c4083c744ede27b4fb88b7e7214a4b35190c1fc" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$4c4083c744ede27b4fb88b7e7214a4b35190c1fc" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$f908621a8d71c975792adfb63c86ea8edc6405c9" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$f908621a8d71c975792adfb63c86ea8edc6405c9" -> "java.lang.Object"
"java.util.regex.Pattern$Pos" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$Neg" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$$Lambda$09dd24b4f2bcdb0d473ca83ae08b11d5130ff33f" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$09dd24b4f2bcdb0d473ca83ae08b11d5130ff33f" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$09dd24b4f2bcdb0d473ca83ae08b11d5130ff33f" -> "java.util.regex.Pattern$BmpCharPredicate"
"java.util.regex.Pattern$CIBackRef" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$BackRef" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$GroupCurly" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$GraphemeBound" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$Bound" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$LazyLoop" -> "java.util.regex.Pattern$Loop"
"java.util.regex.Pattern$XGrapheme" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$LineEnding" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$LastMatch" -> "java.util.regex.Pattern$Node"
"java.util.ArrayList$SubList" -> "java.util.AbstractList"
"java.util.regex.CharPredicates$$Lambda$909d378e2e4ee3b18e151ba53bb7cc41ffb9ff53" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$909d378e2e4ee3b18e151ba53bb7cc41ffb9ff53" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$d515d0234509fe665113f2f3979abe06219311fb" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$d515d0234509fe665113f2f3979abe06219311fb" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$d515d0234509fe665113f2f3979abe06219311fb" -> "java.util.regex.Pattern$BmpCharPredicate"
"java.util.regex.CharPredicates$$Lambda$6efe014475565de6ec539890044191c7c680b48d" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$6efe014475565de6ec539890044191c7c680b48d" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$6efe014475565de6ec539890044191c7c680b48d" -> "java.util.regex.Pattern$BmpCharPredicate"
"java.util.regex.Pattern$$Lambda$261439a5c01109ebf4d9cfc9695a5369bf57d2e4" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$261439a5c01109ebf4d9cfc9695a5369bf57d2e4" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$261439a5c01109ebf4d9cfc9695a5369bf57d2e4" -> "java.util.regex.Pattern$BmpCharPredicate"
"java.util.regex.Pattern$$Lambda$8837b2ee42db55242021cfb1c72cb25f772558e6" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$8837b2ee42db55242021cfb1c72cb25f772558e6" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$8837b2ee42db55242021cfb1c72cb25f772558e6" -> "java.util.regex.Pattern$BmpCharPredicate"
"java.util.regex.CharPredicates$$Lambda$115d4027896a506199f61e7782a2661a208b90fe" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$115d4027896a506199f61e7782a2661a208b90fe" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$d666c01552f3bdaf82b36f735f1e84a07c7f976d" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$d666c01552f3bdaf82b36f735f1e84a07c7f976d" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$227e80132943bded033c599dd14505b235f73e33" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$227e80132943bded033c599dd14505b235f73e33" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$227e80132943bded033c599dd14505b235f73e33" -> "java.util.regex.Pattern$BmpCharPredicate"
"java.util.regex.Pattern$$Lambda$fcc728db68219ed0f5a053ca9e782d8abb271aa5" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$fcc728db68219ed0f5a053ca9e782d8abb271aa5" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$0554c5f4dccec64c4b68e378194d712c74fd9d6d" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$0554c5f4dccec64c4b68e378194d712c74fd9d6d" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$08bce27fc19e5be46bfb67d9254b91a0158dab6b" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$08bce27fc19e5be46bfb67d9254b91a0158dab6b" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$08bce27fc19e5be46bfb67d9254b91a0158dab6b" -> "java.util.regex.Pattern$BmpCharPredicate"
"java.util.regex.CharPredicates$$Lambda$6e9b150f8847b790f27ea9e3d64e875946531ae4" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$6e9b150f8847b790f27ea9e3d64e875946531ae4" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$320d6d72ee7646be4a2123901aa5c347f37cf0cc" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$320d6d72ee7646be4a2123901aa5c347f37cf0cc" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$b434775620124fc1c754db966f5de4ab54a1e9e9" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$$Lambda$b434775620124fc1c754db966f5de4ab54a1e9e9" -> "java.lang.Object"
"java.util.regex.Pattern$$Lambda$b434775620124fc1c754db966f5de4ab54a1e9e9" -> "java.util.regex.Pattern$BmpCharPredicate"
"java.util.regex.Pattern$CharPropertyGreedy" -> "java.util.regex.Pattern$Node"
"java.util.regex.Pattern$BmpCharPropertyGreedy" -> "java.util.regex.Pattern$CharPropertyGreedy"
"java.lang.CharacterName" -> "java.lang.Object"
"java.lang.Character$Subset" -> "java.lang.Object"
"java.lang.Character$UnicodeBlock" -> "java.lang.Character$Subset"
"java.lang.Character$UnicodeScript" -> "java.lang.Enum"
"java.util.regex.CharPredicates$$Lambda$2f51f87c0d9602375ccb78b686b7c02fbc633197" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$2f51f87c0d9602375ccb78b686b7c02fbc633197" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$eb7eb9891345332a2ef87b6ec167a640c1a9217b" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$eb7eb9891345332a2ef87b6ec167a640c1a9217b" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$b0c42948e76b539c5d913baa741f8720afbb3a72" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$b0c42948e76b539c5d913baa741f8720afbb3a72" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$2ae4c0ddcb18b798b859dd7232f689d876a7e195" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$2ae4c0ddcb18b798b859dd7232f689d876a7e195" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$bd00072b654514651ccec1d03f327ba86e1a6e38" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$bd00072b654514651ccec1d03f327ba86e1a6e38" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$bdde6d6f37d4a47d22cdde986877da29fb8ca267" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$bdde6d6f37d4a47d22cdde986877da29fb8ca267" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$11617287a3ed7541978f5271113e9acb61ae0eae" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$11617287a3ed7541978f5271113e9acb61ae0eae" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$5ab54ca5b91033609c67a3c80c53f048d21e850f" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$5ab54ca5b91033609c67a3c80c53f048d21e850f" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$c5eaf284c9aa4e732ebff669af779151aa1f809c" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$c5eaf284c9aa4e732ebff669af779151aa1f809c" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$cf065931ac8c1c885c4cc728f3a7beac2f78a0cc" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$cf065931ac8c1c885c4cc728f3a7beac2f78a0cc" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$293675e10ae937845d642c6a4f6db46b57539892" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$293675e10ae937845d642c6a4f6db46b57539892" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$2cab1e83577c1b618a3ce333ff396871f46ea247" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$2cab1e83577c1b618a3ce333ff396871f46ea247" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$1d945d8948f7fcdaa41e15c7841ad4808454ae19" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$1d945d8948f7fcdaa41e15c7841ad4808454ae19" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$92bb1687f01b5997d4016c728e0c18293061d2ab" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$92bb1687f01b5997d4016c728e0c18293061d2ab" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$9fc4f9ef4ab402779e45b72421d8156e4848de73" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$9fc4f9ef4ab402779e45b72421d8156e4848de73" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$576e0a2387834b445fa340c33386693fac78be73" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$576e0a2387834b445fa340c33386693fac78be73" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$33d4473ac93222e9835700aaa789e45fbdfe9955" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$33d4473ac93222e9835700aaa789e45fbdfe9955" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$05031e7c56ab36ca09e1d375ecbcea35b93a2141" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$05031e7c56ab36ca09e1d375ecbcea35b93a2141" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$8f48748ded4fa9a54d6dc725c4eca73a0daf787e" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$8f48748ded4fa9a54d6dc725c4eca73a0daf787e" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$c234f99ea66240bf98bd077411ad239bc50ed730" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$c234f99ea66240bf98bd077411ad239bc50ed730" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$f32676ecbffa3db4c5310f2f87b68c79ce265117" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$f32676ecbffa3db4c5310f2f87b68c79ce265117" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$3b6cdc2d31aa8368493f1f8bc8cc880d46ea5ccc" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$3b6cdc2d31aa8368493f1f8bc8cc880d46ea5ccc" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$08b28248fb1726b39e2b3dbd4108cc3edc60ffc1" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$08b28248fb1726b39e2b3dbd4108cc3edc60ffc1" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$7ef6464195054d67bad8980ea6fbe01f8e809ecf" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$7ef6464195054d67bad8980ea6fbe01f8e809ecf" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$2cab1e83577c1b618a3ce333ff396871f46ea247_1" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$2cab1e83577c1b618a3ce333ff396871f46ea247_1" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$8fc55179403d82155c710f900252f792dbd9546b" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$8fc55179403d82155c710f900252f792dbd9546b" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$115d4027896a506199f61e7782a2661a208b90fe_1" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$115d4027896a506199f61e7782a2661a208b90fe_1" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$293675e10ae937845d642c6a4f6db46b57539892_1" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$293675e10ae937845d642c6a4f6db46b57539892_1" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$92bb1687f01b5997d4016c728e0c18293061d2ab_1" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$92bb1687f01b5997d4016c728e0c18293061d2ab_1" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$320d6d72ee7646be4a2123901aa5c347f37cf0cc_1" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$320d6d72ee7646be4a2123901aa5c347f37cf0cc_1" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$bdde6d6f37d4a47d22cdde986877da29fb8ca267_1" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$bdde6d6f37d4a47d22cdde986877da29fb8ca267_1" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$bd00072b654514651ccec1d03f327ba86e1a6e38_1" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$bd00072b654514651ccec1d03f327ba86e1a6e38_1" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$d42578d6d2604eb63aa97f938fac2288798e2f76" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$d42578d6d2604eb63aa97f938fac2288798e2f76" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$d42578d6d2604eb63aa97f938fac2288798e2f76" -> "java.util.regex.Pattern$BmpCharPredicate"
"java.util.regex.CharPredicates$$Lambda$aca12497b7ef4401ebefda021d8a5c509376570e" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$aca12497b7ef4401ebefda021d8a5c509376570e" -> "java.lang.Object"
"java.util.regex.CharPredicates$$Lambda$aca12497b7ef4401ebefda021d8a5c509376570e" -> "java.util.regex.Pattern$BmpCharPredicate"
"java.util.regex.CharPredicates$$Lambda$588c27561978e0728479bff9d502f76b7d0a2cfb" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.CharPredicates$$Lambda$588c27561978e0728479bff9d502f76b7d0a2cfb" -> "java.lang.Object"
"java.lang.reflect.ReflectAccess" -> "java.lang.Object"
"java.util.regex.Pattern$1" -> "java.util.regex.Pattern$Node"
"java.io.ExpiringCache" -> "java.lang.Object"
"jdk.internal.ref.CleanerImpl$PhantomCleanableRef" -> "jdk.internal.ref.PhantomCleanable"
"jdk.internal.ref.CleanerImpl$WeakCleanableRef" -> "jdk.internal.ref.WeakCleanable"
"jdk.internal.ref.CleanerImpl$SoftCleanableRef" -> "jdk.internal.ref.SoftCleanable"
"com.oracle.svm.core.c.CGlobalDataNonConstantRegistry" -> "java.lang.Object"
"java.lang.ref.FinalReference" -> "java.lang.ref.Reference"
"sun.nio.cs.UTF_8$Encoder" -> "java.nio.charset.CharsetEncoder"
"sun.nio.cs.Surrogate$Parser" -> "java.lang.Object"
"sun.nio.cs.Surrogate" -> "java.lang.Object"
"java.util.SimpleTimeZone" -> "java.util.TimeZone"
"sun.util.locale.provider.JRELocaleProviderAdapter$$Lambda$124fa7ad5601f4b988da4e3d6de5454928fdd9c4" -> "java.lang.Object"
"java.security.AccessController" -> "java.lang.Object"
"com.oracle.svm.core.jdk.AccessControllerUtil" -> "java.lang.Object"
"sun.util.locale.provider.NumberFormatProviderImpl" -> "java.text.spi.NumberFormatProvider"
"com.oracle.svm.core.genscavenge.GCImpl$$Lambda$cc1fd8147a4c339217528732ebf5aa811b7bd0b6" -> "java.lang.Object"
"sun.util.locale.provider.JRELocaleProviderAdapter$$Lambda$1a2b5ad43006c2e215258d09947d25c7d041d460" -> "java.lang.Object"
"sun.util.cldr.CLDRBaseLocaleDataMetaInfo" -> "java.lang.Object"
"sun.util.cldr.CLDRBaseLocaleDataMetaInfo" -> "sun.util.locale.provider.LocaleDataMetaInfo"
"sun.util.locale.provider.JRELocaleProviderAdapter$$Lambda$2c9b11ef161d5964a0ecbe1089b569b2e0ce9ca5" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.ReferenceObjectProcessing" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.GCImpl$CollectionInProgressError" -> "java.lang.Error"
"com.oracle.svm.core.thread.Safepoint$Options" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.ThreadLocalMTWalker" -> "java.lang.Object"
"com.oracle.svm.core.threadlocal.VMThreadLocalMTSupport" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.MemoryWalkerAccessBase" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.ReadOnlyPrimitiveMemoryWalkerAccess" -> "com.oracle.svm.core.genscavenge.MemoryWalkerAccessBase"
"com.oracle.svm.core.genscavenge.ReadOnlyReferenceMemoryWalkerAccess" -> "com.oracle.svm.core.genscavenge.MemoryWalkerAccessBase"
"com.oracle.svm.core.genscavenge.ReadOnlyRelocatableMemoryWalkerAccess" -> "com.oracle.svm.core.genscavenge.MemoryWalkerAccessBase"
"com.oracle.svm.core.genscavenge.WritablePrimitiveMemoryWalkerAccess" -> "com.oracle.svm.core.genscavenge.MemoryWalkerAccessBase"
"com.oracle.svm.core.genscavenge.WritableReferenceMemoryWalkerAccess" -> "com.oracle.svm.core.genscavenge.MemoryWalkerAccessBase"
"com.oracle.svm.core.genscavenge.WritableHugeMemoryWalkerAccess" -> "com.oracle.svm.core.genscavenge.MemoryWalkerAccessBase"
"com.oracle.svm.core.genscavenge.ReadOnlyHugeMemoryWalkerAccess" -> "com.oracle.svm.core.genscavenge.MemoryWalkerAccessBase"
"com.oracle.svm.core.heap.InstanceReferenceMapDecoder" -> "java.lang.Object"
"com.oracle.svm.core.util.TypedMemoryReader" -> "java.lang.Object"
"com.oracle.svm.core.heap.CodeReferenceMapDecoder" -> "java.lang.Object"
"java.util.regex.Pattern$CharPredicate$$Lambda$0755d277453d9407d07cc3efeb1b54ff16e87ae7" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$CharPredicate$$Lambda$0755d277453d9407d07cc3efeb1b54ff16e87ae7" -> "java.lang.Object"
"sun.util.calendar.CalendarDate" -> "java.lang.Object"
"sun.util.calendar.BaseCalendar$Date" -> "sun.util.calendar.CalendarDate"
"java.util.regex.Pattern$CharPredicate$$Lambda$3525e8329aefb03382d5561646daede4507c539b" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$CharPredicate$$Lambda$3525e8329aefb03382d5561646daede4507c539b" -> "java.lang.Object"
"java.util.regex.Pattern$CharPredicate$$Lambda$6b21b04d62fd39c0fa8d74e8ac1e90b0f5e17f87" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$CharPredicate$$Lambda$6b21b04d62fd39c0fa8d74e8ac1e90b0f5e17f87" -> "java.lang.Object"
"sun.util.calendar.CalendarSystem" -> "java.lang.Object"
"sun.util.calendar.AbstractCalendar" -> "sun.util.calendar.CalendarSystem"
"sun.util.calendar.BaseCalendar" -> "sun.util.calendar.AbstractCalendar"
"java.util.concurrent.ConcurrentHashMap$BaseIterator" -> "java.util.concurrent.ConcurrentHashMap$Traverser"
"java.util.concurrent.ConcurrentHashMap$EntryIterator" -> "java.util.concurrent.ConcurrentHashMap$BaseIterator"
"java.util.concurrent.ConcurrentHashMap$EntryIterator" -> "java.util.Iterator"
"java.util.ArrayList$SubList$1" -> "java.lang.Object"
"java.util.ArrayList$SubList$1" -> "java.util.Iterator"
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$7cc5d00d773045569d89d232810bc2664b684401" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$7cc5d00d773045569d89d232810bc2664b684401" -> "java.lang.Object"
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$7cc5d00d773045569d89d232810bc2664b684401" -> "java.util.regex.Pattern$BmpCharPredicate"
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$395f6aa2d06dcff7971b978bbe33fa0b5cb76f7b" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$395f6aa2d06dcff7971b978bbe33fa0b5cb76f7b" -> "java.lang.Object"
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$395f6aa2d06dcff7971b978bbe33fa0b5cb76f7b" -> "java.util.regex.Pattern$BmpCharPredicate"
"sun.util.calendar.Gregorian" -> "sun.util.calendar.BaseCalendar"
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$3c9c41b9741b688521061c74526d10a611b7cc47" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$3c9c41b9741b688521061c74526d10a611b7cc47" -> "java.lang.Object"
"sun.util.calendar.Gregorian$Date" -> "sun.util.calendar.BaseCalendar$Date"
"java.util.Collections$UnmodifiableList$1" -> "java.lang.Object"
"java.util.Collections$UnmodifiableList$1" -> "java.util.Iterator"
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$4ed567be4b1898b428b8904d853443f4fa688db0" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$BmpCharPredicate$$Lambda$4ed567be4b1898b428b8904d853443f4fa688db0" -> "java.lang.Object"
"java.time.Instant$1" -> "java.lang.Object"
"java.util.Collections$UnmodifiableCollection$1" -> "java.lang.Object"
"java.util.Collections$UnmodifiableCollection$1" -> "java.util.Iterator"
"sun.util.calendar.Era" -> "java.lang.Object"
"java.math.MutableBigInteger" -> "java.lang.Object"
"java.time.chrono.AbstractChronology" -> "java.time.chrono.Chronology"
"java.time.chrono.AbstractChronology" -> "java.lang.Object"
"java.time.chrono.IsoChronology" -> "java.time.chrono.AbstractChronology"
"sun.util.calendar.JulianCalendar" -> "sun.util.calendar.BaseCalendar"
"sun.util.calendar.JulianCalendar$Date" -> "sun.util.calendar.BaseCalendar$Date"
"java.time.LocalTime$1" -> "java.lang.Object"
"sun.util.calendar.CalendarUtils" -> "java.lang.Object"
"sun.util.locale.provider.CalendarDataUtility" -> "java.lang.Object"
"sun.util.locale.provider.LocaleServiceProviderPool" -> "java.lang.Object"
"java.util.concurrent.Helpers" -> "java.lang.Object"
"sun.util.locale.provider.CalendarDataUtility$CalendarWeekParameterGetter" -> "java.lang.Object"
"java.util.concurrent.ConcurrentHashMap$TableStack" -> "java.lang.Object"
"jdk.internal.math.FormattedFloatingDecimal$2" -> "java.lang.Object"
"sun.nio.cs.ISO_8859_1$Encoder" -> "java.nio.charset.CharsetEncoder"
"java.util.Locale$Builder" -> "java.lang.Object"
"sun.util.locale.LocaleSyntaxException" -> "java.lang.Exception"
"java.math.BigDecimal$StringBuilderHelper" -> "java.lang.Object"
"java.text.DigitList" -> "java.lang.Object"
"java.text.FieldPosition" -> "java.lang.Object"
"java.text.DecimalFormat$FastPathData" -> "java.lang.Object"
"java.time.ZoneRegion" -> "java.time.ZoneId"
"jdk.internal.math.FormattedFloatingDecimal$1" -> "java.lang.ThreadLocal"
"java.time.LocalDate$1" -> "java.lang.Object"
"java.util.regex.IntHashSet" -> "java.lang.Object"
"com.oracle.svm.core.jdk.Util_sun_util_calendar_CalendarSystem" -> "java.lang.Object"
"java.time.format.DateTimeFormatter" -> "java.lang.Object"
"java.lang.InterruptedException" -> "java.lang.Exception"
"java.time.DayOfWeek" -> "java.lang.Enum"
"java.time.DayOfWeek" -> "java.time.temporal.TemporalAccessor"
"java.time.Month" -> "java.lang.Enum"
"java.time.Month" -> "java.time.temporal.TemporalAccessor"
"java.util.concurrent.TimeUnit" -> "java.lang.Enum"
"sun.util.locale.provider.DateFormatSymbolsProviderImpl" -> "java.text.spi.DateFormatSymbolsProvider"
"jdk.vm.ci.meta.PrimitiveConstant$1" -> "java.lang.Object"
"java.math.BigDecimal$1" -> "java.lang.ThreadLocal"
"java.util.Collections$EmptySet" -> "java.util.AbstractSet"
"java.time.temporal.ChronoUnit" -> "java.time.temporal.TemporalUnit"
"java.time.temporal.ChronoUnit" -> "java.lang.Enum"
"sun.text.normalizer.NormalizerBase$NFD32ModeImpl" -> "java.lang.Object"
"java.io.ExpiringCache$Entry" -> "java.lang.Object"
"java.io.EOFException" -> "java.io.IOException"
"com.oracle.svm.core.jdk.UserDirAccessors" -> "java.lang.Object"
"java.time.temporal.TemporalQueries$3" -> "java.lang.Object"
"java.time.temporal.TemporalQueries$4" -> "java.lang.Object"
"java.time.temporal.TemporalQueries$1" -> "java.lang.Object"
"java.time.temporal.TemporalQueries$6" -> "java.lang.Object"
"java.time.temporal.TemporalQueries$2" -> "java.lang.Object"
"java.time.temporal.TemporalQueries$7" -> "java.lang.Object"
"jdk.internal.util.Preconditions" -> "java.lang.Object"
"java.util.ImmutableCollections$AbstractImmutableCollection" -> "java.util.AbstractCollection"
"java.util.ImmutableCollections" -> "java.lang.Object"
"java.util.ImmutableCollections$AbstractImmutableList" -> "java.util.Collection"
"java.util.ImmutableCollections$AbstractImmutableList" -> "java.util.List"
"java.util.ImmutableCollections$AbstractImmutableList" -> "java.lang.Iterable"
"java.util.ImmutableCollections$AbstractImmutableList" -> "java.util.ImmutableCollections$AbstractImmutableCollection"
"java.util.ImmutableCollections$ListN" -> "java.util.ImmutableCollections$AbstractImmutableList"
"java.util.ImmutableCollections$List12" -> "java.util.ImmutableCollections$AbstractImmutableList"
"org.graalvm.nativeimage.Platform$WINDOWS" -> "org.graalvm.nativeimage.Platform"
"com.oracle.svm.core.hub.AnnotationsEncoding" -> "java.lang.Object"
"sun.text.normalizer.NormalizerBase$NFKC32ModeImpl" -> "java.lang.Object"
"java.util.zip.InflaterInputStream" -> "java.io.FilterInputStream"
"java.lang.CharacterName$1" -> "java.lang.Object"
"sun.text.normalizer.NormalizerBase$NFKD32ModeImpl" -> "java.lang.Object"
"java.util.regex.Pattern$CharPredicate$$Lambda$1394a2da0b47528e5131bed29f7603328c3f5c4f" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$CharPredicate$$Lambda$1394a2da0b47528e5131bed29f7603328c3f5c4f" -> "java.lang.Object"
"sun.util.locale.provider.TimeZoneNameUtility$TimeZoneNameGetter" -> "java.lang.Object"
"sun.text.normalizer.NormalizerBase$ModeImpl" -> "java.lang.Object"
"sun.text.normalizer.FilteredNormalizer2" -> "sun.text.normalizer.Normalizer2"
"sun.text.normalizer.NormalizerBase$NFKCModeImpl" -> "java.lang.Object"
"sun.text.normalizer.NormalizerBase$NFKDModeImpl" -> "java.lang.Object"
"sun.util.locale.provider.DecimalFormatSymbolsProviderImpl" -> "java.text.spi.DecimalFormatSymbolsProvider"
"sun.text.normalizer.NormalizerBase$NFDModeImpl" -> "java.lang.Object"
"sun.text.normalizer.NormalizerBase$NFC32ModeImpl" -> "java.lang.Object"
"sun.text.normalizer.NormalizerBase$NFCModeImpl" -> "java.lang.Object"
"jdk.vm.ci.services.Services" -> "java.lang.Object"
"java.util.regex.Pattern$BitClass$$Lambda$7b3866043ac969412952eb8c551d8f6baa47a850" -> "java.util.regex.Pattern$CharPredicate"
"java.util.regex.Pattern$BitClass$$Lambda$7b3866043ac969412952eb8c551d8f6baa47a850" -> "java.lang.Object"
"java.util.regex.Pattern$BitClass$$Lambda$7b3866043ac969412952eb8c551d8f6baa47a850" -> "java.util.regex.Pattern$BmpCharPredicate"
"sun.util.cldr.CLDRBaseLocaleDataMetaInfo$TZCanonicalIDMapHolder" -> "java.lang.Object"
"java.util.Currency" -> "java.lang.Object"
"sun.text.normalizer.NormalizerImpl$ReorderingBuffer" -> "java.lang.Object"
"sun.text.normalizer.UTF16" -> "java.lang.Object"
"sun.text.normalizer.NormalizerImpl$UTF16Plus" -> "java.lang.Object"
"java.util.Currency$OtherCurrencyEntry" -> "java.lang.Object"
"java.util.Currency$SpecialCaseEntry" -> "java.lang.Object"
"sun.text.normalizer.NormalizerImpl$Hangul" -> "java.lang.Object"
"java.util.regex.Pattern$2" -> "java.lang.Object"
"com.oracle.svm.graal.isolated.IsolateAwareObjectConstantEquality" -> "java.lang.Object"
"sun.text.normalizer.UnicodeSet" -> "java.lang.Object"
"com.oracle.svm.core.genscavenge.CollectionPolicy$BySpaceAndTime" -> "com.oracle.svm.core.genscavenge.CollectionPolicy"
"java.time.format.DateTimeFormatterBuilder" -> "java.lang.Object"
"java.time.format.DateTimeFormatterBuilder$CompositePrinterParser" -> "java.lang.Object"
"jdk.internal.loader.ClassLoaders$PlatformClassLoader" -> "jdk.internal.loader.BuiltinClassLoader"
"java.lang.Thread$State" -> "java.lang.Enum"
"sun.util.resources.cldr.provider.CLDRLocaleDataMetaInfo" -> "java.lang.Object"
"sun.util.resources.cldr.provider.CLDRLocaleDataMetaInfo" -> "sun.util.locale.provider.LocaleDataMetaInfo"
"org.graalvm.nativeimage.Platform$IOS" -> "org.graalvm.nativeimage.Platform$DARWIN"
"org.graalvm.nativeimage.Platform$IOS" -> "org.graalvm.nativeimage.Platform"
"sun.text.normalizer.UnicodeSet$SpanCondition" -> "java.lang.Enum"
"java.util.LinkedHashMap$LinkedEntrySet" -> "java.util.AbstractSet"
"java.util.ImmutableCollections$ListItr" -> "java.lang.Object"
"java.util.ImmutableCollections$ListItr" -> "java.util.Iterator"
"java.util.LinkedHashMap$LinkedKeySet" -> "java.util.AbstractSet"
"sun.text.normalizer.UnicodeSetStringSpan" -> "java.lang.Object"
"sun.util.locale.InternalLocaleBuilder" -> "java.lang.Object"
"sun.util.locale.UnicodeLocaleExtension" -> "sun.util.locale.Extension"
"java.util.IllformedLocaleException" -> "java.lang.RuntimeException"
"sun.nio.cs.ISO_8859_1$Decoder" -> "java.nio.charset.CharsetDecoder"
"com.oracle.svm.core.jdk.Resources" -> "java.lang.Object"
"com.oracle.svm.core.jdk.Resources$ResourcesSupport" -> "java.lang.Object"
"sun.util.locale.StringTokenIterator" -> "java.lang.Object"
"com.oracle.svm.graal.isolated.IsolatedObjectConstant" -> "com.oracle.svm.core.meta.SubstrateObjectConstant"
"java.util.Locale$LocaleKey" -> "java.lang.Object"
"java.time.Month$1" -> "java.lang.Object"
"java.time.format.DateTimePrintContext" -> "java.lang.Object"
"com.oracle.svm.graal.isolated.IsolatedCompileContext" -> "java.lang.Object"
"com.oracle.svm.graal.isolated.ImageHeapObjects" -> "java.lang.Object"
"java.nio.charset.CoderResult$$Lambda$6eec77ec4c9a6c730a7a3ea4bf49b2a3a58c9076" -> "java.lang.Object"
"java.nio.charset.CoderResult$$Lambda$6eec77ec4c9a6c730a7a3ea4bf49b2a3a58c9076" -> "java.util.function.Function"
"java.util.SimpleTimeZone$Cache" -> "java.lang.Object"
"java.util.concurrent.ConcurrentHashMap$MapEntry" -> "java.lang.Object"
"sun.util.resources.LocaleData$1" -> "java.lang.Object"
"java.util.zip.DataFormatException" -> "java.lang.Exception"
"java.util.zip.ZipException" -> "java.io.IOException"
"com.oracle.svm.graal.isolated.IsolatedCompileClient" -> "java.lang.Object"
"sun.util.locale.LocaleObjectCache" -> "java.lang.Object"
"java.util.Locale$Cache" -> "sun.util.locale.LocaleObjectCache"
"sun.util.locale.LocaleObjectCache$CacheEntry" -> "java.lang.ref.SoftReference"
"com.oracle.svm.core.genscavenge.CollectionPolicy$Options" -> "java.lang.Object"
"java.io.ExpiringCache$1" -> "java.util.LinkedHashMap"
"java.util.TreeSet" -> "java.util.Collection"
"java.util.TreeSet" -> "java.util.SortedSet"
"java.util.TreeSet" -> "java.util.Set"
"java.util.TreeSet" -> "java.lang.Iterable"
"java.util.TreeSet" -> "java.util.AbstractSet"
"sun.text.normalizer.BMPSet" -> "java.lang.Object"
"com.oracle.svm.core.hub.InteriorObjRefWalker" -> "java.lang.Object"
"com.oracle.svm.core.jdk.LambdaFormHiddenMethod$$ProxyImpl" -> "java.lang.reflect.Proxy"
"com.oracle.svm.core.jdk.InternalVMMethod$$ProxyImpl" -> "java.lang.reflect.Proxy"
"sun.util.locale.provider.CurrencyNameProviderImpl" -> "java.util.spi.CurrencyNameProvider"
"sun.util.locale.provider.CollatorProviderImpl" -> "java.text.spi.CollatorProvider"
"sun.util.locale.provider.BreakIteratorProviderImpl" -> "java.text.spi.BreakIteratorProvider"
"sun.util.locale.provider.DateFormatProviderImpl" -> "java.text.spi.DateFormatProvider"
"sun.util.locale.provider.LocaleNameProviderImpl" -> "java.util.spi.LocaleNameProvider"
"sun.util.locale.provider.CalendarNameProviderImpl" -> "java.util.spi.CalendarNameProvider"
"sun.util.locale.provider.TimeZoneNameProviderImpl" -> "java.util.spi.TimeZoneNameProvider"
"sun.util.cldr.CLDRCalendarNameProviderImpl" -> "sun.util.locale.provider.CalendarNameProviderImpl"
"sun.util.cldr.CLDRTimeZoneNameProviderImpl" -> "sun.util.locale.provider.TimeZoneNameProviderImpl"
"sun.util.locale.provider.JavaTimeDateTimePatternImpl" -> "sun.text.spi.JavaTimeDateTimePatternProvider"
"sun.util.locale.provider.CalendarDataProviderImpl" -> "java.util.spi.CalendarDataProvider"
"sun.util.cldr.CLDRCalendarDataProviderImpl" -> "sun.util.locale.provider.CalendarDataProviderImpl"
"java.util.Collections$UnmodifiableMap" -> "java.lang.Object"
"java.util.Collections$UnmodifiableMap" -> "java.util.Map"
"java.util.Collections$UnmodifiableSet" -> "java.util.Collection"
"java.util.Collections$UnmodifiableSet" -> "java.util.Collections$UnmodifiableCollection"
"java.util.Collections$UnmodifiableSet" -> "java.util.Set"
"java.util.Collections$UnmodifiableSet" -> "java.lang.Iterable"
"java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet" -> "java.util.Collections$UnmodifiableSet"
"java.util.LinkedHashMap$LinkedHashIterator" -> "java.lang.Object"
"java.util.LinkedHashMap$LinkedEntryIterator" -> "java.util.LinkedHashMap$LinkedHashIterator"
"java.util.LinkedHashMap$LinkedEntryIterator" -> "java.util.Iterator"
"java.util.LinkedHashMap$LinkedKeyIterator" -> "java.util.LinkedHashMap$LinkedHashIterator"
"java.util.LinkedHashMap$LinkedKeyIterator" -> "java.util.Iterator"
"java.util.zip.ZipUtils" -> "java.lang.Object"
"java.util.zip.Inflater$InflaterZStreamRef" -> "java.lang.Object"
"sun.util.resources.Bundles" -> "java.lang.Object"
"sun.util.resources.LocaleData$LocaleDataStrategy" -> "java.lang.Object"
"java.time.chrono.ChronoZonedDateTime" -> "java.time.temporal.Temporal"
"java.time.chrono.ChronoZonedDateTime" -> "java.time.temporal.TemporalAccessor"
"sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar" -> "java.lang.Object"
"java.time.format.DateTimePrintContext$1" -> "java.lang.Object"
"java.time.format.DateTimePrintContext$1" -> "java.time.temporal.TemporalAccessor"
"java.util.zip.Inflater$InflaterZStreamRef$FinalizableZStreamRef" -> "java.util.zip.Inflater$InflaterZStreamRef"
"sun.util.locale.BaseLocale$Key" -> "java.lang.Object"
"sun.util.locale.BaseLocale$Cache" -> "sun.util.locale.LocaleObjectCache"
"sun.util.locale.LanguageTag" -> "java.lang.Object"
"sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString" -> "java.lang.Object"
"java.time.ZonedDateTime" -> "java.lang.Object"
"java.time.ZonedDateTime" -> "java.time.temporal.Temporal"
"java.time.ZonedDateTime" -> "java.time.chrono.ChronoZonedDateTime"
"java.time.ZonedDateTime" -> "java.time.temporal.TemporalAccessor"
"java.util.Currency$CurrencyNameGetter" -> "java.lang.Object"
"sun.util.resources.OpenListResourceBundle" -> "java.util.ResourceBundle"
"sun.util.resources.TimeZoneNamesBundle" -> "sun.util.resources.OpenListResourceBundle"
"java.util.AbstractSequentialList" -> "java.util.AbstractList"
"java.util.LinkedList" -> "java.util.Collection"
"java.util.LinkedList" -> "java.util.List"
"java.util.LinkedList" -> "java.util.AbstractSequentialList"
"java.util.LinkedList" -> "java.lang.Iterable"
"java.util.LinkedList$Node" -> "java.lang.Object"
"java.util.Collections$EmptyMap" -> "java.util.AbstractMap"
"sun.util.locale.provider.JRELocaleProviderAdapter$$Lambda$e93e2fd0d965318a654c5466309de857d3bd07ee" -> "java.lang.Object"
"sun.util.cldr.CLDRLocaleProviderAdapter$$Lambda$61d0b69a5d173d21af283b2cedeaaef0a65bdf9c" -> "java.lang.Object"
"java.util.Collections$SingletonMap" -> "java.util.AbstractMap"
"com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor$NoopCounters" -> "java.lang.Object"
"sun.text.normalizer.OutputInt" -> "java.lang.Object"
"sun.text.normalizer.Utility" -> "java.lang.Object"
"sun.util.calendar.ImmutableGregorianDate" -> "sun.util.calendar.BaseCalendar$Date"
"java.time.format.DateTimeFormatterBuilder$SettingsParser" -> "java.lang.Enum"
"java.time.format.DateTimeFormatterBuilder$InstantPrinterParser" -> "java.lang.Object"
"sun.util.locale.provider.LocaleResources$$Lambda$526b83ffdb2860039841c0e237d094228fbb42fa" -> "java.lang.Object"
"sun.util.locale.provider.LocaleResources$$Lambda$526b83ffdb2860039841c0e237d094228fbb42fa" -> "java.util.function.Predicate"
"sun.util.locale.provider.LocaleResources$$Lambda$5d8c9734068bf987e3508c754130d36c972a034a" -> "java.lang.Object"
"sun.util.locale.provider.LocaleResources$$Lambda$5d8c9734068bf987e3508c754130d36c972a034a" -> "java.util.function.Consumer"
"java.util.ImmutableCollections$AbstractImmutableSet" -> "java.util.Collection"
"java.util.ImmutableCollections$AbstractImmutableSet" -> "java.util.Set"
"java.util.ImmutableCollections$AbstractImmutableSet" -> "java.lang.Iterable"
"java.util.ImmutableCollections$AbstractImmutableSet" -> "java.util.ImmutableCollections$AbstractImmutableCollection"
"java.util.ImmutableCollections$SetN" -> "java.util.ImmutableCollections$AbstractImmutableSet"
"java.util.ImmutableCollections$Set12" -> "java.util.ImmutableCollections$AbstractImmutableSet"
"java.util.stream.StreamSupport" -> "java.lang.Object"
"java.util.HashMap$HashMapSpliterator" -> "java.lang.Object"
"java.util.HashMap$KeySpliterator" -> "java.util.Spliterator"
"java.util.HashMap$KeySpliterator" -> "java.util.HashMap$HashMapSpliterator"
"java.util.stream.PipelineHelper" -> "java.lang.Object"
"java.util.stream.AbstractPipeline" -> "java.util.stream.PipelineHelper"
"java.util.stream.ReferencePipeline" -> "java.util.stream.AbstractPipeline"
"java.util.stream.ReferencePipeline" -> "java.util.stream.Stream"
"java.util.stream.ReferencePipeline$Head" -> "java.util.stream.ReferencePipeline"
"java.util.stream.StreamOpFlag" -> "java.lang.Enum"
"sun.util.cldr.CLDRTimeZoneNameProviderImpl$AVAILABLE_IDS" -> "java.lang.Object"
"java.util.ResourceBundle$Control" -> "java.lang.Object"
"java.text.MessageFormat" -> "java.text.Format"
"sun.util.locale.ParseStatus" -> "java.lang.Object"
"java.util.ResourceBundle$SingleFormatControl" -> "java.util.ResourceBundle$Control"
"java.util.ResourceBundle$NoFallbackControl" -> "java.util.ResourceBundle$SingleFormatControl"
"sun.util.resources.ParallelListResourceBundle" -> "java.util.ResourceBundle"
"sun.util.resources.LocaleData$2" -> "java.lang.Object"
"java.util.AbstractMap$SimpleImmutableEntry" -> "java.lang.Object"
"java.util.TreeMap$NavigableSubMap" -> "java.util.Map"
"java.util.TreeMap$NavigableSubMap" -> "java.util.AbstractMap"
"java.util.LinkedList$ListItr" -> "java.lang.Object"
"java.util.LinkedList$ListItr" -> "java.util.Iterator"
"java.time.ZonedDateTime$1" -> "java.lang.Object"
"java.util.Collections$SingletonSet" -> "java.util.AbstractSet"
"java.util.MissingResourceException" -> "java.lang.RuntimeException"
"java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1" -> "java.lang.Object"
"java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1" -> "java.util.Iterator"
"java.util.ImmutableCollections$SetN$SetNIterator" -> "java.lang.Object"
"java.util.ImmutableCollections$SetN$SetNIterator" -> "java.util.Iterator"
"java.util.ImmutableCollections$Set12$1" -> "java.lang.Object"
"java.util.ImmutableCollections$Set12$1" -> "java.util.Iterator"
"java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry" -> "java.lang.Object"
"java.util.ResourceBundle$Control$CandidateListCache" -> "sun.util.locale.LocaleObjectCache"
"sun.util.resources.LocaleData$SupplementaryStrategy" -> "sun.util.resources.LocaleData$LocaleDataStrategy"
"java.time.chrono.ChronoZonedDateTime$1" -> "java.lang.Object"
"java.util.TreeMap$KeyIterator" -> "java.util.TreeMap$PrivateEntryIterator"
"sun.text.normalizer.UnicodeSetStringSpan$OffsetList" -> "java.lang.Object"
"java.util.stream.ReferencePipeline$StatelessOp" -> "java.util.stream.ReferencePipeline"
"java.util.stream.ReferencePipeline$2" -> "java.util.stream.ReferencePipeline$StatelessOp"
"java.util.stream.StreamShape" -> "java.lang.Enum"
"java.text.ChoiceFormat" -> "java.text.NumberFormat"
"java.text.DateFormat" -> "java.text.Format"
"sun.text.normalizer.UCharacterProperty" -> "java.lang.Object"
"java.text.AttributedString" -> "java.lang.Object"
"java.text.AttributedCharacterIterator$Attribute" -> "java.lang.Object"
"java.text.Format$Field" -> "java.text.AttributedCharacterIterator$Attribute"
"java.text.MessageFormat$Field" -> "java.text.Format$Field"
"java.text.SimpleDateFormat" -> "java.text.DateFormat"
"java.text.CharacterIteratorFieldDelegate" -> "java.lang.Object"
"sun.util.locale.provider.JRELocaleProviderAdapter$$Lambda$99e20031274f3647473717703ce9ba8e80a8c5ff" -> "java.lang.Object"
"java.text.DontCareFieldPosition" -> "java.text.FieldPosition"
"java.text.NumberFormat$Field" -> "java.text.Format$Field"
"jdk.internal.math.FloatingDecimal$PreparedASCIIToBinaryBuffer" -> "java.lang.Object"
"java.text.DigitList$1" -> "java.lang.Object"
"jdk.internal.math.FloatingDecimal$ASCIIToBinaryBuffer" -> "java.lang.Object"
"jdk.internal.math.FloatingDecimal$HexFloatPattern" -> "java.lang.Object"
"java.text.DecimalFormat$DigitArrays" -> "java.lang.Object"
"java.lang.ref.Cleaner$1" -> "java.lang.Object"
"java.lang.ref.Cleaner$1" -> "java.util.function.Function"
"sun.util.resources.cldr.CurrencyNames_en" -> "sun.util.resources.OpenListResourceBundle"
"java.util.ListResourceBundle" -> "java.util.ResourceBundle"
"sun.util.resources.BreakIteratorResourceBundle" -> "java.util.ResourceBundle"
"sun.text.resources.CollationData" -> "java.util.ListResourceBundle"
"sun.util.resources.cldr.CalendarData" -> "java.util.ListResourceBundle"
"sun.text.resources.BreakIteratorInfo" -> "java.util.ListResourceBundle"
"sun.util.resources.cldr.LocaleNames_en" -> "sun.util.resources.OpenListResourceBundle"
"sun.text.resources.BreakIteratorResources" -> "sun.util.resources.BreakIteratorResourceBundle"
"sun.util.logging.resources.logging" -> "java.util.ListResourceBundle"
"sun.util.resources.cldr.TimeZoneNames_en" -> "sun.util.resources.TimeZoneNamesBundle"
"sun.text.resources.cldr.FormatData_en" -> "java.util.ListResourceBundle"
"sun.util.resources.TimeZoneNames_en" -> "sun.util.resources.TimeZoneNamesBundle"
"sun.util.locale.provider.DateFormatProviderImpl$$Lambda$2bcf13c4edfd045f3213435bf07b05f29c6a7847" -> "java.lang.Object"
"sun.util.locale.provider.DateFormatProviderImpl$$Lambda$2bcf13c4edfd045f3213435bf07b05f29c6a7847" -> "java.util.function.Function"
"sun.util.locale.provider.DateFormatProviderImpl$$Lambda$e3119750bb1abf49272813372d3b19923bd2d9c7" -> "java.lang.Object"
"java.util.Collections$1" -> "java.lang.Object"
"java.util.Collections$1" -> "java.util.Iterator"
"java.text.AttributedString$AttributedStringIterator" -> "java.lang.Object"
"java.text.DateFormat$Field" -> "java.text.Format$Field"
"java.text.Annotation" -> "java.lang.Object"
"java.text.CalendarBuilder" -> "java.lang.Object"
"java.text.FieldPosition$Delegate" -> "java.lang.Object"
"java.util.stream.ForEachOps" -> "java.lang.Object"
"java.util.stream.Sink" -> "java.util.function.Consumer"
"java.util.stream.TerminalSink" -> "java.util.stream.Sink"
"java.util.stream.TerminalSink" -> "java.util.function.Consumer"
"java.util.stream.ForEachOps$ForEachOp" -> "java.lang.Object"
"java.util.stream.ForEachOps$ForEachOp" -> "java.util.stream.TerminalOp"
"java.util.stream.ForEachOps$ForEachOp" -> "java.util.stream.Sink"
"java.util.stream.ForEachOps$ForEachOp" -> "java.util.function.Consumer"
"java.util.stream.ForEachOps$ForEachOp$OfRef" -> "java.util.stream.ForEachOps$ForEachOp"
"java.util.AbstractMap$SimpleEntry" -> "java.lang.Object"
"java.util.stream.AbstractPipeline$$Lambda$0848cc7fae25ca52d114897d5d8625b227675611" -> "java.lang.Object"
"sun.util.locale.provider.CalendarDataUtility$CalendarFieldValueNameGetter" -> "java.lang.Object"
"java.text.DontCareFieldPosition$1" -> "java.lang.Object"
"sun.util.resources.cldr.TimeZoneNames" -> "sun.util.resources.TimeZoneNamesBundle"
"sun.util.resources.cldr.CurrencyNames" -> "sun.util.resources.OpenListResourceBundle"
"sun.util.resources.cldr.LocaleNames" -> "sun.util.resources.OpenListResourceBundle"
"sun.util.resources.BreakIteratorResourceBundle$$Lambda$29241f59fef59232ee7e585e58a145204ccb905f" -> "java.lang.Object"
"sun.util.resources.TimeZoneNames" -> "sun.util.resources.TimeZoneNamesBundle"
"sun.text.resources.cldr.FormatData" -> "java.util.ListResourceBundle"
"java.util.Vector$Itr" -> "java.lang.Object"
"java.util.Vector$Itr" -> "java.util.Iterator"
"java.util.Vector$ListItr" -> "java.util.Vector$Itr"
"java.util.Vector$ListItr" -> "java.util.Iterator"
"java.text.AttributedString$AttributeMap" -> "java.util.AbstractMap"
"java.util.concurrent.ForkJoinTask" -> "java.lang.Object"
"java.util.concurrent.CountedCompleter" -> "java.util.concurrent.ForkJoinTask"
"java.util.stream.ForEachOps$ForEachOrderedTask" -> "java.util.concurrent.CountedCompleter"
"java.util.stream.ForEachOps$ForEachTask" -> "java.util.concurrent.CountedCompleter"
"java.util.stream.Sink$ChainedReference" -> "java.lang.Object"
"java.util.stream.Sink$ChainedReference" -> "java.util.stream.Sink"
"java.util.stream.Sink$ChainedReference" -> "java.util.function.Consumer"
"java.util.stream.ReferencePipeline$2$1" -> "java.util.stream.Sink$ChainedReference"
"java.util.concurrent.ForkJoinWorkerThread" -> "java.lang.Thread"
"java.text.AttributeEntry" -> "java.lang.Object"
"java.util.stream.AbstractTask" -> "java.util.concurrent.CountedCompleter"
"java.util.concurrent.AbstractExecutorService" -> "java.lang.Object"
"java.util.concurrent.ForkJoinPool" -> "java.util.concurrent.AbstractExecutorService"
"java.util.concurrent.ForkJoinPool$WorkQueue" -> "java.lang.Object"
"java.util.concurrent.ForkJoinTask$ExceptionNode" -> "java.lang.ref.WeakReference"
"java.util.concurrent.CancellationException" -> "java.lang.IllegalStateException"
"java.util.stream.Node$Builder" -> "java.util.stream.Sink"
"java.util.stream.Node$Builder" -> "java.util.function.Consumer"
"java.util.stream.ForEachOps$ForEachOrderedTask$$Lambda$242d4f41746b10ebce6280a5b40c1f2227637a1a" -> "java.lang.Object"
"java.util.stream.Nodes" -> "java.lang.Object"
"java.util.stream.Nodes$ArrayNode" -> "java.lang.Object"
"java.util.stream.Nodes$ArrayNode" -> "java.util.stream.Node"
"com.oracle.svm.core.jdk.ForkJoinPoolCommonAccessor" -> "java.lang.Object"
"java.util.stream.Nodes$FixedNodeBuilder" -> "java.util.stream.Sink"
"java.util.stream.Nodes$FixedNodeBuilder" -> "java.util.stream.Nodes$ArrayNode"
"java.util.stream.Nodes$FixedNodeBuilder" -> "java.util.function.Consumer"
"java.util.stream.AbstractSpinedBuffer" -> "java.lang.Object"
"java.util.stream.SpinedBuffer" -> "java.util.stream.AbstractSpinedBuffer"
"java.util.stream.SpinedBuffer" -> "java.lang.Iterable"
"java.util.stream.SpinedBuffer" -> "java.util.function.Consumer"
"java.util.stream.Nodes$SpinedNodeBuilder" -> "java.util.stream.SpinedBuffer"
"java.util.stream.Nodes$SpinedNodeBuilder" -> "java.util.stream.Node"
"java.util.stream.Nodes$SpinedNodeBuilder" -> "java.util.stream.Sink"
"java.util.stream.Nodes$SpinedNodeBuilder" -> "java.util.function.Consumer"
"com.oracle.svm.core.hub.DynamicHub$$Lambda$efebe82833294cf4e1aada08981530e42d833a0d" -> "java.lang.Object"
"java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory" -> "java.lang.Object"
"com.oracle.svm.core.hub.ClassForNameSupport" -> "java.lang.Object"
"java.util.concurrent.RejectedExecutionException" -> "java.lang.RuntimeException"
"java.lang.invoke.VarHandleLongs$FieldInstanceReadOnly" -> "java.lang.invoke.VarHandle"
"java.lang.invoke.VarHandleLongs" -> "java.lang.Object"
"java.lang.invoke.VarHandleLongs$FieldInstanceReadWrite" -> "java.lang.invoke.VarHandleLongs$FieldInstanceReadOnly"
"java.util.stream.SpinedBuffer$$Lambda$ba797fca8bd399214c854bec13715409e73fbab3" -> "java.lang.Object"
"java.util.stream.SpinedBuffer$$Lambda$ba797fca8bd399214c854bec13715409e73fbab3" -> "java.util.function.Consumer"
"java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1" -> "java.lang.Object"
"java.lang.invoke.VarHandleObjects$Array" -> "java.lang.invoke.VarHandle"
"jdk.internal.util.Preconditions$1" -> "java.lang.Object"
"jdk.internal.util.Preconditions$1" -> "java.util.function.BiFunction"
"java.lang.invoke.VarHandle$1" -> "java.lang.Object"
"java.lang.invoke.VarHandle$1" -> "java.util.function.Function"
"com.oracle.svm.core.handles.ObjectHandlesFeature$ObjectHandlesSupportImpl" -> "java.lang.Object"
"com.oracle.svm.core.handles.ObjectHandlesFeature" -> "java.lang.Object"
"com.oracle.svm.core.posix.thread.PosixJavaThreads$PthreadStartRoutinePrologue" -> "java.lang.Object"
"com.oracle.svm.core.jdk.management.ManagementSupport" -> "java.lang.Object"
"com.sun.management.ThreadMXBean" -> "java.lang.management.ThreadMXBean"
"com.oracle.svm.core.jdk.management.SubstrateThreadMXBean" -> "java.lang.Object"
"com.oracle.svm.core.jdk.management.SubstrateThreadMXBean" -> "java.lang.management.ThreadMXBean"
"com.oracle.svm.core.jdk.management.SubstrateThreadMXBean" -> "com.sun.management.ThreadMXBean"
"com.oracle.svm.core.jdk.management.SubstrateThreadMXBean$$Lambda$9deec51467ed924190ddbf105c4602d407ed2e18" -> "java.lang.Object"
"com.oracle.svm.core.jdk.management.SubstrateThreadMXBean$$Lambda$9deec51467ed924190ddbf105c4602d407ed2e18" -> "java.util.function.IntUnaryOperator"
"java.net.SocketException" -> "java.io.IOException"
"sun.net.ConnectionResetException" -> "java.net.SocketException"
"java.net.SocketTimeoutException" -> "java.io.InterruptedIOException"
"java.net.ProtocolException" -> "java.io.IOException"
"sun.nio.fs.UnixException" -> "java.lang.Exception"
"java.io.FileNotFoundException" -> "java.io.IOException"
"java.lang.IllegalAccessError" -> "java.lang.IncompatibleClassChangeError"
"java.net.ConnectException" -> "java.net.SocketException"
"java.io.SyncFailedException" -> "java.io.IOException"
"java.net.NoRouteToHostException" -> "java.net.SocketException"
"java.net.BindException" -> "java.net.SocketException"
"java.net.UnknownHostException" -> "java.io.IOException"
"java.net.PortUnreachableException" -> "java.net.SocketException"
"java.nio.charset.IllegalCharsetNameException" -> "java.lang.IllegalArgumentException"
"java.nio.charset.UnsupportedCharsetException" -> "java.lang.IllegalArgumentException"
"java.io.UnsupportedEncodingException" -> "java.io.IOException"
"sun.nio.cs.US_ASCII$Encoder" -> "java.nio.charset.CharsetEncoder"
"sun.nio.cs.US_ASCII$Decoder" -> "java.nio.charset.CharsetDecoder"
"sun.nio.cs.UTF_16BE" -> "sun.nio.cs.Unicode"
"sun.nio.cs.UTF_16" -> "sun.nio.cs.Unicode"
"sun.nio.cs.UTF_16LE" -> "sun.nio.cs.Unicode"
"com.oracle.svm.core.classinitialization.ClassInitializationInfo$ClassInitializerFunctionPointerHolder" -> "java.lang.Object"
"sun.nio.cs.UnicodeDecoder" -> "java.nio.charset.CharsetDecoder"
"sun.nio.cs.UTF_16BE$Decoder" -> "sun.nio.cs.UnicodeDecoder"
"sun.nio.cs.UTF_16$Decoder" -> "sun.nio.cs.UnicodeDecoder"
"java.io.FileInputStream$1" -> "java.lang.Object"
"sun.nio.cs.UTF_16LE$Decoder" -> "sun.nio.cs.UnicodeDecoder"
"sun.nio.cs.UnicodeEncoder" -> "java.nio.charset.CharsetEncoder"
"sun.nio.cs.UTF_16BE$Encoder" -> "sun.nio.cs.UnicodeEncoder"
"sun.nio.fs.Util" -> "java.lang.Object"
"sun.nio.cs.UTF_16$Encoder" -> "sun.nio.cs.UnicodeEncoder"
"sun.nio.cs.UTF_16LE$Encoder" -> "sun.nio.cs.UnicodeEncoder"
"sun.nio.fs.UnixNativeDispatcher$1" -> "java.lang.Object"
"com.oracle.svm.reflect.DelegatingMethodHandle_getTarget_09ff06e76d1532eb2430b2fc860c31e389e92b28" -> "java.lang.reflect.Proxy"
"sun.nio.fs.UnixMountEntry" -> "java.lang.Object"
"sun.nio.fs.UnixFileAttributes" -> "java.lang.Object"
"sun.nio.fs.UnixFileStoreAttributes" -> "java.lang.Object"
}
